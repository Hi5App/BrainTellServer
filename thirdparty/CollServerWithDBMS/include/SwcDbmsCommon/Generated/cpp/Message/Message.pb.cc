// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message/Message.proto

#include "Message/Message.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
PROTOBUF_CONSTEXPR MetaInfoBase::MetaInfoBase(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_._id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.dataaccessmodelversion_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.uuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct MetaInfoBaseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR MetaInfoBaseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~MetaInfoBaseDefaultTypeInternal() {}
  union {
    MetaInfoBase _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 MetaInfoBaseDefaultTypeInternal _MetaInfoBase_default_instance_;
PROTOBUF_CONSTEXPR BrainTellServerMysqlDBCompatibleData::BrainTellServerMysqlDBCompatibleData(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.email_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.nickname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.appkey_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.score_)*/0
  , /*decltype(_impl_.isdeleted_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BrainTellServerMysqlDBCompatibleDataDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BrainTellServerMysqlDBCompatibleDataDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BrainTellServerMysqlDBCompatibleDataDefaultTypeInternal() {}
  union {
    BrainTellServerMysqlDBCompatibleData _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BrainTellServerMysqlDBCompatibleDataDefaultTypeInternal _BrainTellServerMysqlDBCompatibleData_default_instance_;
PROTOBUF_CONSTEXPR UserMetaInfoV1::UserMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.headphotobindata_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.userpermissiongroup_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.createtime_)*/nullptr
  , /*decltype(_impl_.compatibledata_)*/nullptr
  , /*decltype(_impl_.userid_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserMetaInfoV1DefaultTypeInternal() {}
  union {
    UserMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserMetaInfoV1DefaultTypeInternal _UserMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR GlobalPermissionMetaInfoV1::GlobalPermissionMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.writepermissioncreateproject_)*/false
  , /*decltype(_impl_.writepermissionmodifyproject_)*/false
  , /*decltype(_impl_.writepermissiondeleteproject_)*/false
  , /*decltype(_impl_.readperimissionquery_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GlobalPermissionMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR GlobalPermissionMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GlobalPermissionMetaInfoV1DefaultTypeInternal() {}
  union {
    GlobalPermissionMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GlobalPermissionMetaInfoV1DefaultTypeInternal _GlobalPermissionMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR ProjectPermissionMetaInfoV1::ProjectPermissionMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.writepermissionadddata_)*/false
  , /*decltype(_impl_.writepermissionmodifydata_)*/false
  , /*decltype(_impl_.writepermissiondeletedata_)*/false
  , /*decltype(_impl_.readperimissionquery_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProjectPermissionMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectPermissionMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectPermissionMetaInfoV1DefaultTypeInternal() {}
  union {
    ProjectPermissionMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectPermissionMetaInfoV1DefaultTypeInternal _ProjectPermissionMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR PermissionGroupMetaInfoV1::PermissionGroupMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.globalpermission_)*/nullptr
  , /*decltype(_impl_.projectpermission_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct PermissionGroupMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR PermissionGroupMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~PermissionGroupMetaInfoV1DefaultTypeInternal() {}
  union {
    PermissionGroupMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 PermissionGroupMetaInfoV1DefaultTypeInternal _PermissionGroupMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR UserPermissionOverrideMetaInfoV1::UserPermissionOverrideMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.username_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.projectpermission_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserPermissionOverrideMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserPermissionOverrideMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserPermissionOverrideMetaInfoV1DefaultTypeInternal() {}
  union {
    UserPermissionOverrideMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserPermissionOverrideMetaInfoV1DefaultTypeInternal _UserPermissionOverrideMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR ProjectMetaInfoV1::ProjectMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swclist_)*/{}
  , /*decltype(_impl_.userpermissionoverride_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.creator_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.workmode_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.createtime_)*/nullptr
  , /*decltype(_impl_.lastmodifiedtime_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ProjectMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ProjectMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ProjectMetaInfoV1DefaultTypeInternal() {}
  union {
    ProjectMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ProjectMetaInfoV1DefaultTypeInternal _ProjectMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR SwcSnapshotMetaInfoV1::SwcSnapshotMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcsnapshotcollectionname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.creator_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.createtime_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcSnapshotMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcSnapshotMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcSnapshotMetaInfoV1DefaultTypeInternal() {}
  union {
    SwcSnapshotMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcSnapshotMetaInfoV1DefaultTypeInternal _SwcSnapshotMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR SwcIncrementOperationMetaInfoV1::SwcIncrementOperationMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.incrementoperationcollectionname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.startsnapshot_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.createtime_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcIncrementOperationMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcIncrementOperationMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcIncrementOperationMetaInfoV1DefaultTypeInternal() {}
  union {
    SwcIncrementOperationMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcIncrementOperationMetaInfoV1DefaultTypeInternal _SwcIncrementOperationMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR SwcIncrementOperationV1::SwcIncrementOperationV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.createtime_)*/nullptr
  , /*decltype(_impl_.swcdata_)*/nullptr
  , /*decltype(_impl_.incrementoperation_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcIncrementOperationV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcIncrementOperationV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcIncrementOperationV1DefaultTypeInternal() {}
  union {
    SwcIncrementOperationV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcIncrementOperationV1DefaultTypeInternal _SwcIncrementOperationV1_default_instance_;
PROTOBUF_CONSTEXPR SwcIncrementOperationListV1::SwcIncrementOperationListV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcincrementoperation_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcIncrementOperationListV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcIncrementOperationListV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcIncrementOperationListV1DefaultTypeInternal() {}
  union {
    SwcIncrementOperationListV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcIncrementOperationListV1DefaultTypeInternal _SwcIncrementOperationListV1_default_instance_;
PROTOBUF_CONSTEXPR SwcAttachmentAnoMetaInfoV1::SwcAttachmentAnoMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.attachmentuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcAttachmentAnoMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcAttachmentAnoMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcAttachmentAnoMetaInfoV1DefaultTypeInternal() {}
  union {
    SwcAttachmentAnoMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcAttachmentAnoMetaInfoV1DefaultTypeInternal _SwcAttachmentAnoMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR SwcAttachmentApoMetaInfoV1::SwcAttachmentApoMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.attachmentuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcAttachmentApoMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcAttachmentApoMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcAttachmentApoMetaInfoV1DefaultTypeInternal() {}
  union {
    SwcAttachmentApoMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcAttachmentApoMetaInfoV1DefaultTypeInternal _SwcAttachmentApoMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR SwcMetaInfoV1::SwcMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcsnapshotmetainfolist_)*/{}
  , /*decltype(_impl_.swcincrementoperationmetainfolist_)*/{}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.creator_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.swctype_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.currentincrementoperationcollectionname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.createtime_)*/nullptr
  , /*decltype(_impl_.lastmodifiedtime_)*/nullptr
  , /*decltype(_impl_.swcattachmentanometainfo_)*/nullptr
  , /*decltype(_impl_.swcattachmentapometainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcMetaInfoV1DefaultTypeInternal() {}
  union {
    SwcMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcMetaInfoV1DefaultTypeInternal _SwcMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR SwcNodeInternalDataV1::SwcNodeInternalDataV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.n_)*/0
  , /*decltype(_impl_.type_)*/0
  , /*decltype(_impl_.x_)*/0
  , /*decltype(_impl_.y_)*/0
  , /*decltype(_impl_.z_)*/0
  , /*decltype(_impl_.radius_)*/0
  , /*decltype(_impl_.parent_)*/0
  , /*decltype(_impl_.seg_id_)*/0
  , /*decltype(_impl_.level_)*/0
  , /*decltype(_impl_.mode_)*/0
  , /*decltype(_impl_.timestamp_)*/0
  , /*decltype(_impl_.feature_value_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcNodeInternalDataV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcNodeInternalDataV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcNodeInternalDataV1DefaultTypeInternal() {}
  union {
    SwcNodeInternalDataV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcNodeInternalDataV1DefaultTypeInternal _SwcNodeInternalDataV1_default_instance_;
PROTOBUF_CONSTEXPR SwcNodeDataV1::SwcNodeDataV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.creator_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.checkeruseruuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.swcnodeinternaldata_)*/nullptr
  , /*decltype(_impl_.createtime_)*/nullptr
  , /*decltype(_impl_.lastmodifiedtime_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcNodeDataV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcNodeDataV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcNodeDataV1DefaultTypeInternal() {}
  union {
    SwcNodeDataV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcNodeDataV1DefaultTypeInternal _SwcNodeDataV1_default_instance_;
PROTOBUF_CONSTEXPR SwcDataV1::SwcDataV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcdata_)*/{}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcDataV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcDataV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcDataV1DefaultTypeInternal() {}
  union {
    SwcDataV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcDataV1DefaultTypeInternal _SwcDataV1_default_instance_;
PROTOBUF_CONSTEXPR DailyStatisticsMetaInfoV1::DailyStatisticsMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.description_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.day_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.createdprojectnumber_)*/0
  , /*decltype(_impl_.createdswcnumber_)*/0
  , /*decltype(_impl_.createswcnodenumber_)*/0
  , /*decltype(_impl_.deletedprojectnumber_)*/0
  , /*decltype(_impl_.deletedswcnumber_)*/0
  , /*decltype(_impl_.deletedswcnodenumber_)*/0
  , /*decltype(_impl_.modifiedprojectnumber_)*/0
  , /*decltype(_impl_.modifiedswcnumber_)*/0
  , /*decltype(_impl_.modifiedswcnodenumber_)*/0
  , /*decltype(_impl_.projectquerynumber_)*/0
  , /*decltype(_impl_.swcquerynumber_)*/0
  , /*decltype(_impl_.nodequerynumber_)*/0
  , /*decltype(_impl_.activeusernumber_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DailyStatisticsMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR DailyStatisticsMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DailyStatisticsMetaInfoV1DefaultTypeInternal() {}
  union {
    DailyStatisticsMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DailyStatisticsMetaInfoV1DefaultTypeInternal _DailyStatisticsMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR UserVerifyInfoV1::UserVerifyInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.username_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.usertoken_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.userpassword_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserVerifyInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserVerifyInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserVerifyInfoV1DefaultTypeInternal() {}
  union {
    UserVerifyInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserVerifyInfoV1DefaultTypeInternal _UserVerifyInfoV1_default_instance_;
PROTOBUF_CONSTEXPR RequestMetaInfoV1::RequestMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.apiversion_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RequestMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR RequestMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RequestMetaInfoV1DefaultTypeInternal() {}
  union {
    RequestMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RequestMetaInfoV1DefaultTypeInternal _RequestMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR ResponseMetaInfoV1::ResponseMetaInfoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.id_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.message_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.status_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ResponseMetaInfoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR ResponseMetaInfoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ResponseMetaInfoV1DefaultTypeInternal() {}
  union {
    ResponseMetaInfoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ResponseMetaInfoV1DefaultTypeInternal _ResponseMetaInfoV1_default_instance_;
PROTOBUF_CONSTEXPR SwcAttachmentAnoV1::SwcAttachmentAnoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.apofile_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.swcfile_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcAttachmentAnoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcAttachmentAnoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcAttachmentAnoV1DefaultTypeInternal() {}
  union {
    SwcAttachmentAnoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcAttachmentAnoV1DefaultTypeInternal _SwcAttachmentAnoV1_default_instance_;
PROTOBUF_CONSTEXPR SwcAttachmentApoV1::SwcAttachmentApoV1(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.orderinfo_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.name_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.comment_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.base_)*/nullptr
  , /*decltype(_impl_.n_)*/0
  , /*decltype(_impl_.z_)*/0
  , /*decltype(_impl_.x_)*/0
  , /*decltype(_impl_.y_)*/0
  , /*decltype(_impl_.pixmax_)*/0
  , /*decltype(_impl_.intensity_)*/0
  , /*decltype(_impl_.sdev_)*/0
  , /*decltype(_impl_.volsize_)*/0
  , /*decltype(_impl_.mass_)*/0
  , /*decltype(_impl_.colorr_)*/0
  , /*decltype(_impl_.colorg_)*/0
  , /*decltype(_impl_.colorb_)*/0
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct SwcAttachmentApoV1DefaultTypeInternal {
  PROTOBUF_CONSTEXPR SwcAttachmentApoV1DefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~SwcAttachmentApoV1DefaultTypeInternal() {}
  union {
    SwcAttachmentApoV1 _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SwcAttachmentApoV1DefaultTypeInternal _SwcAttachmentApoV1_default_instance_;
}  // namespace proto
static ::_pb::Metadata file_level_metadata_Message_2fMessage_2eproto[24];
static const ::_pb::EnumDescriptor* file_level_enum_descriptors_Message_2fMessage_2eproto[1];
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Message_2fMessage_2eproto = nullptr;

const uint32_t TableStruct_Message_2fMessage_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::MetaInfoBase, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::MetaInfoBase, _impl_._id_),
  PROTOBUF_FIELD_OFFSET(::proto::MetaInfoBase, _impl_.dataaccessmodelversion_),
  PROTOBUF_FIELD_OFFSET(::proto::MetaInfoBase, _impl_.uuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::BrainTellServerMysqlDBCompatibleData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::BrainTellServerMysqlDBCompatibleData, _impl_.email_),
  PROTOBUF_FIELD_OFFSET(::proto::BrainTellServerMysqlDBCompatibleData, _impl_.nickname_),
  PROTOBUF_FIELD_OFFSET(::proto::BrainTellServerMysqlDBCompatibleData, _impl_.score_),
  PROTOBUF_FIELD_OFFSET(::proto::BrainTellServerMysqlDBCompatibleData, _impl_.appkey_),
  PROTOBUF_FIELD_OFFSET(::proto::BrainTellServerMysqlDBCompatibleData, _impl_.isdeleted_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.password_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.createtime_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.headphotobindata_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.userpermissiongroup_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.userid_),
  PROTOBUF_FIELD_OFFSET(::proto::UserMetaInfoV1, _impl_.compatibledata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GlobalPermissionMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GlobalPermissionMetaInfoV1, _impl_.writepermissioncreateproject_),
  PROTOBUF_FIELD_OFFSET(::proto::GlobalPermissionMetaInfoV1, _impl_.writepermissionmodifyproject_),
  PROTOBUF_FIELD_OFFSET(::proto::GlobalPermissionMetaInfoV1, _impl_.writepermissiondeleteproject_),
  PROTOBUF_FIELD_OFFSET(::proto::GlobalPermissionMetaInfoV1, _impl_.readperimissionquery_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ProjectPermissionMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ProjectPermissionMetaInfoV1, _impl_.writepermissionadddata_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectPermissionMetaInfoV1, _impl_.writepermissionmodifydata_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectPermissionMetaInfoV1, _impl_.writepermissiondeletedata_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectPermissionMetaInfoV1, _impl_.readperimissionquery_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::PermissionGroupMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::PermissionGroupMetaInfoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::PermissionGroupMetaInfoV1, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::proto::PermissionGroupMetaInfoV1, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::proto::PermissionGroupMetaInfoV1, _impl_.globalpermission_),
  PROTOBUF_FIELD_OFFSET(::proto::PermissionGroupMetaInfoV1, _impl_.projectpermission_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserPermissionOverrideMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserPermissionOverrideMetaInfoV1, _impl_.projectpermission_),
  PROTOBUF_FIELD_OFFSET(::proto::UserPermissionOverrideMetaInfoV1, _impl_.username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.creator_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.createtime_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.lastmodifiedtime_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.swclist_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.userpermissionoverride_),
  PROTOBUF_FIELD_OFFSET(::proto::ProjectMetaInfoV1, _impl_.workmode_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcSnapshotMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcSnapshotMetaInfoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcSnapshotMetaInfoV1, _impl_.swcsnapshotcollectionname_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcSnapshotMetaInfoV1, _impl_.createtime_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcSnapshotMetaInfoV1, _impl_.creator_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcIncrementOperationMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcIncrementOperationMetaInfoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcIncrementOperationMetaInfoV1, _impl_.incrementoperationcollectionname_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcIncrementOperationMetaInfoV1, _impl_.startsnapshot_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcIncrementOperationMetaInfoV1, _impl_.createtime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcIncrementOperationV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcIncrementOperationV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcIncrementOperationV1, _impl_.createtime_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcIncrementOperationV1, _impl_.incrementoperation_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcIncrementOperationV1, _impl_.swcdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcIncrementOperationListV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcIncrementOperationListV1, _impl_.swcincrementoperation_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentAnoMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentAnoMetaInfoV1, _impl_.attachmentuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoMetaInfoV1, _impl_.attachmentuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.creator_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.swctype_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.createtime_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.lastmodifiedtime_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.swcsnapshotmetainfolist_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.swcincrementoperationmetainfolist_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.currentincrementoperationcollectionname_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.swcattachmentanometainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcMetaInfoV1, _impl_.swcattachmentapometainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _impl_.n_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _impl_.type_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _impl_.z_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _impl_.radius_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _impl_.parent_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _impl_.seg_id_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _impl_.level_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _impl_.mode_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _impl_.timestamp_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeInternalDataV1, _impl_.feature_value_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.swcnodeinternaldata_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.creator_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.createtime_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.lastmodifiedtime_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcNodeDataV1, _impl_.checkeruseruuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcDataV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcDataV1, _impl_.swcdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.description_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.day_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.createdprojectnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.createdswcnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.createswcnodenumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.deletedprojectnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.deletedswcnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.deletedswcnodenumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.modifiedprojectnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.modifiedswcnumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.modifiedswcnodenumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.projectquerynumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.swcquerynumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.nodequerynumber_),
  PROTOBUF_FIELD_OFFSET(::proto::DailyStatisticsMetaInfoV1, _impl_.activeusernumber_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserVerifyInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserVerifyInfoV1, _impl_.username_),
  PROTOBUF_FIELD_OFFSET(::proto::UserVerifyInfoV1, _impl_.usertoken_),
  PROTOBUF_FIELD_OFFSET(::proto::UserVerifyInfoV1, _impl_.userpassword_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::RequestMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::RequestMetaInfoV1, _impl_.apiversion_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ResponseMetaInfoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ResponseMetaInfoV1, _impl_.status_),
  PROTOBUF_FIELD_OFFSET(::proto::ResponseMetaInfoV1, _impl_.id_),
  PROTOBUF_FIELD_OFFSET(::proto::ResponseMetaInfoV1, _impl_.message_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentAnoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentAnoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentAnoV1, _impl_.apofile_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentAnoV1, _impl_.swcfile_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.base_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.n_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.orderinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.name_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.comment_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.z_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.x_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.y_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.pixmax_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.intensity_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.sdev_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.volsize_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.mass_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.colorr_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.colorg_),
  PROTOBUF_FIELD_OFFSET(::proto::SwcAttachmentApoV1, _impl_.colorb_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::MetaInfoBase)},
  { 9, -1, -1, sizeof(::proto::BrainTellServerMysqlDBCompatibleData)},
  { 20, -1, -1, sizeof(::proto::UserMetaInfoV1)},
  { 35, -1, -1, sizeof(::proto::GlobalPermissionMetaInfoV1)},
  { 45, -1, -1, sizeof(::proto::ProjectPermissionMetaInfoV1)},
  { 55, -1, -1, sizeof(::proto::PermissionGroupMetaInfoV1)},
  { 66, -1, -1, sizeof(::proto::UserPermissionOverrideMetaInfoV1)},
  { 74, -1, -1, sizeof(::proto::ProjectMetaInfoV1)},
  { 89, -1, -1, sizeof(::proto::SwcSnapshotMetaInfoV1)},
  { 99, -1, -1, sizeof(::proto::SwcIncrementOperationMetaInfoV1)},
  { 109, -1, -1, sizeof(::proto::SwcIncrementOperationV1)},
  { 119, -1, -1, sizeof(::proto::SwcIncrementOperationListV1)},
  { 126, -1, -1, sizeof(::proto::SwcAttachmentAnoMetaInfoV1)},
  { 133, -1, -1, sizeof(::proto::SwcAttachmentApoMetaInfoV1)},
  { 140, -1, -1, sizeof(::proto::SwcMetaInfoV1)},
  { 158, -1, -1, sizeof(::proto::SwcNodeInternalDataV1)},
  { 176, -1, -1, sizeof(::proto::SwcNodeDataV1)},
  { 188, -1, -1, sizeof(::proto::SwcDataV1)},
  { 195, -1, -1, sizeof(::proto::DailyStatisticsMetaInfoV1)},
  { 218, -1, -1, sizeof(::proto::UserVerifyInfoV1)},
  { 227, -1, -1, sizeof(::proto::RequestMetaInfoV1)},
  { 234, -1, -1, sizeof(::proto::ResponseMetaInfoV1)},
  { 243, -1, -1, sizeof(::proto::SwcAttachmentAnoV1)},
  { 252, -1, -1, sizeof(::proto::SwcAttachmentApoV1)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::_MetaInfoBase_default_instance_._instance,
  &::proto::_BrainTellServerMysqlDBCompatibleData_default_instance_._instance,
  &::proto::_UserMetaInfoV1_default_instance_._instance,
  &::proto::_GlobalPermissionMetaInfoV1_default_instance_._instance,
  &::proto::_ProjectPermissionMetaInfoV1_default_instance_._instance,
  &::proto::_PermissionGroupMetaInfoV1_default_instance_._instance,
  &::proto::_UserPermissionOverrideMetaInfoV1_default_instance_._instance,
  &::proto::_ProjectMetaInfoV1_default_instance_._instance,
  &::proto::_SwcSnapshotMetaInfoV1_default_instance_._instance,
  &::proto::_SwcIncrementOperationMetaInfoV1_default_instance_._instance,
  &::proto::_SwcIncrementOperationV1_default_instance_._instance,
  &::proto::_SwcIncrementOperationListV1_default_instance_._instance,
  &::proto::_SwcAttachmentAnoMetaInfoV1_default_instance_._instance,
  &::proto::_SwcAttachmentApoMetaInfoV1_default_instance_._instance,
  &::proto::_SwcMetaInfoV1_default_instance_._instance,
  &::proto::_SwcNodeInternalDataV1_default_instance_._instance,
  &::proto::_SwcNodeDataV1_default_instance_._instance,
  &::proto::_SwcDataV1_default_instance_._instance,
  &::proto::_DailyStatisticsMetaInfoV1_default_instance_._instance,
  &::proto::_UserVerifyInfoV1_default_instance_._instance,
  &::proto::_RequestMetaInfoV1_default_instance_._instance,
  &::proto::_ResponseMetaInfoV1_default_instance_._instance,
  &::proto::_SwcAttachmentAnoV1_default_instance_._instance,
  &::proto::_SwcAttachmentApoV1_default_instance_._instance,
};

const char descriptor_table_protodef_Message_2fMessage_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025Message/Message.proto\022\005proto\032\037google/p"
  "rotobuf/timestamp.proto\"I\n\014MetaInfoBase\022"
  "\013\n\003_id\030\001 \001(\t\022\036\n\026DataAccessModelVersion\030\002"
  " \001(\t\022\014\n\004Uuid\030\003 \001(\t\"y\n$BrainTellServerMys"
  "qlDBCompatibleData\022\r\n\005Email\030\001 \001(\t\022\020\n\010Nic"
  "kName\030\002 \001(\t\022\r\n\005Score\030\003 \001(\005\022\016\n\006AppKey\030\004 \001"
  "(\t\022\021\n\tIsDeleted\030\005 \001(\005\"\244\002\n\016UserMetaInfoV1"
  "\022!\n\004Base\030\001 \001(\0132\023.proto.MetaInfoBase\022\014\n\004N"
  "ame\030\002 \001(\t\022\020\n\010Password\030\003 \001(\t\022\023\n\013Descripti"
  "on\030\004 \001(\t\022.\n\nCreateTime\030\005 \001(\0132\032.google.pr"
  "otobuf.Timestamp\022\030\n\020HeadPhotoBinData\030\006 \001"
  "(\014\022\033\n\023UserPermissionGroup\030\007 \001(\t\022\016\n\006UserI"
  "d\030\010 \001(\005\022C\n\016CompatibleData\030\t \001(\0132+.proto."
  "BrainTellServerMysqlDBCompatibleData\"\254\001\n"
  "\032GlobalPermissionMetaInfoV1\022$\n\034WritePerm"
  "issionCreateProject\030\001 \001(\010\022$\n\034WritePermis"
  "sionModifyProject\030\002 \001(\010\022$\n\034WritePermissi"
  "onDeleteProject\030\003 \001(\010\022\034\n\024ReadPerimission"
  "Query\030\004 \001(\010\"\241\001\n\033ProjectPermissionMetaInf"
  "oV1\022\036\n\026WritePermissionAddData\030\001 \001(\010\022!\n\031W"
  "ritePermissionModifyData\030\002 \001(\010\022!\n\031WriteP"
  "ermissionDeleteData\030\003 \001(\010\022\034\n\024ReadPerimis"
  "sionQuery\030\004 \001(\010\"\335\001\n\031PermissionGroupMetaI"
  "nfoV1\022!\n\004Base\030\001 \001(\0132\023.proto.MetaInfoBase"
  "\022\014\n\004Name\030\002 \001(\t\022\023\n\013Description\030\003 \001(\t\022;\n\020G"
  "lobalPermission\030\004 \001(\0132!.proto.GlobalPerm"
  "issionMetaInfoV1\022=\n\021ProjectPermission\030\005 "
  "\001(\0132\".proto.ProjectPermissionMetaInfoV1\""
  "s\n UserPermissionOverrideMetaInfoV1\022=\n\021P"
  "rojectPermission\030\001 \001(\0132\".proto.ProjectPe"
  "rmissionMetaInfoV1\022\020\n\010UserName\030\002 \001(\t\"\274\002\n"
  "\021ProjectMetaInfoV1\022!\n\004Base\030\001 \001(\0132\023.proto"
  ".MetaInfoBase\022\014\n\004Name\030\002 \001(\t\022\023\n\013Descripti"
  "on\030\003 \001(\t\022\017\n\007Creator\030\004 \001(\t\022.\n\nCreateTime\030"
  "\005 \001(\0132\032.google.protobuf.Timestamp\0224\n\020Las"
  "tModifiedTime\030\006 \001(\0132\032.google.protobuf.Ti"
  "mestamp\022\017\n\007SwcList\030\007 \003(\t\022G\n\026UserPermissi"
  "onOverride\030\010 \003(\0132\'.proto.UserPermissionO"
  "verrideMetaInfoV1\022\020\n\010WorkMode\030\t \001(\t\"\236\001\n\025"
  "SwcSnapshotMetaInfoV1\022!\n\004Base\030\001 \001(\0132\023.pr"
  "oto.MetaInfoBase\022!\n\031SwcSnapshotCollectio"
  "nName\030\002 \001(\t\022.\n\nCreateTime\030\003 \001(\0132\032.google"
  ".protobuf.Timestamp\022\017\n\007Creator\030\004 \001(\t\"\265\001\n"
  "\037SwcIncrementOperationMetaInfoV1\022!\n\004Base"
  "\030\001 \001(\0132\023.proto.MetaInfoBase\022(\n Increment"
  "OperationCollectionName\030\002 \001(\t\022\025\n\rStartSn"
  "apshot\030\003 \001(\t\022.\n\nCreateTime\030\004 \001(\0132\032.googl"
  "e.protobuf.Timestamp\"\310\001\n\027SwcIncrementOpe"
  "rationV1\022!\n\004Base\030\001 \001(\0132\023.proto.MetaInfoB"
  "ase\022.\n\nCreateTime\030\002 \001(\0132\032.google.protobu"
  "f.Timestamp\0227\n\022IncrementOperation\030\003 \001(\0162"
  "\033.proto.IncrementOperationV1\022!\n\007SwcData\030"
  "\004 \001(\0132\020.proto.SwcDataV1\"\\\n\033SwcIncrementO"
  "perationListV1\022=\n\025SwcIncrementOperation\030"
  "\001 \003(\0132\036.proto.SwcIncrementOperationV1\"4\n"
  "\032SwcAttachmentAnoMetaInfoV1\022\026\n\016Attachmen"
  "tUuid\030\001 \001(\t\"4\n\032SwcAttachmentApoMetaInfoV"
  "1\022\026\n\016AttachmentUuid\030\001 \001(\t\"\252\004\n\rSwcMetaInf"
  "oV1\022!\n\004Base\030\001 \001(\0132\023.proto.MetaInfoBase\022\014"
  "\n\004Name\030\002 \001(\t\022\023\n\013Description\030\003 \001(\t\022\017\n\007Cre"
  "ator\030\004 \001(\t\022\017\n\007SwcType\030\005 \001(\t\022.\n\nCreateTim"
  "e\030\006 \001(\0132\032.google.protobuf.Timestamp\0224\n\020L"
  "astModifiedTime\030\007 \001(\0132\032.google.protobuf."
  "Timestamp\022=\n\027SwcSnapshotMetaInfoList\030\010 \003"
  "(\0132\034.proto.SwcSnapshotMetaInfoV1\022Q\n!SwcI"
  "ncrementOperationMetaInfoList\030\t \003(\0132&.pr"
  "oto.SwcIncrementOperationMetaInfoV1\022/\n\'C"
  "urrentIncrementOperationCollectionName\030\n"
  " \001(\t\022C\n\030SwcAttachmentAnoMetaInfo\030\013 \001(\0132!"
  ".proto.SwcAttachmentAnoMetaInfoV1\022C\n\030Swc"
  "AttachmentApoMetaInfo\030\014 \001(\0132!.proto.SwcA"
  "ttachmentApoMetaInfoV1\"\310\001\n\025SwcNodeIntern"
  "alDataV1\022\t\n\001N\030\001 \001(\005\022\014\n\004Type\030\002 \001(\005\022\t\n\001X\030\003"
  " \001(\002\022\t\n\001Y\030\004 \001(\002\022\t\n\001Z\030\005 \001(\002\022\016\n\006Radius\030\006 \001"
  "(\002\022\016\n\006Parent\030\007 \001(\005\022\016\n\006Seg_id\030\010 \001(\005\022\r\n\005Le"
  "vel\030\t \001(\005\022\014\n\004Mode\030\n \001(\005\022\021\n\tTimestamp\030\013 \001"
  "(\005\022\025\n\rFeature_value\030\014 \001(\005\"\375\001\n\rSwcNodeDat"
  "aV1\022!\n\004Base\030\001 \001(\0132\023.proto.MetaInfoBase\0229"
  "\n\023SwcNodeInternalData\030\002 \001(\0132\034.proto.SwcN"
  "odeInternalDataV1\022\017\n\007Creator\030\003 \001(\t\022.\n\nCr"
  "eateTime\030\004 \001(\0132\032.google.protobuf.Timesta"
  "mp\0224\n\020LastModifiedTime\030\005 \001(\0132\032.google.pr"
  "otobuf.Timestamp\022\027\n\017CheckerUserUuid\030\006 \001("
  "\t\"2\n\tSwcDataV1\022%\n\007SwcData\030\001 \003(\0132\024.proto."
  "SwcNodeDataV1\"\331\003\n\031DailyStatisticsMetaInf"
  "oV1\022!\n\004Base\030\001 \001(\0132\023.proto.MetaInfoBase\022\014"
  "\n\004Name\030\002 \001(\t\022\023\n\013Description\030\003 \001(\t\022\013\n\003Day"
  "\030\004 \001(\t\022\034\n\024CreatedProjectNumber\030\005 \001(\005\022\030\n\020"
  "CreatedSwcNumber\030\006 \001(\005\022\033\n\023CreateSwcNodeN"
  "umber\030\007 \001(\005\022\034\n\024DeletedProjectNumber\030\010 \001("
  "\005\022\030\n\020DeletedSwcNumber\030\t \001(\005\022\034\n\024DeletedSw"
  "cNodeNumber\030\n \001(\005\022\035\n\025ModifiedProjectNumb"
  "er\030\013 \001(\005\022\031\n\021ModifiedSwcNumber\030\014 \001(\005\022\035\n\025M"
  "odifiedSwcNodeNumber\030\r \001(\005\022\032\n\022ProjectQue"
  "ryNumber\030\016 \001(\005\022\026\n\016SwcQueryNumber\030\017 \001(\005\022\027"
  "\n\017NodeQueryNumber\030\020 \001(\005\022\030\n\020ActiveUserNum"
  "ber\030\021 \001(\005\"M\n\020UserVerifyInfoV1\022\020\n\010UserNam"
  "e\030\001 \001(\t\022\021\n\tUserToken\030\002 \001(\t\022\024\n\014UserPasswo"
  "rd\030\003 \001(\t\"\'\n\021RequestMetaInfoV1\022\022\n\nApiVers"
  "ion\030\001 \001(\t\"A\n\022ResponseMetaInfoV1\022\016\n\006Statu"
  "s\030\001 \001(\010\022\n\n\002Id\030\002 \001(\t\022\017\n\007Message\030\003 \001(\t\"Y\n\022"
  "SwcAttachmentAnoV1\022!\n\004Base\030\001 \001(\0132\023.proto"
  ".MetaInfoBase\022\017\n\007APOFILE\030\002 \001(\t\022\017\n\007SWCFIL"
  "E\030\003 \001(\t\"\225\002\n\022SwcAttachmentApoV1\022!\n\004Base\030\001"
  " \001(\0132\023.proto.MetaInfoBase\022\t\n\001N\030\002 \001(\005\022\021\n\t"
  "Orderinfo\030\003 \001(\t\022\014\n\004Name\030\004 \001(\t\022\017\n\007Comment"
  "\030\005 \001(\t\022\t\n\001Z\030\006 \001(\002\022\t\n\001X\030\007 \001(\002\022\t\n\001Y\030\010 \001(\002\022"
  "\016\n\006Pixmax\030\t \001(\002\022\021\n\tIntensity\030\n \001(\002\022\014\n\004Sd"
  "ev\030\013 \001(\002\022\017\n\007Volsize\030\014 \001(\002\022\014\n\004Mass\030\r \001(\002\022"
  "\016\n\006ColorR\030\016 \001(\005\022\016\n\006ColorG\030\017 \001(\005\022\016\n\006Color"
  "B\030\020 \001(\005*G\n\024IncrementOperationV1\022\013\n\007Unkno"
  "wn\020\000\022\n\n\006Create\020\001\022\n\n\006Delete\020\002\022\n\n\006Update\020\003"
  "B/Z-DBMS/SwcDbmsCommon/Generated/go/prot"
  "o/messageP\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Message_2fMessage_2eproto_deps[1] = {
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_Message_2fMessage_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Message_2fMessage_2eproto = {
    false, false, 4539, descriptor_table_protodef_Message_2fMessage_2eproto,
    "Message/Message.proto",
    &descriptor_table_Message_2fMessage_2eproto_once, descriptor_table_Message_2fMessage_2eproto_deps, 1, 24,
    schemas, file_default_instances, TableStruct_Message_2fMessage_2eproto::offsets,
    file_level_metadata_Message_2fMessage_2eproto, file_level_enum_descriptors_Message_2fMessage_2eproto,
    file_level_service_descriptors_Message_2fMessage_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Message_2fMessage_2eproto_getter() {
  return &descriptor_table_Message_2fMessage_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Message_2fMessage_2eproto(&descriptor_table_Message_2fMessage_2eproto);
namespace proto {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* IncrementOperationV1_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_Message_2fMessage_2eproto);
  return file_level_enum_descriptors_Message_2fMessage_2eproto[0];
}
bool IncrementOperationV1_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}


// ===================================================================

class MetaInfoBase::_Internal {
 public:
};

MetaInfoBase::MetaInfoBase(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.MetaInfoBase)
}
MetaInfoBase::MetaInfoBase(const MetaInfoBase& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  MetaInfoBase* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_._id_){}
    , decltype(_impl_.dataaccessmodelversion_){}
    , decltype(_impl_.uuid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_._id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_._id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal__id().empty()) {
    _this->_impl_._id_.Set(from._internal__id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.dataaccessmodelversion_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dataaccessmodelversion_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dataaccessmodelversion().empty()) {
    _this->_impl_.dataaccessmodelversion_.Set(from._internal_dataaccessmodelversion(), 
      _this->GetArenaForAllocation());
  }
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_uuid().empty()) {
    _this->_impl_.uuid_.Set(from._internal_uuid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.MetaInfoBase)
}

inline void MetaInfoBase::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_._id_){}
    , decltype(_impl_.dataaccessmodelversion_){}
    , decltype(_impl_.uuid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_._id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_._id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.dataaccessmodelversion_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dataaccessmodelversion_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.uuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.uuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

MetaInfoBase::~MetaInfoBase() {
  // @@protoc_insertion_point(destructor:proto.MetaInfoBase)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void MetaInfoBase::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_._id_.Destroy();
  _impl_.dataaccessmodelversion_.Destroy();
  _impl_.uuid_.Destroy();
}

void MetaInfoBase::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void MetaInfoBase::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.MetaInfoBase)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_._id_.ClearToEmpty();
  _impl_.dataaccessmodelversion_.ClearToEmpty();
  _impl_.uuid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* MetaInfoBase::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string _id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable__id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.MetaInfoBase._id"));
        } else
          goto handle_unusual;
        continue;
      // string DataAccessModelVersion = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_dataaccessmodelversion();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.MetaInfoBase.DataAccessModelVersion"));
        } else
          goto handle_unusual;
        continue;
      // string Uuid = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_uuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.MetaInfoBase.Uuid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* MetaInfoBase::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.MetaInfoBase)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string _id = 1;
  if (!this->_internal__id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal__id().data(), static_cast<int>(this->_internal__id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.MetaInfoBase._id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal__id(), target);
  }

  // string DataAccessModelVersion = 2;
  if (!this->_internal_dataaccessmodelversion().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dataaccessmodelversion().data(), static_cast<int>(this->_internal_dataaccessmodelversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.MetaInfoBase.DataAccessModelVersion");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_dataaccessmodelversion(), target);
  }

  // string Uuid = 3;
  if (!this->_internal_uuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_uuid().data(), static_cast<int>(this->_internal_uuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.MetaInfoBase.Uuid");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_uuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.MetaInfoBase)
  return target;
}

size_t MetaInfoBase::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.MetaInfoBase)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string _id = 1;
  if (!this->_internal__id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal__id());
  }

  // string DataAccessModelVersion = 2;
  if (!this->_internal_dataaccessmodelversion().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dataaccessmodelversion());
  }

  // string Uuid = 3;
  if (!this->_internal_uuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_uuid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData MetaInfoBase::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    MetaInfoBase::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*MetaInfoBase::GetClassData() const { return &_class_data_; }


void MetaInfoBase::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<MetaInfoBase*>(&to_msg);
  auto& from = static_cast<const MetaInfoBase&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.MetaInfoBase)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal__id().empty()) {
    _this->_internal_set__id(from._internal__id());
  }
  if (!from._internal_dataaccessmodelversion().empty()) {
    _this->_internal_set_dataaccessmodelversion(from._internal_dataaccessmodelversion());
  }
  if (!from._internal_uuid().empty()) {
    _this->_internal_set_uuid(from._internal_uuid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void MetaInfoBase::CopyFrom(const MetaInfoBase& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.MetaInfoBase)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MetaInfoBase::IsInitialized() const {
  return true;
}

void MetaInfoBase::InternalSwap(MetaInfoBase* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_._id_, lhs_arena,
      &other->_impl_._id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dataaccessmodelversion_, lhs_arena,
      &other->_impl_.dataaccessmodelversion_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.uuid_, lhs_arena,
      &other->_impl_.uuid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata MetaInfoBase::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[0]);
}

// ===================================================================

class BrainTellServerMysqlDBCompatibleData::_Internal {
 public:
};

BrainTellServerMysqlDBCompatibleData::BrainTellServerMysqlDBCompatibleData(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.BrainTellServerMysqlDBCompatibleData)
}
BrainTellServerMysqlDBCompatibleData::BrainTellServerMysqlDBCompatibleData(const BrainTellServerMysqlDBCompatibleData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BrainTellServerMysqlDBCompatibleData* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.email_){}
    , decltype(_impl_.nickname_){}
    , decltype(_impl_.appkey_){}
    , decltype(_impl_.score_){}
    , decltype(_impl_.isdeleted_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_email().empty()) {
    _this->_impl_.email_.Set(from._internal_email(), 
      _this->GetArenaForAllocation());
  }
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_nickname().empty()) {
    _this->_impl_.nickname_.Set(from._internal_nickname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.appkey_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.appkey_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_appkey().empty()) {
    _this->_impl_.appkey_.Set(from._internal_appkey(), 
      _this->GetArenaForAllocation());
  }
  ::memcpy(&_impl_.score_, &from._impl_.score_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.isdeleted_) -
    reinterpret_cast<char*>(&_impl_.score_)) + sizeof(_impl_.isdeleted_));
  // @@protoc_insertion_point(copy_constructor:proto.BrainTellServerMysqlDBCompatibleData)
}

inline void BrainTellServerMysqlDBCompatibleData::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.email_){}
    , decltype(_impl_.nickname_){}
    , decltype(_impl_.appkey_){}
    , decltype(_impl_.score_){0}
    , decltype(_impl_.isdeleted_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.email_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.email_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.nickname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.nickname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.appkey_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.appkey_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

BrainTellServerMysqlDBCompatibleData::~BrainTellServerMysqlDBCompatibleData() {
  // @@protoc_insertion_point(destructor:proto.BrainTellServerMysqlDBCompatibleData)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BrainTellServerMysqlDBCompatibleData::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.email_.Destroy();
  _impl_.nickname_.Destroy();
  _impl_.appkey_.Destroy();
}

void BrainTellServerMysqlDBCompatibleData::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BrainTellServerMysqlDBCompatibleData::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BrainTellServerMysqlDBCompatibleData)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.email_.ClearToEmpty();
  _impl_.nickname_.ClearToEmpty();
  _impl_.appkey_.ClearToEmpty();
  ::memset(&_impl_.score_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.isdeleted_) -
      reinterpret_cast<char*>(&_impl_.score_)) + sizeof(_impl_.isdeleted_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BrainTellServerMysqlDBCompatibleData::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string Email = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_email();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.BrainTellServerMysqlDBCompatibleData.Email"));
        } else
          goto handle_unusual;
        continue;
      // string NickName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_nickname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.BrainTellServerMysqlDBCompatibleData.NickName"));
        } else
          goto handle_unusual;
        continue;
      // int32 Score = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.score_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string AppKey = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_appkey();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.BrainTellServerMysqlDBCompatibleData.AppKey"));
        } else
          goto handle_unusual;
        continue;
      // int32 IsDeleted = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.isdeleted_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BrainTellServerMysqlDBCompatibleData::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.BrainTellServerMysqlDBCompatibleData)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string Email = 1;
  if (!this->_internal_email().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_email().data(), static_cast<int>(this->_internal_email().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.BrainTellServerMysqlDBCompatibleData.Email");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_email(), target);
  }

  // string NickName = 2;
  if (!this->_internal_nickname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_nickname().data(), static_cast<int>(this->_internal_nickname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.BrainTellServerMysqlDBCompatibleData.NickName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_nickname(), target);
  }

  // int32 Score = 3;
  if (this->_internal_score() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(3, this->_internal_score(), target);
  }

  // string AppKey = 4;
  if (!this->_internal_appkey().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_appkey().data(), static_cast<int>(this->_internal_appkey().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.BrainTellServerMysqlDBCompatibleData.AppKey");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_appkey(), target);
  }

  // int32 IsDeleted = 5;
  if (this->_internal_isdeleted() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_isdeleted(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BrainTellServerMysqlDBCompatibleData)
  return target;
}

size_t BrainTellServerMysqlDBCompatibleData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BrainTellServerMysqlDBCompatibleData)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Email = 1;
  if (!this->_internal_email().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_email());
  }

  // string NickName = 2;
  if (!this->_internal_nickname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_nickname());
  }

  // string AppKey = 4;
  if (!this->_internal_appkey().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_appkey());
  }

  // int32 Score = 3;
  if (this->_internal_score() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_score());
  }

  // int32 IsDeleted = 5;
  if (this->_internal_isdeleted() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_isdeleted());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BrainTellServerMysqlDBCompatibleData::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BrainTellServerMysqlDBCompatibleData::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BrainTellServerMysqlDBCompatibleData::GetClassData() const { return &_class_data_; }


void BrainTellServerMysqlDBCompatibleData::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BrainTellServerMysqlDBCompatibleData*>(&to_msg);
  auto& from = static_cast<const BrainTellServerMysqlDBCompatibleData&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.BrainTellServerMysqlDBCompatibleData)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_email().empty()) {
    _this->_internal_set_email(from._internal_email());
  }
  if (!from._internal_nickname().empty()) {
    _this->_internal_set_nickname(from._internal_nickname());
  }
  if (!from._internal_appkey().empty()) {
    _this->_internal_set_appkey(from._internal_appkey());
  }
  if (from._internal_score() != 0) {
    _this->_internal_set_score(from._internal_score());
  }
  if (from._internal_isdeleted() != 0) {
    _this->_internal_set_isdeleted(from._internal_isdeleted());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BrainTellServerMysqlDBCompatibleData::CopyFrom(const BrainTellServerMysqlDBCompatibleData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BrainTellServerMysqlDBCompatibleData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BrainTellServerMysqlDBCompatibleData::IsInitialized() const {
  return true;
}

void BrainTellServerMysqlDBCompatibleData::InternalSwap(BrainTellServerMysqlDBCompatibleData* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.email_, lhs_arena,
      &other->_impl_.email_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.nickname_, lhs_arena,
      &other->_impl_.nickname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.appkey_, lhs_arena,
      &other->_impl_.appkey_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BrainTellServerMysqlDBCompatibleData, _impl_.isdeleted_)
      + sizeof(BrainTellServerMysqlDBCompatibleData::_impl_.isdeleted_)
      - PROTOBUF_FIELD_OFFSET(BrainTellServerMysqlDBCompatibleData, _impl_.score_)>(
          reinterpret_cast<char*>(&_impl_.score_),
          reinterpret_cast<char*>(&other->_impl_.score_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BrainTellServerMysqlDBCompatibleData::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[1]);
}

// ===================================================================

class UserMetaInfoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const UserMetaInfoV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& createtime(const UserMetaInfoV1* msg);
  static const ::proto::BrainTellServerMysqlDBCompatibleData& compatibledata(const UserMetaInfoV1* msg);
};

const ::proto::MetaInfoBase&
UserMetaInfoV1::_Internal::base(const UserMetaInfoV1* msg) {
  return *msg->_impl_.base_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
UserMetaInfoV1::_Internal::createtime(const UserMetaInfoV1* msg) {
  return *msg->_impl_.createtime_;
}
const ::proto::BrainTellServerMysqlDBCompatibleData&
UserMetaInfoV1::_Internal::compatibledata(const UserMetaInfoV1* msg) {
  return *msg->_impl_.compatibledata_;
}
void UserMetaInfoV1::clear_createtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
}
UserMetaInfoV1::UserMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserMetaInfoV1)
}
UserMetaInfoV1::UserMetaInfoV1(const UserMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.headphotobindata_){}
    , decltype(_impl_.userpermissiongroup_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.compatibledata_){nullptr}
    , decltype(_impl_.userid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.headphotobindata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.headphotobindata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_headphotobindata().empty()) {
    _this->_impl_.headphotobindata_.Set(from._internal_headphotobindata(), 
      _this->GetArenaForAllocation());
  }
  _impl_.userpermissiongroup_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.userpermissiongroup_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_userpermissiongroup().empty()) {
    _this->_impl_.userpermissiongroup_.Set(from._internal_userpermissiongroup(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_createtime()) {
    _this->_impl_.createtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.createtime_);
  }
  if (from._internal_has_compatibledata()) {
    _this->_impl_.compatibledata_ = new ::proto::BrainTellServerMysqlDBCompatibleData(*from._impl_.compatibledata_);
  }
  _this->_impl_.userid_ = from._impl_.userid_;
  // @@protoc_insertion_point(copy_constructor:proto.UserMetaInfoV1)
}

inline void UserMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.headphotobindata_){}
    , decltype(_impl_.userpermissiongroup_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.compatibledata_){nullptr}
    , decltype(_impl_.userid_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.headphotobindata_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.headphotobindata_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.userpermissiongroup_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.userpermissiongroup_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserMetaInfoV1::~UserMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.UserMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.password_.Destroy();
  _impl_.description_.Destroy();
  _impl_.headphotobindata_.Destroy();
  _impl_.userpermissiongroup_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.createtime_;
  if (this != internal_default_instance()) delete _impl_.compatibledata_;
}

void UserMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.headphotobindata_.ClearToEmpty();
  _impl_.userpermissiongroup_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.compatibledata_ != nullptr) {
    delete _impl_.compatibledata_;
  }
  _impl_.compatibledata_ = nullptr;
  _impl_.userid_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserMetaInfoV1.Name"));
        } else
          goto handle_unusual;
        continue;
      // string Password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserMetaInfoV1.Password"));
        } else
          goto handle_unusual;
        continue;
      // string Description = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserMetaInfoV1.Description"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp CreateTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_createtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bytes HeadPhotoBinData = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_headphotobindata();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string UserPermissionGroup = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          auto str = _internal_mutable_userpermissiongroup();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserMetaInfoV1.UserPermissionGroup"));
        } else
          goto handle_unusual;
        continue;
      // int32 UserId = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.userid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.BrainTellServerMysqlDBCompatibleData CompatibleData = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr = ctx->ParseMessage(_internal_mutable_compatibledata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserMetaInfoV1.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string Password = 3;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserMetaInfoV1.Password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_password(), target);
  }

  // string Description = 4;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserMetaInfoV1.Description");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_description(), target);
  }

  // .google.protobuf.Timestamp CreateTime = 5;
  if (this->_internal_has_createtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::createtime(this),
        _Internal::createtime(this).GetCachedSize(), target, stream);
  }

  // bytes HeadPhotoBinData = 6;
  if (!this->_internal_headphotobindata().empty()) {
    target = stream->WriteBytesMaybeAliased(
        6, this->_internal_headphotobindata(), target);
  }

  // string UserPermissionGroup = 7;
  if (!this->_internal_userpermissiongroup().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_userpermissiongroup().data(), static_cast<int>(this->_internal_userpermissiongroup().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserMetaInfoV1.UserPermissionGroup");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_userpermissiongroup(), target);
  }

  // int32 UserId = 8;
  if (this->_internal_userid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_userid(), target);
  }

  // .proto.BrainTellServerMysqlDBCompatibleData CompatibleData = 9;
  if (this->_internal_has_compatibledata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(9, _Internal::compatibledata(this),
        _Internal::compatibledata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserMetaInfoV1)
  return target;
}

size_t UserMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Password = 3;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // string Description = 4;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // bytes HeadPhotoBinData = 6;
  if (!this->_internal_headphotobindata().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::BytesSize(
        this->_internal_headphotobindata());
  }

  // string UserPermissionGroup = 7;
  if (!this->_internal_userpermissiongroup().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_userpermissiongroup());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .google.protobuf.Timestamp CreateTime = 5;
  if (this->_internal_has_createtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.createtime_);
  }

  // .proto.BrainTellServerMysqlDBCompatibleData CompatibleData = 9;
  if (this->_internal_has_compatibledata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.compatibledata_);
  }

  // int32 UserId = 8;
  if (this->_internal_userid() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_userid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserMetaInfoV1::GetClassData() const { return &_class_data_; }


void UserMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const UserMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_headphotobindata().empty()) {
    _this->_internal_set_headphotobindata(from._internal_headphotobindata());
  }
  if (!from._internal_userpermissiongroup().empty()) {
    _this->_internal_set_userpermissiongroup(from._internal_userpermissiongroup());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_createtime()) {
    _this->_internal_mutable_createtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_createtime());
  }
  if (from._internal_has_compatibledata()) {
    _this->_internal_mutable_compatibledata()->::proto::BrainTellServerMysqlDBCompatibleData::MergeFrom(
        from._internal_compatibledata());
  }
  if (from._internal_userid() != 0) {
    _this->_internal_set_userid(from._internal_userid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserMetaInfoV1::CopyFrom(const UserMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserMetaInfoV1::IsInitialized() const {
  return true;
}

void UserMetaInfoV1::InternalSwap(UserMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.headphotobindata_, lhs_arena,
      &other->_impl_.headphotobindata_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.userpermissiongroup_, lhs_arena,
      &other->_impl_.userpermissiongroup_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserMetaInfoV1, _impl_.userid_)
      + sizeof(UserMetaInfoV1::_impl_.userid_)
      - PROTOBUF_FIELD_OFFSET(UserMetaInfoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[2]);
}

// ===================================================================

class GlobalPermissionMetaInfoV1::_Internal {
 public:
};

GlobalPermissionMetaInfoV1::GlobalPermissionMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GlobalPermissionMetaInfoV1)
}
GlobalPermissionMetaInfoV1::GlobalPermissionMetaInfoV1(const GlobalPermissionMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GlobalPermissionMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.writepermissioncreateproject_){}
    , decltype(_impl_.writepermissionmodifyproject_){}
    , decltype(_impl_.writepermissiondeleteproject_){}
    , decltype(_impl_.readperimissionquery_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.writepermissioncreateproject_, &from._impl_.writepermissioncreateproject_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.readperimissionquery_) -
    reinterpret_cast<char*>(&_impl_.writepermissioncreateproject_)) + sizeof(_impl_.readperimissionquery_));
  // @@protoc_insertion_point(copy_constructor:proto.GlobalPermissionMetaInfoV1)
}

inline void GlobalPermissionMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.writepermissioncreateproject_){false}
    , decltype(_impl_.writepermissionmodifyproject_){false}
    , decltype(_impl_.writepermissiondeleteproject_){false}
    , decltype(_impl_.readperimissionquery_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GlobalPermissionMetaInfoV1::~GlobalPermissionMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.GlobalPermissionMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GlobalPermissionMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void GlobalPermissionMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GlobalPermissionMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GlobalPermissionMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.writepermissioncreateproject_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.readperimissionquery_) -
      reinterpret_cast<char*>(&_impl_.writepermissioncreateproject_)) + sizeof(_impl_.readperimissionquery_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GlobalPermissionMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool WritePermissionCreateProject = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.writepermissioncreateproject_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool WritePermissionModifyProject = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.writepermissionmodifyproject_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool WritePermissionDeleteProject = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.writepermissiondeleteproject_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool ReadPerimissionQuery = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.readperimissionquery_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GlobalPermissionMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GlobalPermissionMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool WritePermissionCreateProject = 1;
  if (this->_internal_writepermissioncreateproject() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_writepermissioncreateproject(), target);
  }

  // bool WritePermissionModifyProject = 2;
  if (this->_internal_writepermissionmodifyproject() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_writepermissionmodifyproject(), target);
  }

  // bool WritePermissionDeleteProject = 3;
  if (this->_internal_writepermissiondeleteproject() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_writepermissiondeleteproject(), target);
  }

  // bool ReadPerimissionQuery = 4;
  if (this->_internal_readperimissionquery() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_readperimissionquery(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GlobalPermissionMetaInfoV1)
  return target;
}

size_t GlobalPermissionMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GlobalPermissionMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool WritePermissionCreateProject = 1;
  if (this->_internal_writepermissioncreateproject() != 0) {
    total_size += 1 + 1;
  }

  // bool WritePermissionModifyProject = 2;
  if (this->_internal_writepermissionmodifyproject() != 0) {
    total_size += 1 + 1;
  }

  // bool WritePermissionDeleteProject = 3;
  if (this->_internal_writepermissiondeleteproject() != 0) {
    total_size += 1 + 1;
  }

  // bool ReadPerimissionQuery = 4;
  if (this->_internal_readperimissionquery() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GlobalPermissionMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GlobalPermissionMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GlobalPermissionMetaInfoV1::GetClassData() const { return &_class_data_; }


void GlobalPermissionMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GlobalPermissionMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const GlobalPermissionMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GlobalPermissionMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_writepermissioncreateproject() != 0) {
    _this->_internal_set_writepermissioncreateproject(from._internal_writepermissioncreateproject());
  }
  if (from._internal_writepermissionmodifyproject() != 0) {
    _this->_internal_set_writepermissionmodifyproject(from._internal_writepermissionmodifyproject());
  }
  if (from._internal_writepermissiondeleteproject() != 0) {
    _this->_internal_set_writepermissiondeleteproject(from._internal_writepermissiondeleteproject());
  }
  if (from._internal_readperimissionquery() != 0) {
    _this->_internal_set_readperimissionquery(from._internal_readperimissionquery());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GlobalPermissionMetaInfoV1::CopyFrom(const GlobalPermissionMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GlobalPermissionMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GlobalPermissionMetaInfoV1::IsInitialized() const {
  return true;
}

void GlobalPermissionMetaInfoV1::InternalSwap(GlobalPermissionMetaInfoV1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GlobalPermissionMetaInfoV1, _impl_.readperimissionquery_)
      + sizeof(GlobalPermissionMetaInfoV1::_impl_.readperimissionquery_)
      - PROTOBUF_FIELD_OFFSET(GlobalPermissionMetaInfoV1, _impl_.writepermissioncreateproject_)>(
          reinterpret_cast<char*>(&_impl_.writepermissioncreateproject_),
          reinterpret_cast<char*>(&other->_impl_.writepermissioncreateproject_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GlobalPermissionMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[3]);
}

// ===================================================================

class ProjectPermissionMetaInfoV1::_Internal {
 public:
};

ProjectPermissionMetaInfoV1::ProjectPermissionMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ProjectPermissionMetaInfoV1)
}
ProjectPermissionMetaInfoV1::ProjectPermissionMetaInfoV1(const ProjectPermissionMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProjectPermissionMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.writepermissionadddata_){}
    , decltype(_impl_.writepermissionmodifydata_){}
    , decltype(_impl_.writepermissiondeletedata_){}
    , decltype(_impl_.readperimissionquery_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.writepermissionadddata_, &from._impl_.writepermissionadddata_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.readperimissionquery_) -
    reinterpret_cast<char*>(&_impl_.writepermissionadddata_)) + sizeof(_impl_.readperimissionquery_));
  // @@protoc_insertion_point(copy_constructor:proto.ProjectPermissionMetaInfoV1)
}

inline void ProjectPermissionMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.writepermissionadddata_){false}
    , decltype(_impl_.writepermissionmodifydata_){false}
    , decltype(_impl_.writepermissiondeletedata_){false}
    , decltype(_impl_.readperimissionquery_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ProjectPermissionMetaInfoV1::~ProjectPermissionMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.ProjectPermissionMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProjectPermissionMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void ProjectPermissionMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProjectPermissionMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ProjectPermissionMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.writepermissionadddata_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.readperimissionquery_) -
      reinterpret_cast<char*>(&_impl_.writepermissionadddata_)) + sizeof(_impl_.readperimissionquery_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProjectPermissionMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool WritePermissionAddData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.writepermissionadddata_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool WritePermissionModifyData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.writepermissionmodifydata_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool WritePermissionDeleteData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.writepermissiondeletedata_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool ReadPerimissionQuery = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 32)) {
          _impl_.readperimissionquery_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProjectPermissionMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ProjectPermissionMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool WritePermissionAddData = 1;
  if (this->_internal_writepermissionadddata() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_writepermissionadddata(), target);
  }

  // bool WritePermissionModifyData = 2;
  if (this->_internal_writepermissionmodifydata() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_writepermissionmodifydata(), target);
  }

  // bool WritePermissionDeleteData = 3;
  if (this->_internal_writepermissiondeletedata() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(3, this->_internal_writepermissiondeletedata(), target);
  }

  // bool ReadPerimissionQuery = 4;
  if (this->_internal_readperimissionquery() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(4, this->_internal_readperimissionquery(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ProjectPermissionMetaInfoV1)
  return target;
}

size_t ProjectPermissionMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ProjectPermissionMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool WritePermissionAddData = 1;
  if (this->_internal_writepermissionadddata() != 0) {
    total_size += 1 + 1;
  }

  // bool WritePermissionModifyData = 2;
  if (this->_internal_writepermissionmodifydata() != 0) {
    total_size += 1 + 1;
  }

  // bool WritePermissionDeleteData = 3;
  if (this->_internal_writepermissiondeletedata() != 0) {
    total_size += 1 + 1;
  }

  // bool ReadPerimissionQuery = 4;
  if (this->_internal_readperimissionquery() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProjectPermissionMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProjectPermissionMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProjectPermissionMetaInfoV1::GetClassData() const { return &_class_data_; }


void ProjectPermissionMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProjectPermissionMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const ProjectPermissionMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ProjectPermissionMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_writepermissionadddata() != 0) {
    _this->_internal_set_writepermissionadddata(from._internal_writepermissionadddata());
  }
  if (from._internal_writepermissionmodifydata() != 0) {
    _this->_internal_set_writepermissionmodifydata(from._internal_writepermissionmodifydata());
  }
  if (from._internal_writepermissiondeletedata() != 0) {
    _this->_internal_set_writepermissiondeletedata(from._internal_writepermissiondeletedata());
  }
  if (from._internal_readperimissionquery() != 0) {
    _this->_internal_set_readperimissionquery(from._internal_readperimissionquery());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectPermissionMetaInfoV1::CopyFrom(const ProjectPermissionMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ProjectPermissionMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectPermissionMetaInfoV1::IsInitialized() const {
  return true;
}

void ProjectPermissionMetaInfoV1::InternalSwap(ProjectPermissionMetaInfoV1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProjectPermissionMetaInfoV1, _impl_.readperimissionquery_)
      + sizeof(ProjectPermissionMetaInfoV1::_impl_.readperimissionquery_)
      - PROTOBUF_FIELD_OFFSET(ProjectPermissionMetaInfoV1, _impl_.writepermissionadddata_)>(
          reinterpret_cast<char*>(&_impl_.writepermissionadddata_),
          reinterpret_cast<char*>(&other->_impl_.writepermissionadddata_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProjectPermissionMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[4]);
}

// ===================================================================

class PermissionGroupMetaInfoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const PermissionGroupMetaInfoV1* msg);
  static const ::proto::GlobalPermissionMetaInfoV1& globalpermission(const PermissionGroupMetaInfoV1* msg);
  static const ::proto::ProjectPermissionMetaInfoV1& projectpermission(const PermissionGroupMetaInfoV1* msg);
};

const ::proto::MetaInfoBase&
PermissionGroupMetaInfoV1::_Internal::base(const PermissionGroupMetaInfoV1* msg) {
  return *msg->_impl_.base_;
}
const ::proto::GlobalPermissionMetaInfoV1&
PermissionGroupMetaInfoV1::_Internal::globalpermission(const PermissionGroupMetaInfoV1* msg) {
  return *msg->_impl_.globalpermission_;
}
const ::proto::ProjectPermissionMetaInfoV1&
PermissionGroupMetaInfoV1::_Internal::projectpermission(const PermissionGroupMetaInfoV1* msg) {
  return *msg->_impl_.projectpermission_;
}
PermissionGroupMetaInfoV1::PermissionGroupMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.PermissionGroupMetaInfoV1)
}
PermissionGroupMetaInfoV1::PermissionGroupMetaInfoV1(const PermissionGroupMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  PermissionGroupMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.globalpermission_){nullptr}
    , decltype(_impl_.projectpermission_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_globalpermission()) {
    _this->_impl_.globalpermission_ = new ::proto::GlobalPermissionMetaInfoV1(*from._impl_.globalpermission_);
  }
  if (from._internal_has_projectpermission()) {
    _this->_impl_.projectpermission_ = new ::proto::ProjectPermissionMetaInfoV1(*from._impl_.projectpermission_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.PermissionGroupMetaInfoV1)
}

inline void PermissionGroupMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.globalpermission_){nullptr}
    , decltype(_impl_.projectpermission_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

PermissionGroupMetaInfoV1::~PermissionGroupMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.PermissionGroupMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void PermissionGroupMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.globalpermission_;
  if (this != internal_default_instance()) delete _impl_.projectpermission_;
}

void PermissionGroupMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void PermissionGroupMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.PermissionGroupMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.globalpermission_ != nullptr) {
    delete _impl_.globalpermission_;
  }
  _impl_.globalpermission_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.projectpermission_ != nullptr) {
    delete _impl_.projectpermission_;
  }
  _impl_.projectpermission_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* PermissionGroupMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.PermissionGroupMetaInfoV1.Name"));
        } else
          goto handle_unusual;
        continue;
      // string Description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.PermissionGroupMetaInfoV1.Description"));
        } else
          goto handle_unusual;
        continue;
      // .proto.GlobalPermissionMetaInfoV1 GlobalPermission = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_globalpermission(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectPermissionMetaInfoV1 ProjectPermission = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectpermission(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* PermissionGroupMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.PermissionGroupMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.PermissionGroupMetaInfoV1.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.PermissionGroupMetaInfoV1.Description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // .proto.GlobalPermissionMetaInfoV1 GlobalPermission = 4;
  if (this->_internal_has_globalpermission()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::globalpermission(this),
        _Internal::globalpermission(this).GetCachedSize(), target, stream);
  }

  // .proto.ProjectPermissionMetaInfoV1 ProjectPermission = 5;
  if (this->_internal_has_projectpermission()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::projectpermission(this),
        _Internal::projectpermission(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.PermissionGroupMetaInfoV1)
  return target;
}

size_t PermissionGroupMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.PermissionGroupMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .proto.GlobalPermissionMetaInfoV1 GlobalPermission = 4;
  if (this->_internal_has_globalpermission()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.globalpermission_);
  }

  // .proto.ProjectPermissionMetaInfoV1 ProjectPermission = 5;
  if (this->_internal_has_projectpermission()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectpermission_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData PermissionGroupMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    PermissionGroupMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*PermissionGroupMetaInfoV1::GetClassData() const { return &_class_data_; }


void PermissionGroupMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<PermissionGroupMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const PermissionGroupMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.PermissionGroupMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_globalpermission()) {
    _this->_internal_mutable_globalpermission()->::proto::GlobalPermissionMetaInfoV1::MergeFrom(
        from._internal_globalpermission());
  }
  if (from._internal_has_projectpermission()) {
    _this->_internal_mutable_projectpermission()->::proto::ProjectPermissionMetaInfoV1::MergeFrom(
        from._internal_projectpermission());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void PermissionGroupMetaInfoV1::CopyFrom(const PermissionGroupMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.PermissionGroupMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PermissionGroupMetaInfoV1::IsInitialized() const {
  return true;
}

void PermissionGroupMetaInfoV1::InternalSwap(PermissionGroupMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(PermissionGroupMetaInfoV1, _impl_.projectpermission_)
      + sizeof(PermissionGroupMetaInfoV1::_impl_.projectpermission_)
      - PROTOBUF_FIELD_OFFSET(PermissionGroupMetaInfoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata PermissionGroupMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[5]);
}

// ===================================================================

class UserPermissionOverrideMetaInfoV1::_Internal {
 public:
  static const ::proto::ProjectPermissionMetaInfoV1& projectpermission(const UserPermissionOverrideMetaInfoV1* msg);
};

const ::proto::ProjectPermissionMetaInfoV1&
UserPermissionOverrideMetaInfoV1::_Internal::projectpermission(const UserPermissionOverrideMetaInfoV1* msg) {
  return *msg->_impl_.projectpermission_;
}
UserPermissionOverrideMetaInfoV1::UserPermissionOverrideMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserPermissionOverrideMetaInfoV1)
}
UserPermissionOverrideMetaInfoV1::UserPermissionOverrideMetaInfoV1(const UserPermissionOverrideMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserPermissionOverrideMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.projectpermission_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    _this->_impl_.username_.Set(from._internal_username(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_projectpermission()) {
    _this->_impl_.projectpermission_ = new ::proto::ProjectPermissionMetaInfoV1(*from._impl_.projectpermission_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UserPermissionOverrideMetaInfoV1)
}

inline void UserPermissionOverrideMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.projectpermission_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserPermissionOverrideMetaInfoV1::~UserPermissionOverrideMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.UserPermissionOverrideMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserPermissionOverrideMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.username_.Destroy();
  if (this != internal_default_instance()) delete _impl_.projectpermission_;
}

void UserPermissionOverrideMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserPermissionOverrideMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserPermissionOverrideMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.projectpermission_ != nullptr) {
    delete _impl_.projectpermission_;
  }
  _impl_.projectpermission_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserPermissionOverrideMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ProjectPermissionMetaInfoV1 ProjectPermission = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectpermission(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string UserName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_username();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserPermissionOverrideMetaInfoV1.UserName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserPermissionOverrideMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserPermissionOverrideMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ProjectPermissionMetaInfoV1 ProjectPermission = 1;
  if (this->_internal_has_projectpermission()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::projectpermission(this),
        _Internal::projectpermission(this).GetCachedSize(), target, stream);
  }

  // string UserName = 2;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserPermissionOverrideMetaInfoV1.UserName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserPermissionOverrideMetaInfoV1)
  return target;
}

size_t UserPermissionOverrideMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserPermissionOverrideMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string UserName = 2;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // .proto.ProjectPermissionMetaInfoV1 ProjectPermission = 1;
  if (this->_internal_has_projectpermission()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectpermission_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserPermissionOverrideMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserPermissionOverrideMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserPermissionOverrideMetaInfoV1::GetClassData() const { return &_class_data_; }


void UserPermissionOverrideMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserPermissionOverrideMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const UserPermissionOverrideMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserPermissionOverrideMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (from._internal_has_projectpermission()) {
    _this->_internal_mutable_projectpermission()->::proto::ProjectPermissionMetaInfoV1::MergeFrom(
        from._internal_projectpermission());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserPermissionOverrideMetaInfoV1::CopyFrom(const UserPermissionOverrideMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserPermissionOverrideMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserPermissionOverrideMetaInfoV1::IsInitialized() const {
  return true;
}

void UserPermissionOverrideMetaInfoV1::InternalSwap(UserPermissionOverrideMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.username_, lhs_arena,
      &other->_impl_.username_, rhs_arena
  );
  swap(_impl_.projectpermission_, other->_impl_.projectpermission_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserPermissionOverrideMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[6]);
}

// ===================================================================

class ProjectMetaInfoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const ProjectMetaInfoV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& createtime(const ProjectMetaInfoV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& lastmodifiedtime(const ProjectMetaInfoV1* msg);
};

const ::proto::MetaInfoBase&
ProjectMetaInfoV1::_Internal::base(const ProjectMetaInfoV1* msg) {
  return *msg->_impl_.base_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
ProjectMetaInfoV1::_Internal::createtime(const ProjectMetaInfoV1* msg) {
  return *msg->_impl_.createtime_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
ProjectMetaInfoV1::_Internal::lastmodifiedtime(const ProjectMetaInfoV1* msg) {
  return *msg->_impl_.lastmodifiedtime_;
}
void ProjectMetaInfoV1::clear_createtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
}
void ProjectMetaInfoV1::clear_lastmodifiedtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.lastmodifiedtime_ != nullptr) {
    delete _impl_.lastmodifiedtime_;
  }
  _impl_.lastmodifiedtime_ = nullptr;
}
ProjectMetaInfoV1::ProjectMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ProjectMetaInfoV1)
}
ProjectMetaInfoV1::ProjectMetaInfoV1(const ProjectMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ProjectMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swclist_){from._impl_.swclist_}
    , decltype(_impl_.userpermissionoverride_){from._impl_.userpermissionoverride_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.creator_){}
    , decltype(_impl_.workmode_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.lastmodifiedtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator().empty()) {
    _this->_impl_.creator_.Set(from._internal_creator(), 
      _this->GetArenaForAllocation());
  }
  _impl_.workmode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.workmode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_workmode().empty()) {
    _this->_impl_.workmode_.Set(from._internal_workmode(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_createtime()) {
    _this->_impl_.createtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.createtime_);
  }
  if (from._internal_has_lastmodifiedtime()) {
    _this->_impl_.lastmodifiedtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.lastmodifiedtime_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ProjectMetaInfoV1)
}

inline void ProjectMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swclist_){arena}
    , decltype(_impl_.userpermissionoverride_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.creator_){}
    , decltype(_impl_.workmode_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.lastmodifiedtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.workmode_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.workmode_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ProjectMetaInfoV1::~ProjectMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.ProjectMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ProjectMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swclist_.~RepeatedPtrField();
  _impl_.userpermissionoverride_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.creator_.Destroy();
  _impl_.workmode_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.createtime_;
  if (this != internal_default_instance()) delete _impl_.lastmodifiedtime_;
}

void ProjectMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ProjectMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ProjectMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swclist_.Clear();
  _impl_.userpermissionoverride_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.creator_.ClearToEmpty();
  _impl_.workmode_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.lastmodifiedtime_ != nullptr) {
    delete _impl_.lastmodifiedtime_;
  }
  _impl_.lastmodifiedtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ProjectMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ProjectMetaInfoV1.Name"));
        } else
          goto handle_unusual;
        continue;
      // string Description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ProjectMetaInfoV1.Description"));
        } else
          goto handle_unusual;
        continue;
      // string Creator = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_creator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ProjectMetaInfoV1.Creator"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp CreateTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_createtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp LastModifiedTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_lastmodifiedtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string SwcList = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_swclist();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "proto.ProjectMetaInfoV1.SwcList"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<58>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.UserPermissionOverrideMetaInfoV1 UserPermissionOverride = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_userpermissionoverride(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string WorkMode = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          auto str = _internal_mutable_workmode();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ProjectMetaInfoV1.WorkMode"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ProjectMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ProjectMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ProjectMetaInfoV1.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ProjectMetaInfoV1.Description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string Creator = 4;
  if (!this->_internal_creator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator().data(), static_cast<int>(this->_internal_creator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ProjectMetaInfoV1.Creator");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_creator(), target);
  }

  // .google.protobuf.Timestamp CreateTime = 5;
  if (this->_internal_has_createtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::createtime(this),
        _Internal::createtime(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp LastModifiedTime = 6;
  if (this->_internal_has_lastmodifiedtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::lastmodifiedtime(this),
        _Internal::lastmodifiedtime(this).GetCachedSize(), target, stream);
  }

  // repeated string SwcList = 7;
  for (int i = 0, n = this->_internal_swclist_size(); i < n; i++) {
    const auto& s = this->_internal_swclist(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ProjectMetaInfoV1.SwcList");
    target = stream->WriteString(7, s, target);
  }

  // repeated .proto.UserPermissionOverrideMetaInfoV1 UserPermissionOverride = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_userpermissionoverride_size()); i < n; i++) {
    const auto& repfield = this->_internal_userpermissionoverride(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string WorkMode = 9;
  if (!this->_internal_workmode().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_workmode().data(), static_cast<int>(this->_internal_workmode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ProjectMetaInfoV1.WorkMode");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_workmode(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ProjectMetaInfoV1)
  return target;
}

size_t ProjectMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ProjectMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string SwcList = 7;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.swclist_.size());
  for (int i = 0, n = _impl_.swclist_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.swclist_.Get(i));
  }

  // repeated .proto.UserPermissionOverrideMetaInfoV1 UserPermissionOverride = 8;
  total_size += 1UL * this->_internal_userpermissionoverride_size();
  for (const auto& msg : this->_impl_.userpermissionoverride_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string Creator = 4;
  if (!this->_internal_creator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator());
  }

  // string WorkMode = 9;
  if (!this->_internal_workmode().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_workmode());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .google.protobuf.Timestamp CreateTime = 5;
  if (this->_internal_has_createtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.createtime_);
  }

  // .google.protobuf.Timestamp LastModifiedTime = 6;
  if (this->_internal_has_lastmodifiedtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lastmodifiedtime_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ProjectMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ProjectMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ProjectMetaInfoV1::GetClassData() const { return &_class_data_; }


void ProjectMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ProjectMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const ProjectMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ProjectMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swclist_.MergeFrom(from._impl_.swclist_);
  _this->_impl_.userpermissionoverride_.MergeFrom(from._impl_.userpermissionoverride_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_creator().empty()) {
    _this->_internal_set_creator(from._internal_creator());
  }
  if (!from._internal_workmode().empty()) {
    _this->_internal_set_workmode(from._internal_workmode());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_createtime()) {
    _this->_internal_mutable_createtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_createtime());
  }
  if (from._internal_has_lastmodifiedtime()) {
    _this->_internal_mutable_lastmodifiedtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_lastmodifiedtime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ProjectMetaInfoV1::CopyFrom(const ProjectMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ProjectMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ProjectMetaInfoV1::IsInitialized() const {
  return true;
}

void ProjectMetaInfoV1::InternalSwap(ProjectMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swclist_.InternalSwap(&other->_impl_.swclist_);
  _impl_.userpermissionoverride_.InternalSwap(&other->_impl_.userpermissionoverride_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.creator_, lhs_arena,
      &other->_impl_.creator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.workmode_, lhs_arena,
      &other->_impl_.workmode_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ProjectMetaInfoV1, _impl_.lastmodifiedtime_)
      + sizeof(ProjectMetaInfoV1::_impl_.lastmodifiedtime_)
      - PROTOBUF_FIELD_OFFSET(ProjectMetaInfoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ProjectMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[7]);
}

// ===================================================================

class SwcSnapshotMetaInfoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const SwcSnapshotMetaInfoV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& createtime(const SwcSnapshotMetaInfoV1* msg);
};

const ::proto::MetaInfoBase&
SwcSnapshotMetaInfoV1::_Internal::base(const SwcSnapshotMetaInfoV1* msg) {
  return *msg->_impl_.base_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SwcSnapshotMetaInfoV1::_Internal::createtime(const SwcSnapshotMetaInfoV1* msg) {
  return *msg->_impl_.createtime_;
}
void SwcSnapshotMetaInfoV1::clear_createtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
}
SwcSnapshotMetaInfoV1::SwcSnapshotMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcSnapshotMetaInfoV1)
}
SwcSnapshotMetaInfoV1::SwcSnapshotMetaInfoV1(const SwcSnapshotMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcSnapshotMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcsnapshotcollectionname_){}
    , decltype(_impl_.creator_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcsnapshotcollectionname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcsnapshotcollectionname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcsnapshotcollectionname().empty()) {
    _this->_impl_.swcsnapshotcollectionname_.Set(from._internal_swcsnapshotcollectionname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator().empty()) {
    _this->_impl_.creator_.Set(from._internal_creator(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_createtime()) {
    _this->_impl_.createtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.createtime_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SwcSnapshotMetaInfoV1)
}

inline void SwcSnapshotMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcsnapshotcollectionname_){}
    , decltype(_impl_.creator_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcsnapshotcollectionname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcsnapshotcollectionname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SwcSnapshotMetaInfoV1::~SwcSnapshotMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.SwcSnapshotMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcSnapshotMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcsnapshotcollectionname_.Destroy();
  _impl_.creator_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.createtime_;
}

void SwcSnapshotMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcSnapshotMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcSnapshotMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcsnapshotcollectionname_.ClearToEmpty();
  _impl_.creator_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcSnapshotMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcSnapshotCollectionName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_swcsnapshotcollectionname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcSnapshotMetaInfoV1.SwcSnapshotCollectionName"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp CreateTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_createtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Creator = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_creator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcSnapshotMetaInfoV1.Creator"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcSnapshotMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcSnapshotMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string SwcSnapshotCollectionName = 2;
  if (!this->_internal_swcsnapshotcollectionname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcsnapshotcollectionname().data(), static_cast<int>(this->_internal_swcsnapshotcollectionname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcSnapshotMetaInfoV1.SwcSnapshotCollectionName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_swcsnapshotcollectionname(), target);
  }

  // .google.protobuf.Timestamp CreateTime = 3;
  if (this->_internal_has_createtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::createtime(this),
        _Internal::createtime(this).GetCachedSize(), target, stream);
  }

  // string Creator = 4;
  if (!this->_internal_creator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator().data(), static_cast<int>(this->_internal_creator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcSnapshotMetaInfoV1.Creator");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_creator(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcSnapshotMetaInfoV1)
  return target;
}

size_t SwcSnapshotMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcSnapshotMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcSnapshotCollectionName = 2;
  if (!this->_internal_swcsnapshotcollectionname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcsnapshotcollectionname());
  }

  // string Creator = 4;
  if (!this->_internal_creator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .google.protobuf.Timestamp CreateTime = 3;
  if (this->_internal_has_createtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.createtime_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcSnapshotMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcSnapshotMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcSnapshotMetaInfoV1::GetClassData() const { return &_class_data_; }


void SwcSnapshotMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcSnapshotMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const SwcSnapshotMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcSnapshotMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcsnapshotcollectionname().empty()) {
    _this->_internal_set_swcsnapshotcollectionname(from._internal_swcsnapshotcollectionname());
  }
  if (!from._internal_creator().empty()) {
    _this->_internal_set_creator(from._internal_creator());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_createtime()) {
    _this->_internal_mutable_createtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_createtime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcSnapshotMetaInfoV1::CopyFrom(const SwcSnapshotMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcSnapshotMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcSnapshotMetaInfoV1::IsInitialized() const {
  return true;
}

void SwcSnapshotMetaInfoV1::InternalSwap(SwcSnapshotMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcsnapshotcollectionname_, lhs_arena,
      &other->_impl_.swcsnapshotcollectionname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.creator_, lhs_arena,
      &other->_impl_.creator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwcSnapshotMetaInfoV1, _impl_.createtime_)
      + sizeof(SwcSnapshotMetaInfoV1::_impl_.createtime_)
      - PROTOBUF_FIELD_OFFSET(SwcSnapshotMetaInfoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcSnapshotMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[8]);
}

// ===================================================================

class SwcIncrementOperationMetaInfoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const SwcIncrementOperationMetaInfoV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& createtime(const SwcIncrementOperationMetaInfoV1* msg);
};

const ::proto::MetaInfoBase&
SwcIncrementOperationMetaInfoV1::_Internal::base(const SwcIncrementOperationMetaInfoV1* msg) {
  return *msg->_impl_.base_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SwcIncrementOperationMetaInfoV1::_Internal::createtime(const SwcIncrementOperationMetaInfoV1* msg) {
  return *msg->_impl_.createtime_;
}
void SwcIncrementOperationMetaInfoV1::clear_createtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
}
SwcIncrementOperationMetaInfoV1::SwcIncrementOperationMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcIncrementOperationMetaInfoV1)
}
SwcIncrementOperationMetaInfoV1::SwcIncrementOperationMetaInfoV1(const SwcIncrementOperationMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcIncrementOperationMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.incrementoperationcollectionname_){}
    , decltype(_impl_.startsnapshot_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.incrementoperationcollectionname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.incrementoperationcollectionname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_incrementoperationcollectionname().empty()) {
    _this->_impl_.incrementoperationcollectionname_.Set(from._internal_incrementoperationcollectionname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.startsnapshot_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.startsnapshot_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_startsnapshot().empty()) {
    _this->_impl_.startsnapshot_.Set(from._internal_startsnapshot(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_createtime()) {
    _this->_impl_.createtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.createtime_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SwcIncrementOperationMetaInfoV1)
}

inline void SwcIncrementOperationMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.incrementoperationcollectionname_){}
    , decltype(_impl_.startsnapshot_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.incrementoperationcollectionname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.incrementoperationcollectionname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.startsnapshot_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.startsnapshot_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SwcIncrementOperationMetaInfoV1::~SwcIncrementOperationMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.SwcIncrementOperationMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcIncrementOperationMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.incrementoperationcollectionname_.Destroy();
  _impl_.startsnapshot_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.createtime_;
}

void SwcIncrementOperationMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcIncrementOperationMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcIncrementOperationMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.incrementoperationcollectionname_.ClearToEmpty();
  _impl_.startsnapshot_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcIncrementOperationMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string IncrementOperationCollectionName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_incrementoperationcollectionname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcIncrementOperationMetaInfoV1.IncrementOperationCollectionName"));
        } else
          goto handle_unusual;
        continue;
      // string StartSnapshot = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_startsnapshot();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcIncrementOperationMetaInfoV1.StartSnapshot"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp CreateTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_createtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcIncrementOperationMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcIncrementOperationMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string IncrementOperationCollectionName = 2;
  if (!this->_internal_incrementoperationcollectionname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_incrementoperationcollectionname().data(), static_cast<int>(this->_internal_incrementoperationcollectionname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcIncrementOperationMetaInfoV1.IncrementOperationCollectionName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_incrementoperationcollectionname(), target);
  }

  // string StartSnapshot = 3;
  if (!this->_internal_startsnapshot().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_startsnapshot().data(), static_cast<int>(this->_internal_startsnapshot().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcIncrementOperationMetaInfoV1.StartSnapshot");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_startsnapshot(), target);
  }

  // .google.protobuf.Timestamp CreateTime = 4;
  if (this->_internal_has_createtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::createtime(this),
        _Internal::createtime(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcIncrementOperationMetaInfoV1)
  return target;
}

size_t SwcIncrementOperationMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcIncrementOperationMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string IncrementOperationCollectionName = 2;
  if (!this->_internal_incrementoperationcollectionname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_incrementoperationcollectionname());
  }

  // string StartSnapshot = 3;
  if (!this->_internal_startsnapshot().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_startsnapshot());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .google.protobuf.Timestamp CreateTime = 4;
  if (this->_internal_has_createtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.createtime_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcIncrementOperationMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcIncrementOperationMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcIncrementOperationMetaInfoV1::GetClassData() const { return &_class_data_; }


void SwcIncrementOperationMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcIncrementOperationMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const SwcIncrementOperationMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcIncrementOperationMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_incrementoperationcollectionname().empty()) {
    _this->_internal_set_incrementoperationcollectionname(from._internal_incrementoperationcollectionname());
  }
  if (!from._internal_startsnapshot().empty()) {
    _this->_internal_set_startsnapshot(from._internal_startsnapshot());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_createtime()) {
    _this->_internal_mutable_createtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_createtime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcIncrementOperationMetaInfoV1::CopyFrom(const SwcIncrementOperationMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcIncrementOperationMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcIncrementOperationMetaInfoV1::IsInitialized() const {
  return true;
}

void SwcIncrementOperationMetaInfoV1::InternalSwap(SwcIncrementOperationMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.incrementoperationcollectionname_, lhs_arena,
      &other->_impl_.incrementoperationcollectionname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.startsnapshot_, lhs_arena,
      &other->_impl_.startsnapshot_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwcIncrementOperationMetaInfoV1, _impl_.createtime_)
      + sizeof(SwcIncrementOperationMetaInfoV1::_impl_.createtime_)
      - PROTOBUF_FIELD_OFFSET(SwcIncrementOperationMetaInfoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcIncrementOperationMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[9]);
}

// ===================================================================

class SwcIncrementOperationV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const SwcIncrementOperationV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& createtime(const SwcIncrementOperationV1* msg);
  static const ::proto::SwcDataV1& swcdata(const SwcIncrementOperationV1* msg);
};

const ::proto::MetaInfoBase&
SwcIncrementOperationV1::_Internal::base(const SwcIncrementOperationV1* msg) {
  return *msg->_impl_.base_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SwcIncrementOperationV1::_Internal::createtime(const SwcIncrementOperationV1* msg) {
  return *msg->_impl_.createtime_;
}
const ::proto::SwcDataV1&
SwcIncrementOperationV1::_Internal::swcdata(const SwcIncrementOperationV1* msg) {
  return *msg->_impl_.swcdata_;
}
void SwcIncrementOperationV1::clear_createtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
}
SwcIncrementOperationV1::SwcIncrementOperationV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcIncrementOperationV1)
}
SwcIncrementOperationV1::SwcIncrementOperationV1(const SwcIncrementOperationV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcIncrementOperationV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.swcdata_){nullptr}
    , decltype(_impl_.incrementoperation_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_createtime()) {
    _this->_impl_.createtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.createtime_);
  }
  if (from._internal_has_swcdata()) {
    _this->_impl_.swcdata_ = new ::proto::SwcDataV1(*from._impl_.swcdata_);
  }
  _this->_impl_.incrementoperation_ = from._impl_.incrementoperation_;
  // @@protoc_insertion_point(copy_constructor:proto.SwcIncrementOperationV1)
}

inline void SwcIncrementOperationV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.swcdata_){nullptr}
    , decltype(_impl_.incrementoperation_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SwcIncrementOperationV1::~SwcIncrementOperationV1() {
  // @@protoc_insertion_point(destructor:proto.SwcIncrementOperationV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcIncrementOperationV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.createtime_;
  if (this != internal_default_instance()) delete _impl_.swcdata_;
}

void SwcIncrementOperationV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcIncrementOperationV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcIncrementOperationV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcdata_ != nullptr) {
    delete _impl_.swcdata_;
  }
  _impl_.swcdata_ = nullptr;
  _impl_.incrementoperation_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcIncrementOperationV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp CreateTime = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_createtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.IncrementOperationV1 IncrementOperation = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          uint64_t val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_incrementoperation(static_cast<::proto::IncrementOperationV1>(val));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcData = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcdata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcIncrementOperationV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcIncrementOperationV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp CreateTime = 2;
  if (this->_internal_has_createtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::createtime(this),
        _Internal::createtime(this).GetCachedSize(), target, stream);
  }

  // .proto.IncrementOperationV1 IncrementOperation = 3;
  if (this->_internal_incrementoperation() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteEnumToArray(
      3, this->_internal_incrementoperation(), target);
  }

  // .proto.SwcDataV1 SwcData = 4;
  if (this->_internal_has_swcdata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::swcdata(this),
        _Internal::swcdata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcIncrementOperationV1)
  return target;
}

size_t SwcIncrementOperationV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcIncrementOperationV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .google.protobuf.Timestamp CreateTime = 2;
  if (this->_internal_has_createtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.createtime_);
  }

  // .proto.SwcDataV1 SwcData = 4;
  if (this->_internal_has_swcdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcdata_);
  }

  // .proto.IncrementOperationV1 IncrementOperation = 3;
  if (this->_internal_incrementoperation() != 0) {
    total_size += 1 +
      ::_pbi::WireFormatLite::EnumSize(this->_internal_incrementoperation());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcIncrementOperationV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcIncrementOperationV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcIncrementOperationV1::GetClassData() const { return &_class_data_; }


void SwcIncrementOperationV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcIncrementOperationV1*>(&to_msg);
  auto& from = static_cast<const SwcIncrementOperationV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcIncrementOperationV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_createtime()) {
    _this->_internal_mutable_createtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_createtime());
  }
  if (from._internal_has_swcdata()) {
    _this->_internal_mutable_swcdata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcdata());
  }
  if (from._internal_incrementoperation() != 0) {
    _this->_internal_set_incrementoperation(from._internal_incrementoperation());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcIncrementOperationV1::CopyFrom(const SwcIncrementOperationV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcIncrementOperationV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcIncrementOperationV1::IsInitialized() const {
  return true;
}

void SwcIncrementOperationV1::InternalSwap(SwcIncrementOperationV1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwcIncrementOperationV1, _impl_.incrementoperation_)
      + sizeof(SwcIncrementOperationV1::_impl_.incrementoperation_)
      - PROTOBUF_FIELD_OFFSET(SwcIncrementOperationV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcIncrementOperationV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[10]);
}

// ===================================================================

class SwcIncrementOperationListV1::_Internal {
 public:
};

SwcIncrementOperationListV1::SwcIncrementOperationListV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcIncrementOperationListV1)
}
SwcIncrementOperationListV1::SwcIncrementOperationListV1(const SwcIncrementOperationListV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcIncrementOperationListV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcincrementoperation_){from._impl_.swcincrementoperation_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SwcIncrementOperationListV1)
}

inline void SwcIncrementOperationListV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcincrementoperation_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SwcIncrementOperationListV1::~SwcIncrementOperationListV1() {
  // @@protoc_insertion_point(destructor:proto.SwcIncrementOperationListV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcIncrementOperationListV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcincrementoperation_.~RepeatedPtrField();
}

void SwcIncrementOperationListV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcIncrementOperationListV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcIncrementOperationListV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcincrementoperation_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcIncrementOperationListV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .proto.SwcIncrementOperationV1 SwcIncrementOperation = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_swcincrementoperation(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcIncrementOperationListV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcIncrementOperationListV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SwcIncrementOperationV1 SwcIncrementOperation = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_swcincrementoperation_size()); i < n; i++) {
    const auto& repfield = this->_internal_swcincrementoperation(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcIncrementOperationListV1)
  return target;
}

size_t SwcIncrementOperationListV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcIncrementOperationListV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.SwcIncrementOperationV1 SwcIncrementOperation = 1;
  total_size += 1UL * this->_internal_swcincrementoperation_size();
  for (const auto& msg : this->_impl_.swcincrementoperation_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcIncrementOperationListV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcIncrementOperationListV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcIncrementOperationListV1::GetClassData() const { return &_class_data_; }


void SwcIncrementOperationListV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcIncrementOperationListV1*>(&to_msg);
  auto& from = static_cast<const SwcIncrementOperationListV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcIncrementOperationListV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swcincrementoperation_.MergeFrom(from._impl_.swcincrementoperation_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcIncrementOperationListV1::CopyFrom(const SwcIncrementOperationListV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcIncrementOperationListV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcIncrementOperationListV1::IsInitialized() const {
  return true;
}

void SwcIncrementOperationListV1::InternalSwap(SwcIncrementOperationListV1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swcincrementoperation_.InternalSwap(&other->_impl_.swcincrementoperation_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcIncrementOperationListV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[11]);
}

// ===================================================================

class SwcAttachmentAnoMetaInfoV1::_Internal {
 public:
};

SwcAttachmentAnoMetaInfoV1::SwcAttachmentAnoMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcAttachmentAnoMetaInfoV1)
}
SwcAttachmentAnoMetaInfoV1::SwcAttachmentAnoMetaInfoV1(const SwcAttachmentAnoMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcAttachmentAnoMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.attachmentuuid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.attachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.attachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_attachmentuuid().empty()) {
    _this->_impl_.attachmentuuid_.Set(from._internal_attachmentuuid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SwcAttachmentAnoMetaInfoV1)
}

inline void SwcAttachmentAnoMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.attachmentuuid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.attachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.attachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SwcAttachmentAnoMetaInfoV1::~SwcAttachmentAnoMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.SwcAttachmentAnoMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcAttachmentAnoMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attachmentuuid_.Destroy();
}

void SwcAttachmentAnoMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcAttachmentAnoMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcAttachmentAnoMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attachmentuuid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcAttachmentAnoMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string AttachmentUuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_attachmentuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcAttachmentAnoMetaInfoV1.AttachmentUuid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcAttachmentAnoMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcAttachmentAnoMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string AttachmentUuid = 1;
  if (!this->_internal_attachmentuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_attachmentuuid().data(), static_cast<int>(this->_internal_attachmentuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcAttachmentAnoMetaInfoV1.AttachmentUuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_attachmentuuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcAttachmentAnoMetaInfoV1)
  return target;
}

size_t SwcAttachmentAnoMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcAttachmentAnoMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string AttachmentUuid = 1;
  if (!this->_internal_attachmentuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_attachmentuuid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcAttachmentAnoMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcAttachmentAnoMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcAttachmentAnoMetaInfoV1::GetClassData() const { return &_class_data_; }


void SwcAttachmentAnoMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcAttachmentAnoMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const SwcAttachmentAnoMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcAttachmentAnoMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_attachmentuuid().empty()) {
    _this->_internal_set_attachmentuuid(from._internal_attachmentuuid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcAttachmentAnoMetaInfoV1::CopyFrom(const SwcAttachmentAnoMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcAttachmentAnoMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcAttachmentAnoMetaInfoV1::IsInitialized() const {
  return true;
}

void SwcAttachmentAnoMetaInfoV1::InternalSwap(SwcAttachmentAnoMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.attachmentuuid_, lhs_arena,
      &other->_impl_.attachmentuuid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcAttachmentAnoMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[12]);
}

// ===================================================================

class SwcAttachmentApoMetaInfoV1::_Internal {
 public:
};

SwcAttachmentApoMetaInfoV1::SwcAttachmentApoMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcAttachmentApoMetaInfoV1)
}
SwcAttachmentApoMetaInfoV1::SwcAttachmentApoMetaInfoV1(const SwcAttachmentApoMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcAttachmentApoMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.attachmentuuid_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.attachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.attachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_attachmentuuid().empty()) {
    _this->_impl_.attachmentuuid_.Set(from._internal_attachmentuuid(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.SwcAttachmentApoMetaInfoV1)
}

inline void SwcAttachmentApoMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.attachmentuuid_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.attachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.attachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SwcAttachmentApoMetaInfoV1::~SwcAttachmentApoMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.SwcAttachmentApoMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcAttachmentApoMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.attachmentuuid_.Destroy();
}

void SwcAttachmentApoMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcAttachmentApoMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcAttachmentApoMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.attachmentuuid_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcAttachmentApoMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string AttachmentUuid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_attachmentuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcAttachmentApoMetaInfoV1.AttachmentUuid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcAttachmentApoMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcAttachmentApoMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string AttachmentUuid = 1;
  if (!this->_internal_attachmentuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_attachmentuuid().data(), static_cast<int>(this->_internal_attachmentuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcAttachmentApoMetaInfoV1.AttachmentUuid");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_attachmentuuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcAttachmentApoMetaInfoV1)
  return target;
}

size_t SwcAttachmentApoMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcAttachmentApoMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string AttachmentUuid = 1;
  if (!this->_internal_attachmentuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_attachmentuuid());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcAttachmentApoMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcAttachmentApoMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcAttachmentApoMetaInfoV1::GetClassData() const { return &_class_data_; }


void SwcAttachmentApoMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcAttachmentApoMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const SwcAttachmentApoMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcAttachmentApoMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_attachmentuuid().empty()) {
    _this->_internal_set_attachmentuuid(from._internal_attachmentuuid());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcAttachmentApoMetaInfoV1::CopyFrom(const SwcAttachmentApoMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcAttachmentApoMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcAttachmentApoMetaInfoV1::IsInitialized() const {
  return true;
}

void SwcAttachmentApoMetaInfoV1::InternalSwap(SwcAttachmentApoMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.attachmentuuid_, lhs_arena,
      &other->_impl_.attachmentuuid_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcAttachmentApoMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[13]);
}

// ===================================================================

class SwcMetaInfoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const SwcMetaInfoV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& createtime(const SwcMetaInfoV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& lastmodifiedtime(const SwcMetaInfoV1* msg);
  static const ::proto::SwcAttachmentAnoMetaInfoV1& swcattachmentanometainfo(const SwcMetaInfoV1* msg);
  static const ::proto::SwcAttachmentApoMetaInfoV1& swcattachmentapometainfo(const SwcMetaInfoV1* msg);
};

const ::proto::MetaInfoBase&
SwcMetaInfoV1::_Internal::base(const SwcMetaInfoV1* msg) {
  return *msg->_impl_.base_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SwcMetaInfoV1::_Internal::createtime(const SwcMetaInfoV1* msg) {
  return *msg->_impl_.createtime_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SwcMetaInfoV1::_Internal::lastmodifiedtime(const SwcMetaInfoV1* msg) {
  return *msg->_impl_.lastmodifiedtime_;
}
const ::proto::SwcAttachmentAnoMetaInfoV1&
SwcMetaInfoV1::_Internal::swcattachmentanometainfo(const SwcMetaInfoV1* msg) {
  return *msg->_impl_.swcattachmentanometainfo_;
}
const ::proto::SwcAttachmentApoMetaInfoV1&
SwcMetaInfoV1::_Internal::swcattachmentapometainfo(const SwcMetaInfoV1* msg) {
  return *msg->_impl_.swcattachmentapometainfo_;
}
void SwcMetaInfoV1::clear_createtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
}
void SwcMetaInfoV1::clear_lastmodifiedtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.lastmodifiedtime_ != nullptr) {
    delete _impl_.lastmodifiedtime_;
  }
  _impl_.lastmodifiedtime_ = nullptr;
}
SwcMetaInfoV1::SwcMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcMetaInfoV1)
}
SwcMetaInfoV1::SwcMetaInfoV1(const SwcMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcsnapshotmetainfolist_){from._impl_.swcsnapshotmetainfolist_}
    , decltype(_impl_.swcincrementoperationmetainfolist_){from._impl_.swcincrementoperationmetainfolist_}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.creator_){}
    , decltype(_impl_.swctype_){}
    , decltype(_impl_.currentincrementoperationcollectionname_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.lastmodifiedtime_){nullptr}
    , decltype(_impl_.swcattachmentanometainfo_){nullptr}
    , decltype(_impl_.swcattachmentapometainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator().empty()) {
    _this->_impl_.creator_.Set(from._internal_creator(), 
      _this->GetArenaForAllocation());
  }
  _impl_.swctype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swctype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swctype().empty()) {
    _this->_impl_.swctype_.Set(from._internal_swctype(), 
      _this->GetArenaForAllocation());
  }
  _impl_.currentincrementoperationcollectionname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.currentincrementoperationcollectionname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_currentincrementoperationcollectionname().empty()) {
    _this->_impl_.currentincrementoperationcollectionname_.Set(from._internal_currentincrementoperationcollectionname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_createtime()) {
    _this->_impl_.createtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.createtime_);
  }
  if (from._internal_has_lastmodifiedtime()) {
    _this->_impl_.lastmodifiedtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.lastmodifiedtime_);
  }
  if (from._internal_has_swcattachmentanometainfo()) {
    _this->_impl_.swcattachmentanometainfo_ = new ::proto::SwcAttachmentAnoMetaInfoV1(*from._impl_.swcattachmentanometainfo_);
  }
  if (from._internal_has_swcattachmentapometainfo()) {
    _this->_impl_.swcattachmentapometainfo_ = new ::proto::SwcAttachmentApoMetaInfoV1(*from._impl_.swcattachmentapometainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SwcMetaInfoV1)
}

inline void SwcMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcsnapshotmetainfolist_){arena}
    , decltype(_impl_.swcincrementoperationmetainfolist_){arena}
    , decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.creator_){}
    , decltype(_impl_.swctype_){}
    , decltype(_impl_.currentincrementoperationcollectionname_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.lastmodifiedtime_){nullptr}
    , decltype(_impl_.swcattachmentanometainfo_){nullptr}
    , decltype(_impl_.swcattachmentapometainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.swctype_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swctype_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.currentincrementoperationcollectionname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.currentincrementoperationcollectionname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SwcMetaInfoV1::~SwcMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.SwcMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcsnapshotmetainfolist_.~RepeatedPtrField();
  _impl_.swcincrementoperationmetainfolist_.~RepeatedPtrField();
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.creator_.Destroy();
  _impl_.swctype_.Destroy();
  _impl_.currentincrementoperationcollectionname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.createtime_;
  if (this != internal_default_instance()) delete _impl_.lastmodifiedtime_;
  if (this != internal_default_instance()) delete _impl_.swcattachmentanometainfo_;
  if (this != internal_default_instance()) delete _impl_.swcattachmentapometainfo_;
}

void SwcMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcsnapshotmetainfolist_.Clear();
  _impl_.swcincrementoperationmetainfolist_.Clear();
  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.creator_.ClearToEmpty();
  _impl_.swctype_.ClearToEmpty();
  _impl_.currentincrementoperationcollectionname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.lastmodifiedtime_ != nullptr) {
    delete _impl_.lastmodifiedtime_;
  }
  _impl_.lastmodifiedtime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcattachmentanometainfo_ != nullptr) {
    delete _impl_.swcattachmentanometainfo_;
  }
  _impl_.swcattachmentanometainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcattachmentapometainfo_ != nullptr) {
    delete _impl_.swcattachmentapometainfo_;
  }
  _impl_.swcattachmentapometainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcMetaInfoV1.Name"));
        } else
          goto handle_unusual;
        continue;
      // string Description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcMetaInfoV1.Description"));
        } else
          goto handle_unusual;
        continue;
      // string Creator = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_creator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcMetaInfoV1.Creator"));
        } else
          goto handle_unusual;
        continue;
      // string SwcType = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_swctype();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcMetaInfoV1.SwcType"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp CreateTime = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          ptr = ctx->ParseMessage(_internal_mutable_createtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp LastModifiedTime = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 58)) {
          ptr = ctx->ParseMessage(_internal_mutable_lastmodifiedtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.SwcSnapshotMetaInfoV1 SwcSnapshotMetaInfoList = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 66)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_swcsnapshotmetainfolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<66>(ptr));
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.SwcIncrementOperationMetaInfoV1 SwcIncrementOperationMetaInfoList = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_swcincrementoperationmetainfolist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<74>(ptr));
        } else
          goto handle_unusual;
        continue;
      // string CurrentIncrementOperationCollectionName = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 82)) {
          auto str = _internal_mutable_currentincrementoperationcollectionname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcMetaInfoV1.CurrentIncrementOperationCollectionName"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcAttachmentAnoMetaInfoV1 SwcAttachmentAnoMetaInfo = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 90)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcattachmentanometainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcAttachmentApoMetaInfoV1 SwcAttachmentApoMetaInfo = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 98)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcattachmentapometainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcMetaInfoV1.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcMetaInfoV1.Description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string Creator = 4;
  if (!this->_internal_creator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator().data(), static_cast<int>(this->_internal_creator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcMetaInfoV1.Creator");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_creator(), target);
  }

  // string SwcType = 5;
  if (!this->_internal_swctype().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swctype().data(), static_cast<int>(this->_internal_swctype().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcMetaInfoV1.SwcType");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_swctype(), target);
  }

  // .google.protobuf.Timestamp CreateTime = 6;
  if (this->_internal_has_createtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(6, _Internal::createtime(this),
        _Internal::createtime(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp LastModifiedTime = 7;
  if (this->_internal_has_lastmodifiedtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(7, _Internal::lastmodifiedtime(this),
        _Internal::lastmodifiedtime(this).GetCachedSize(), target, stream);
  }

  // repeated .proto.SwcSnapshotMetaInfoV1 SwcSnapshotMetaInfoList = 8;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_swcsnapshotmetainfolist_size()); i < n; i++) {
    const auto& repfield = this->_internal_swcsnapshotmetainfolist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(8, repfield, repfield.GetCachedSize(), target, stream);
  }

  // repeated .proto.SwcIncrementOperationMetaInfoV1 SwcIncrementOperationMetaInfoList = 9;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_swcincrementoperationmetainfolist_size()); i < n; i++) {
    const auto& repfield = this->_internal_swcincrementoperationmetainfolist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(9, repfield, repfield.GetCachedSize(), target, stream);
  }

  // string CurrentIncrementOperationCollectionName = 10;
  if (!this->_internal_currentincrementoperationcollectionname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_currentincrementoperationcollectionname().data(), static_cast<int>(this->_internal_currentincrementoperationcollectionname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcMetaInfoV1.CurrentIncrementOperationCollectionName");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_currentincrementoperationcollectionname(), target);
  }

  // .proto.SwcAttachmentAnoMetaInfoV1 SwcAttachmentAnoMetaInfo = 11;
  if (this->_internal_has_swcattachmentanometainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(11, _Internal::swcattachmentanometainfo(this),
        _Internal::swcattachmentanometainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcAttachmentApoMetaInfoV1 SwcAttachmentApoMetaInfo = 12;
  if (this->_internal_has_swcattachmentapometainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(12, _Internal::swcattachmentapometainfo(this),
        _Internal::swcattachmentapometainfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcMetaInfoV1)
  return target;
}

size_t SwcMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.SwcSnapshotMetaInfoV1 SwcSnapshotMetaInfoList = 8;
  total_size += 1UL * this->_internal_swcsnapshotmetainfolist_size();
  for (const auto& msg : this->_impl_.swcsnapshotmetainfolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // repeated .proto.SwcIncrementOperationMetaInfoV1 SwcIncrementOperationMetaInfoList = 9;
  total_size += 1UL * this->_internal_swcincrementoperationmetainfolist_size();
  for (const auto& msg : this->_impl_.swcincrementoperationmetainfolist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string Creator = 4;
  if (!this->_internal_creator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator());
  }

  // string SwcType = 5;
  if (!this->_internal_swctype().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swctype());
  }

  // string CurrentIncrementOperationCollectionName = 10;
  if (!this->_internal_currentincrementoperationcollectionname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_currentincrementoperationcollectionname());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .google.protobuf.Timestamp CreateTime = 6;
  if (this->_internal_has_createtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.createtime_);
  }

  // .google.protobuf.Timestamp LastModifiedTime = 7;
  if (this->_internal_has_lastmodifiedtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lastmodifiedtime_);
  }

  // .proto.SwcAttachmentAnoMetaInfoV1 SwcAttachmentAnoMetaInfo = 11;
  if (this->_internal_has_swcattachmentanometainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcattachmentanometainfo_);
  }

  // .proto.SwcAttachmentApoMetaInfoV1 SwcAttachmentApoMetaInfo = 12;
  if (this->_internal_has_swcattachmentapometainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcattachmentapometainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcMetaInfoV1::GetClassData() const { return &_class_data_; }


void SwcMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const SwcMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swcsnapshotmetainfolist_.MergeFrom(from._impl_.swcsnapshotmetainfolist_);
  _this->_impl_.swcincrementoperationmetainfolist_.MergeFrom(from._impl_.swcincrementoperationmetainfolist_);
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_creator().empty()) {
    _this->_internal_set_creator(from._internal_creator());
  }
  if (!from._internal_swctype().empty()) {
    _this->_internal_set_swctype(from._internal_swctype());
  }
  if (!from._internal_currentincrementoperationcollectionname().empty()) {
    _this->_internal_set_currentincrementoperationcollectionname(from._internal_currentincrementoperationcollectionname());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_createtime()) {
    _this->_internal_mutable_createtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_createtime());
  }
  if (from._internal_has_lastmodifiedtime()) {
    _this->_internal_mutable_lastmodifiedtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_lastmodifiedtime());
  }
  if (from._internal_has_swcattachmentanometainfo()) {
    _this->_internal_mutable_swcattachmentanometainfo()->::proto::SwcAttachmentAnoMetaInfoV1::MergeFrom(
        from._internal_swcattachmentanometainfo());
  }
  if (from._internal_has_swcattachmentapometainfo()) {
    _this->_internal_mutable_swcattachmentapometainfo()->::proto::SwcAttachmentApoMetaInfoV1::MergeFrom(
        from._internal_swcattachmentapometainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcMetaInfoV1::CopyFrom(const SwcMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcMetaInfoV1::IsInitialized() const {
  return true;
}

void SwcMetaInfoV1::InternalSwap(SwcMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swcsnapshotmetainfolist_.InternalSwap(&other->_impl_.swcsnapshotmetainfolist_);
  _impl_.swcincrementoperationmetainfolist_.InternalSwap(&other->_impl_.swcincrementoperationmetainfolist_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.creator_, lhs_arena,
      &other->_impl_.creator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swctype_, lhs_arena,
      &other->_impl_.swctype_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.currentincrementoperationcollectionname_, lhs_arena,
      &other->_impl_.currentincrementoperationcollectionname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwcMetaInfoV1, _impl_.swcattachmentapometainfo_)
      + sizeof(SwcMetaInfoV1::_impl_.swcattachmentapometainfo_)
      - PROTOBUF_FIELD_OFFSET(SwcMetaInfoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[14]);
}

// ===================================================================

class SwcNodeInternalDataV1::_Internal {
 public:
};

SwcNodeInternalDataV1::SwcNodeInternalDataV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcNodeInternalDataV1)
}
SwcNodeInternalDataV1::SwcNodeInternalDataV1(const SwcNodeInternalDataV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcNodeInternalDataV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.n_){}
    , decltype(_impl_.type_){}
    , decltype(_impl_.x_){}
    , decltype(_impl_.y_){}
    , decltype(_impl_.z_){}
    , decltype(_impl_.radius_){}
    , decltype(_impl_.parent_){}
    , decltype(_impl_.seg_id_){}
    , decltype(_impl_.level_){}
    , decltype(_impl_.mode_){}
    , decltype(_impl_.timestamp_){}
    , decltype(_impl_.feature_value_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::memcpy(&_impl_.n_, &from._impl_.n_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.feature_value_) -
    reinterpret_cast<char*>(&_impl_.n_)) + sizeof(_impl_.feature_value_));
  // @@protoc_insertion_point(copy_constructor:proto.SwcNodeInternalDataV1)
}

inline void SwcNodeInternalDataV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.n_){0}
    , decltype(_impl_.type_){0}
    , decltype(_impl_.x_){0}
    , decltype(_impl_.y_){0}
    , decltype(_impl_.z_){0}
    , decltype(_impl_.radius_){0}
    , decltype(_impl_.parent_){0}
    , decltype(_impl_.seg_id_){0}
    , decltype(_impl_.level_){0}
    , decltype(_impl_.mode_){0}
    , decltype(_impl_.timestamp_){0}
    , decltype(_impl_.feature_value_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SwcNodeInternalDataV1::~SwcNodeInternalDataV1() {
  // @@protoc_insertion_point(destructor:proto.SwcNodeInternalDataV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcNodeInternalDataV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
}

void SwcNodeInternalDataV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcNodeInternalDataV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcNodeInternalDataV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&_impl_.n_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.feature_value_) -
      reinterpret_cast<char*>(&_impl_.n_)) + sizeof(_impl_.feature_value_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcNodeInternalDataV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // int32 N = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.n_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Type = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // float X = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 29)) {
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Y = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 37)) {
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Z = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 45)) {
          _impl_.z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Radius = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          _impl_.radius_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // int32 Parent = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.parent_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Seg_id = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.seg_id_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Level = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Mode = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.mode_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Timestamp = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 Feature_value = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.feature_value_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcNodeInternalDataV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcNodeInternalDataV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 N = 1;
  if (this->_internal_n() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(1, this->_internal_n(), target);
  }

  // int32 Type = 2;
  if (this->_internal_type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_type(), target);
  }

  // float X = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(3, this->_internal_x(), target);
  }

  // float Y = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(4, this->_internal_y(), target);
  }

  // float Z = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(5, this->_internal_z(), target);
  }

  // float Radius = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_radius = this->_internal_radius();
  uint32_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(6, this->_internal_radius(), target);
  }

  // int32 Parent = 7;
  if (this->_internal_parent() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_parent(), target);
  }

  // int32 Seg_id = 8;
  if (this->_internal_seg_id() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_seg_id(), target);
  }

  // int32 Level = 9;
  if (this->_internal_level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_level(), target);
  }

  // int32 Mode = 10;
  if (this->_internal_mode() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_mode(), target);
  }

  // int32 Timestamp = 11;
  if (this->_internal_timestamp() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(11, this->_internal_timestamp(), target);
  }

  // int32 Feature_value = 12;
  if (this->_internal_feature_value() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(12, this->_internal_feature_value(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcNodeInternalDataV1)
  return target;
}

size_t SwcNodeInternalDataV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcNodeInternalDataV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // int32 N = 1;
  if (this->_internal_n() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_n());
  }

  // int32 Type = 2;
  if (this->_internal_type() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_type());
  }

  // float X = 3;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 1 + 4;
  }

  // float Y = 4;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 1 + 4;
  }

  // float Z = 5;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 1 + 4;
  }

  // float Radius = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_radius = this->_internal_radius();
  uint32_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    total_size += 1 + 4;
  }

  // int32 Parent = 7;
  if (this->_internal_parent() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_parent());
  }

  // int32 Seg_id = 8;
  if (this->_internal_seg_id() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_seg_id());
  }

  // int32 Level = 9;
  if (this->_internal_level() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_level());
  }

  // int32 Mode = 10;
  if (this->_internal_mode() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_mode());
  }

  // int32 Timestamp = 11;
  if (this->_internal_timestamp() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_timestamp());
  }

  // int32 Feature_value = 12;
  if (this->_internal_feature_value() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_feature_value());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcNodeInternalDataV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcNodeInternalDataV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcNodeInternalDataV1::GetClassData() const { return &_class_data_; }


void SwcNodeInternalDataV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcNodeInternalDataV1*>(&to_msg);
  auto& from = static_cast<const SwcNodeInternalDataV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcNodeInternalDataV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_n() != 0) {
    _this->_internal_set_n(from._internal_n());
  }
  if (from._internal_type() != 0) {
    _this->_internal_set_type(from._internal_type());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_internal_set_z(from._internal_z());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_radius = from._internal_radius();
  uint32_t raw_radius;
  memcpy(&raw_radius, &tmp_radius, sizeof(tmp_radius));
  if (raw_radius != 0) {
    _this->_internal_set_radius(from._internal_radius());
  }
  if (from._internal_parent() != 0) {
    _this->_internal_set_parent(from._internal_parent());
  }
  if (from._internal_seg_id() != 0) {
    _this->_internal_set_seg_id(from._internal_seg_id());
  }
  if (from._internal_level() != 0) {
    _this->_internal_set_level(from._internal_level());
  }
  if (from._internal_mode() != 0) {
    _this->_internal_set_mode(from._internal_mode());
  }
  if (from._internal_timestamp() != 0) {
    _this->_internal_set_timestamp(from._internal_timestamp());
  }
  if (from._internal_feature_value() != 0) {
    _this->_internal_set_feature_value(from._internal_feature_value());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcNodeInternalDataV1::CopyFrom(const SwcNodeInternalDataV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcNodeInternalDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcNodeInternalDataV1::IsInitialized() const {
  return true;
}

void SwcNodeInternalDataV1::InternalSwap(SwcNodeInternalDataV1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwcNodeInternalDataV1, _impl_.feature_value_)
      + sizeof(SwcNodeInternalDataV1::_impl_.feature_value_)
      - PROTOBUF_FIELD_OFFSET(SwcNodeInternalDataV1, _impl_.n_)>(
          reinterpret_cast<char*>(&_impl_.n_),
          reinterpret_cast<char*>(&other->_impl_.n_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcNodeInternalDataV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[15]);
}

// ===================================================================

class SwcNodeDataV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const SwcNodeDataV1* msg);
  static const ::proto::SwcNodeInternalDataV1& swcnodeinternaldata(const SwcNodeDataV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& createtime(const SwcNodeDataV1* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& lastmodifiedtime(const SwcNodeDataV1* msg);
};

const ::proto::MetaInfoBase&
SwcNodeDataV1::_Internal::base(const SwcNodeDataV1* msg) {
  return *msg->_impl_.base_;
}
const ::proto::SwcNodeInternalDataV1&
SwcNodeDataV1::_Internal::swcnodeinternaldata(const SwcNodeDataV1* msg) {
  return *msg->_impl_.swcnodeinternaldata_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SwcNodeDataV1::_Internal::createtime(const SwcNodeDataV1* msg) {
  return *msg->_impl_.createtime_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
SwcNodeDataV1::_Internal::lastmodifiedtime(const SwcNodeDataV1* msg) {
  return *msg->_impl_.lastmodifiedtime_;
}
void SwcNodeDataV1::clear_createtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
}
void SwcNodeDataV1::clear_lastmodifiedtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.lastmodifiedtime_ != nullptr) {
    delete _impl_.lastmodifiedtime_;
  }
  _impl_.lastmodifiedtime_ = nullptr;
}
SwcNodeDataV1::SwcNodeDataV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcNodeDataV1)
}
SwcNodeDataV1::SwcNodeDataV1(const SwcNodeDataV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcNodeDataV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.creator_){}
    , decltype(_impl_.checkeruseruuid_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.swcnodeinternaldata_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.lastmodifiedtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_creator().empty()) {
    _this->_impl_.creator_.Set(from._internal_creator(), 
      _this->GetArenaForAllocation());
  }
  _impl_.checkeruseruuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.checkeruseruuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_checkeruseruuid().empty()) {
    _this->_impl_.checkeruseruuid_.Set(from._internal_checkeruseruuid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  if (from._internal_has_swcnodeinternaldata()) {
    _this->_impl_.swcnodeinternaldata_ = new ::proto::SwcNodeInternalDataV1(*from._impl_.swcnodeinternaldata_);
  }
  if (from._internal_has_createtime()) {
    _this->_impl_.createtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.createtime_);
  }
  if (from._internal_has_lastmodifiedtime()) {
    _this->_impl_.lastmodifiedtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.lastmodifiedtime_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SwcNodeDataV1)
}

inline void SwcNodeDataV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.creator_){}
    , decltype(_impl_.checkeruseruuid_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.swcnodeinternaldata_){nullptr}
    , decltype(_impl_.createtime_){nullptr}
    , decltype(_impl_.lastmodifiedtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.creator_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.creator_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.checkeruseruuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.checkeruseruuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SwcNodeDataV1::~SwcNodeDataV1() {
  // @@protoc_insertion_point(destructor:proto.SwcNodeDataV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcNodeDataV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.creator_.Destroy();
  _impl_.checkeruseruuid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
  if (this != internal_default_instance()) delete _impl_.swcnodeinternaldata_;
  if (this != internal_default_instance()) delete _impl_.createtime_;
  if (this != internal_default_instance()) delete _impl_.lastmodifiedtime_;
}

void SwcNodeDataV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcNodeDataV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcNodeDataV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.creator_.ClearToEmpty();
  _impl_.checkeruseruuid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodeinternaldata_ != nullptr) {
    delete _impl_.swcnodeinternaldata_;
  }
  _impl_.swcnodeinternaldata_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.createtime_ != nullptr) {
    delete _impl_.createtime_;
  }
  _impl_.createtime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.lastmodifiedtime_ != nullptr) {
    delete _impl_.lastmodifiedtime_;
  }
  _impl_.lastmodifiedtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcNodeDataV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcNodeInternalDataV1 SwcNodeInternalData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcnodeinternaldata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Creator = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_creator();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcNodeDataV1.Creator"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp CreateTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_createtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp LastModifiedTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_lastmodifiedtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string CheckerUserUuid = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_checkeruseruuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcNodeDataV1.CheckerUserUuid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcNodeDataV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcNodeDataV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcNodeInternalDataV1 SwcNodeInternalData = 2;
  if (this->_internal_has_swcnodeinternaldata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::swcnodeinternaldata(this),
        _Internal::swcnodeinternaldata(this).GetCachedSize(), target, stream);
  }

  // string Creator = 3;
  if (!this->_internal_creator().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_creator().data(), static_cast<int>(this->_internal_creator().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcNodeDataV1.Creator");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_creator(), target);
  }

  // .google.protobuf.Timestamp CreateTime = 4;
  if (this->_internal_has_createtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::createtime(this),
        _Internal::createtime(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp LastModifiedTime = 5;
  if (this->_internal_has_lastmodifiedtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::lastmodifiedtime(this),
        _Internal::lastmodifiedtime(this).GetCachedSize(), target, stream);
  }

  // string CheckerUserUuid = 6;
  if (!this->_internal_checkeruseruuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_checkeruseruuid().data(), static_cast<int>(this->_internal_checkeruseruuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcNodeDataV1.CheckerUserUuid");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_checkeruseruuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcNodeDataV1)
  return target;
}

size_t SwcNodeDataV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcNodeDataV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Creator = 3;
  if (!this->_internal_creator().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_creator());
  }

  // string CheckerUserUuid = 6;
  if (!this->_internal_checkeruseruuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_checkeruseruuid());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // .proto.SwcNodeInternalDataV1 SwcNodeInternalData = 2;
  if (this->_internal_has_swcnodeinternaldata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcnodeinternaldata_);
  }

  // .google.protobuf.Timestamp CreateTime = 4;
  if (this->_internal_has_createtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.createtime_);
  }

  // .google.protobuf.Timestamp LastModifiedTime = 5;
  if (this->_internal_has_lastmodifiedtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.lastmodifiedtime_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcNodeDataV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcNodeDataV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcNodeDataV1::GetClassData() const { return &_class_data_; }


void SwcNodeDataV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcNodeDataV1*>(&to_msg);
  auto& from = static_cast<const SwcNodeDataV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcNodeDataV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_creator().empty()) {
    _this->_internal_set_creator(from._internal_creator());
  }
  if (!from._internal_checkeruseruuid().empty()) {
    _this->_internal_set_checkeruseruuid(from._internal_checkeruseruuid());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_has_swcnodeinternaldata()) {
    _this->_internal_mutable_swcnodeinternaldata()->::proto::SwcNodeInternalDataV1::MergeFrom(
        from._internal_swcnodeinternaldata());
  }
  if (from._internal_has_createtime()) {
    _this->_internal_mutable_createtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_createtime());
  }
  if (from._internal_has_lastmodifiedtime()) {
    _this->_internal_mutable_lastmodifiedtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_lastmodifiedtime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcNodeDataV1::CopyFrom(const SwcNodeDataV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcNodeDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcNodeDataV1::IsInitialized() const {
  return true;
}

void SwcNodeDataV1::InternalSwap(SwcNodeDataV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.creator_, lhs_arena,
      &other->_impl_.creator_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.checkeruseruuid_, lhs_arena,
      &other->_impl_.checkeruseruuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwcNodeDataV1, _impl_.lastmodifiedtime_)
      + sizeof(SwcNodeDataV1::_impl_.lastmodifiedtime_)
      - PROTOBUF_FIELD_OFFSET(SwcNodeDataV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcNodeDataV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[16]);
}

// ===================================================================

class SwcDataV1::_Internal {
 public:
};

SwcDataV1::SwcDataV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcDataV1)
}
SwcDataV1::SwcDataV1(const SwcDataV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcDataV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcdata_){from._impl_.swcdata_}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:proto.SwcDataV1)
}

inline void SwcDataV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcdata_){arena}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

SwcDataV1::~SwcDataV1() {
  // @@protoc_insertion_point(destructor:proto.SwcDataV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcDataV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcdata_.~RepeatedPtrField();
}

void SwcDataV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcDataV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcDataV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcdata_.Clear();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcDataV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // repeated .proto.SwcNodeDataV1 SwcData = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_swcdata(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcDataV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcDataV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .proto.SwcNodeDataV1 SwcData = 1;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_swcdata_size()); i < n; i++) {
    const auto& repfield = this->_internal_swcdata(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(1, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcDataV1)
  return target;
}

size_t SwcDataV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcDataV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.SwcNodeDataV1 SwcData = 1;
  total_size += 1UL * this->_internal_swcdata_size();
  for (const auto& msg : this->_impl_.swcdata_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcDataV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcDataV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcDataV1::GetClassData() const { return &_class_data_; }


void SwcDataV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcDataV1*>(&to_msg);
  auto& from = static_cast<const SwcDataV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcDataV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swcdata_.MergeFrom(from._impl_.swcdata_);
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcDataV1::CopyFrom(const SwcDataV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcDataV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcDataV1::IsInitialized() const {
  return true;
}

void SwcDataV1::InternalSwap(SwcDataV1* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swcdata_.InternalSwap(&other->_impl_.swcdata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcDataV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[17]);
}

// ===================================================================

class DailyStatisticsMetaInfoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const DailyStatisticsMetaInfoV1* msg);
};

const ::proto::MetaInfoBase&
DailyStatisticsMetaInfoV1::_Internal::base(const DailyStatisticsMetaInfoV1* msg) {
  return *msg->_impl_.base_;
}
DailyStatisticsMetaInfoV1::DailyStatisticsMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DailyStatisticsMetaInfoV1)
}
DailyStatisticsMetaInfoV1::DailyStatisticsMetaInfoV1(const DailyStatisticsMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DailyStatisticsMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.day_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createdprojectnumber_){}
    , decltype(_impl_.createdswcnumber_){}
    , decltype(_impl_.createswcnodenumber_){}
    , decltype(_impl_.deletedprojectnumber_){}
    , decltype(_impl_.deletedswcnumber_){}
    , decltype(_impl_.deletedswcnodenumber_){}
    , decltype(_impl_.modifiedprojectnumber_){}
    , decltype(_impl_.modifiedswcnumber_){}
    , decltype(_impl_.modifiedswcnodenumber_){}
    , decltype(_impl_.projectquerynumber_){}
    , decltype(_impl_.swcquerynumber_){}
    , decltype(_impl_.nodequerynumber_){}
    , decltype(_impl_.activeusernumber_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_description().empty()) {
    _this->_impl_.description_.Set(from._internal_description(), 
      _this->GetArenaForAllocation());
  }
  _impl_.day_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.day_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_day().empty()) {
    _this->_impl_.day_.Set(from._internal_day(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  ::memcpy(&_impl_.createdprojectnumber_, &from._impl_.createdprojectnumber_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.activeusernumber_) -
    reinterpret_cast<char*>(&_impl_.createdprojectnumber_)) + sizeof(_impl_.activeusernumber_));
  // @@protoc_insertion_point(copy_constructor:proto.DailyStatisticsMetaInfoV1)
}

inline void DailyStatisticsMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.name_){}
    , decltype(_impl_.description_){}
    , decltype(_impl_.day_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.createdprojectnumber_){0}
    , decltype(_impl_.createdswcnumber_){0}
    , decltype(_impl_.createswcnodenumber_){0}
    , decltype(_impl_.deletedprojectnumber_){0}
    , decltype(_impl_.deletedswcnumber_){0}
    , decltype(_impl_.deletedswcnodenumber_){0}
    , decltype(_impl_.modifiedprojectnumber_){0}
    , decltype(_impl_.modifiedswcnumber_){0}
    , decltype(_impl_.modifiedswcnodenumber_){0}
    , decltype(_impl_.projectquerynumber_){0}
    , decltype(_impl_.swcquerynumber_){0}
    , decltype(_impl_.nodequerynumber_){0}
    , decltype(_impl_.activeusernumber_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.description_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.description_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.day_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.day_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DailyStatisticsMetaInfoV1::~DailyStatisticsMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.DailyStatisticsMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DailyStatisticsMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.name_.Destroy();
  _impl_.description_.Destroy();
  _impl_.day_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void DailyStatisticsMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DailyStatisticsMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DailyStatisticsMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.name_.ClearToEmpty();
  _impl_.description_.ClearToEmpty();
  _impl_.day_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  ::memset(&_impl_.createdprojectnumber_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.activeusernumber_) -
      reinterpret_cast<char*>(&_impl_.createdprojectnumber_)) + sizeof(_impl_.activeusernumber_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DailyStatisticsMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Name = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DailyStatisticsMetaInfoV1.Name"));
        } else
          goto handle_unusual;
        continue;
      // string Description = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_description();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DailyStatisticsMetaInfoV1.Description"));
        } else
          goto handle_unusual;
        continue;
      // string Day = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_day();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DailyStatisticsMetaInfoV1.Day"));
        } else
          goto handle_unusual;
        continue;
      // int32 CreatedProjectNumber = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 40)) {
          _impl_.createdprojectnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CreatedSwcNumber = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 48)) {
          _impl_.createdswcnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 CreateSwcNodeNumber = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 56)) {
          _impl_.createswcnodenumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 DeletedProjectNumber = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 64)) {
          _impl_.deletedprojectnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 DeletedSwcNumber = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 72)) {
          _impl_.deletedswcnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 DeletedSwcNodeNumber = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 80)) {
          _impl_.deletedswcnodenumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ModifiedProjectNumber = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 88)) {
          _impl_.modifiedprojectnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ModifiedSwcNumber = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 96)) {
          _impl_.modifiedswcnumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ModifiedSwcNodeNumber = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 104)) {
          _impl_.modifiedswcnodenumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ProjectQueryNumber = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.projectquerynumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 SwcQueryNumber = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _impl_.swcquerynumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 NodeQueryNumber = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _impl_.nodequerynumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ActiveUserNumber = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 136)) {
          _impl_.activeusernumber_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DailyStatisticsMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DailyStatisticsMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DailyStatisticsMetaInfoV1.Name");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_name(), target);
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_description().data(), static_cast<int>(this->_internal_description().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DailyStatisticsMetaInfoV1.Description");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_description(), target);
  }

  // string Day = 4;
  if (!this->_internal_day().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_day().data(), static_cast<int>(this->_internal_day().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DailyStatisticsMetaInfoV1.Day");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_day(), target);
  }

  // int32 CreatedProjectNumber = 5;
  if (this->_internal_createdprojectnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(5, this->_internal_createdprojectnumber(), target);
  }

  // int32 CreatedSwcNumber = 6;
  if (this->_internal_createdswcnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(6, this->_internal_createdswcnumber(), target);
  }

  // int32 CreateSwcNodeNumber = 7;
  if (this->_internal_createswcnodenumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(7, this->_internal_createswcnodenumber(), target);
  }

  // int32 DeletedProjectNumber = 8;
  if (this->_internal_deletedprojectnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(8, this->_internal_deletedprojectnumber(), target);
  }

  // int32 DeletedSwcNumber = 9;
  if (this->_internal_deletedswcnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(9, this->_internal_deletedswcnumber(), target);
  }

  // int32 DeletedSwcNodeNumber = 10;
  if (this->_internal_deletedswcnodenumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(10, this->_internal_deletedswcnodenumber(), target);
  }

  // int32 ModifiedProjectNumber = 11;
  if (this->_internal_modifiedprojectnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(11, this->_internal_modifiedprojectnumber(), target);
  }

  // int32 ModifiedSwcNumber = 12;
  if (this->_internal_modifiedswcnumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(12, this->_internal_modifiedswcnumber(), target);
  }

  // int32 ModifiedSwcNodeNumber = 13;
  if (this->_internal_modifiedswcnodenumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(13, this->_internal_modifiedswcnodenumber(), target);
  }

  // int32 ProjectQueryNumber = 14;
  if (this->_internal_projectquerynumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(14, this->_internal_projectquerynumber(), target);
  }

  // int32 SwcQueryNumber = 15;
  if (this->_internal_swcquerynumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(15, this->_internal_swcquerynumber(), target);
  }

  // int32 NodeQueryNumber = 16;
  if (this->_internal_nodequerynumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(16, this->_internal_nodequerynumber(), target);
  }

  // int32 ActiveUserNumber = 17;
  if (this->_internal_activeusernumber() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(17, this->_internal_activeusernumber(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DailyStatisticsMetaInfoV1)
  return target;
}

size_t DailyStatisticsMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DailyStatisticsMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Name = 2;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Description = 3;
  if (!this->_internal_description().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_description());
  }

  // string Day = 4;
  if (!this->_internal_day().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_day());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // int32 CreatedProjectNumber = 5;
  if (this->_internal_createdprojectnumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_createdprojectnumber());
  }

  // int32 CreatedSwcNumber = 6;
  if (this->_internal_createdswcnumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_createdswcnumber());
  }

  // int32 CreateSwcNodeNumber = 7;
  if (this->_internal_createswcnodenumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_createswcnodenumber());
  }

  // int32 DeletedProjectNumber = 8;
  if (this->_internal_deletedprojectnumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_deletedprojectnumber());
  }

  // int32 DeletedSwcNumber = 9;
  if (this->_internal_deletedswcnumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_deletedswcnumber());
  }

  // int32 DeletedSwcNodeNumber = 10;
  if (this->_internal_deletedswcnodenumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_deletedswcnodenumber());
  }

  // int32 ModifiedProjectNumber = 11;
  if (this->_internal_modifiedprojectnumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_modifiedprojectnumber());
  }

  // int32 ModifiedSwcNumber = 12;
  if (this->_internal_modifiedswcnumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_modifiedswcnumber());
  }

  // int32 ModifiedSwcNodeNumber = 13;
  if (this->_internal_modifiedswcnodenumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_modifiedswcnodenumber());
  }

  // int32 ProjectQueryNumber = 14;
  if (this->_internal_projectquerynumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_projectquerynumber());
  }

  // int32 SwcQueryNumber = 15;
  if (this->_internal_swcquerynumber() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_swcquerynumber());
  }

  // int32 NodeQueryNumber = 16;
  if (this->_internal_nodequerynumber() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_nodequerynumber());
  }

  // int32 ActiveUserNumber = 17;
  if (this->_internal_activeusernumber() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_activeusernumber());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DailyStatisticsMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DailyStatisticsMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DailyStatisticsMetaInfoV1::GetClassData() const { return &_class_data_; }


void DailyStatisticsMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DailyStatisticsMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const DailyStatisticsMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DailyStatisticsMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_description().empty()) {
    _this->_internal_set_description(from._internal_description());
  }
  if (!from._internal_day().empty()) {
    _this->_internal_set_day(from._internal_day());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_createdprojectnumber() != 0) {
    _this->_internal_set_createdprojectnumber(from._internal_createdprojectnumber());
  }
  if (from._internal_createdswcnumber() != 0) {
    _this->_internal_set_createdswcnumber(from._internal_createdswcnumber());
  }
  if (from._internal_createswcnodenumber() != 0) {
    _this->_internal_set_createswcnodenumber(from._internal_createswcnodenumber());
  }
  if (from._internal_deletedprojectnumber() != 0) {
    _this->_internal_set_deletedprojectnumber(from._internal_deletedprojectnumber());
  }
  if (from._internal_deletedswcnumber() != 0) {
    _this->_internal_set_deletedswcnumber(from._internal_deletedswcnumber());
  }
  if (from._internal_deletedswcnodenumber() != 0) {
    _this->_internal_set_deletedswcnodenumber(from._internal_deletedswcnodenumber());
  }
  if (from._internal_modifiedprojectnumber() != 0) {
    _this->_internal_set_modifiedprojectnumber(from._internal_modifiedprojectnumber());
  }
  if (from._internal_modifiedswcnumber() != 0) {
    _this->_internal_set_modifiedswcnumber(from._internal_modifiedswcnumber());
  }
  if (from._internal_modifiedswcnodenumber() != 0) {
    _this->_internal_set_modifiedswcnodenumber(from._internal_modifiedswcnodenumber());
  }
  if (from._internal_projectquerynumber() != 0) {
    _this->_internal_set_projectquerynumber(from._internal_projectquerynumber());
  }
  if (from._internal_swcquerynumber() != 0) {
    _this->_internal_set_swcquerynumber(from._internal_swcquerynumber());
  }
  if (from._internal_nodequerynumber() != 0) {
    _this->_internal_set_nodequerynumber(from._internal_nodequerynumber());
  }
  if (from._internal_activeusernumber() != 0) {
    _this->_internal_set_activeusernumber(from._internal_activeusernumber());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DailyStatisticsMetaInfoV1::CopyFrom(const DailyStatisticsMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DailyStatisticsMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DailyStatisticsMetaInfoV1::IsInitialized() const {
  return true;
}

void DailyStatisticsMetaInfoV1::InternalSwap(DailyStatisticsMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.description_, lhs_arena,
      &other->_impl_.description_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.day_, lhs_arena,
      &other->_impl_.day_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DailyStatisticsMetaInfoV1, _impl_.activeusernumber_)
      + sizeof(DailyStatisticsMetaInfoV1::_impl_.activeusernumber_)
      - PROTOBUF_FIELD_OFFSET(DailyStatisticsMetaInfoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DailyStatisticsMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[18]);
}

// ===================================================================

class UserVerifyInfoV1::_Internal {
 public:
};

UserVerifyInfoV1::UserVerifyInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserVerifyInfoV1)
}
UserVerifyInfoV1::UserVerifyInfoV1(const UserVerifyInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserVerifyInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.usertoken_){}
    , decltype(_impl_.userpassword_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    _this->_impl_.username_.Set(from._internal_username(), 
      _this->GetArenaForAllocation());
  }
  _impl_.usertoken_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.usertoken_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_usertoken().empty()) {
    _this->_impl_.usertoken_.Set(from._internal_usertoken(), 
      _this->GetArenaForAllocation());
  }
  _impl_.userpassword_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.userpassword_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_userpassword().empty()) {
    _this->_impl_.userpassword_.Set(from._internal_userpassword(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.UserVerifyInfoV1)
}

inline void UserVerifyInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.usertoken_){}
    , decltype(_impl_.userpassword_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.usertoken_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.usertoken_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.userpassword_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.userpassword_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserVerifyInfoV1::~UserVerifyInfoV1() {
  // @@protoc_insertion_point(destructor:proto.UserVerifyInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserVerifyInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.username_.Destroy();
  _impl_.usertoken_.Destroy();
  _impl_.userpassword_.Destroy();
}

void UserVerifyInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserVerifyInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserVerifyInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.usertoken_.ClearToEmpty();
  _impl_.userpassword_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserVerifyInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string UserName = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_username();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserVerifyInfoV1.UserName"));
        } else
          goto handle_unusual;
        continue;
      // string UserToken = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_usertoken();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserVerifyInfoV1.UserToken"));
        } else
          goto handle_unusual;
        continue;
      // string UserPassword = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_userpassword();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserVerifyInfoV1.UserPassword"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserVerifyInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserVerifyInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string UserName = 1;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserVerifyInfoV1.UserName");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_username(), target);
  }

  // string UserToken = 2;
  if (!this->_internal_usertoken().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_usertoken().data(), static_cast<int>(this->_internal_usertoken().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserVerifyInfoV1.UserToken");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_usertoken(), target);
  }

  // string UserPassword = 3;
  if (!this->_internal_userpassword().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_userpassword().data(), static_cast<int>(this->_internal_userpassword().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserVerifyInfoV1.UserPassword");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_userpassword(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserVerifyInfoV1)
  return target;
}

size_t UserVerifyInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserVerifyInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string UserName = 1;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string UserToken = 2;
  if (!this->_internal_usertoken().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_usertoken());
  }

  // string UserPassword = 3;
  if (!this->_internal_userpassword().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_userpassword());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserVerifyInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserVerifyInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserVerifyInfoV1::GetClassData() const { return &_class_data_; }


void UserVerifyInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserVerifyInfoV1*>(&to_msg);
  auto& from = static_cast<const UserVerifyInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserVerifyInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_usertoken().empty()) {
    _this->_internal_set_usertoken(from._internal_usertoken());
  }
  if (!from._internal_userpassword().empty()) {
    _this->_internal_set_userpassword(from._internal_userpassword());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserVerifyInfoV1::CopyFrom(const UserVerifyInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserVerifyInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserVerifyInfoV1::IsInitialized() const {
  return true;
}

void UserVerifyInfoV1::InternalSwap(UserVerifyInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.username_, lhs_arena,
      &other->_impl_.username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.usertoken_, lhs_arena,
      &other->_impl_.usertoken_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.userpassword_, lhs_arena,
      &other->_impl_.userpassword_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata UserVerifyInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[19]);
}

// ===================================================================

class RequestMetaInfoV1::_Internal {
 public:
};

RequestMetaInfoV1::RequestMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.RequestMetaInfoV1)
}
RequestMetaInfoV1::RequestMetaInfoV1(const RequestMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RequestMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.apiversion_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.apiversion_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apiversion_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_apiversion().empty()) {
    _this->_impl_.apiversion_.Set(from._internal_apiversion(), 
      _this->GetArenaForAllocation());
  }
  // @@protoc_insertion_point(copy_constructor:proto.RequestMetaInfoV1)
}

inline void RequestMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.apiversion_){}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.apiversion_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apiversion_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RequestMetaInfoV1::~RequestMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.RequestMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RequestMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.apiversion_.Destroy();
}

void RequestMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RequestMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RequestMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.apiversion_.ClearToEmpty();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RequestMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // string ApiVersion = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          auto str = _internal_mutable_apiversion();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.RequestMetaInfoV1.ApiVersion"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RequestMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.RequestMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // string ApiVersion = 1;
  if (!this->_internal_apiversion().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_apiversion().data(), static_cast<int>(this->_internal_apiversion().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.RequestMetaInfoV1.ApiVersion");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_apiversion(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RequestMetaInfoV1)
  return target;
}

size_t RequestMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RequestMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ApiVersion = 1;
  if (!this->_internal_apiversion().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_apiversion());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RequestMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RequestMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RequestMetaInfoV1::GetClassData() const { return &_class_data_; }


void RequestMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RequestMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const RequestMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.RequestMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_apiversion().empty()) {
    _this->_internal_set_apiversion(from._internal_apiversion());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RequestMetaInfoV1::CopyFrom(const RequestMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RequestMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RequestMetaInfoV1::IsInitialized() const {
  return true;
}

void RequestMetaInfoV1::InternalSwap(RequestMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.apiversion_, lhs_arena,
      &other->_impl_.apiversion_, rhs_arena
  );
}

::PROTOBUF_NAMESPACE_ID::Metadata RequestMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[20]);
}

// ===================================================================

class ResponseMetaInfoV1::_Internal {
 public:
};

ResponseMetaInfoV1::ResponseMetaInfoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ResponseMetaInfoV1)
}
ResponseMetaInfoV1::ResponseMetaInfoV1(const ResponseMetaInfoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ResponseMetaInfoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_id().empty()) {
    _this->_impl_.id_.Set(from._internal_id(), 
      _this->GetArenaForAllocation());
  }
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_message().empty()) {
    _this->_impl_.message_.Set(from._internal_message(), 
      _this->GetArenaForAllocation());
  }
  _this->_impl_.status_ = from._impl_.status_;
  // @@protoc_insertion_point(copy_constructor:proto.ResponseMetaInfoV1)
}

inline void ResponseMetaInfoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.id_){}
    , decltype(_impl_.message_){}
    , decltype(_impl_.status_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.id_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.id_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.message_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.message_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ResponseMetaInfoV1::~ResponseMetaInfoV1() {
  // @@protoc_insertion_point(destructor:proto.ResponseMetaInfoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ResponseMetaInfoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.id_.Destroy();
  _impl_.message_.Destroy();
}

void ResponseMetaInfoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ResponseMetaInfoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ResponseMetaInfoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.id_.ClearToEmpty();
  _impl_.message_.ClearToEmpty();
  _impl_.status_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ResponseMetaInfoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // bool Status = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 8)) {
          _impl_.status_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_id();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ResponseMetaInfoV1.Id"));
        } else
          goto handle_unusual;
        continue;
      // string Message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_message();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ResponseMetaInfoV1.Message"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ResponseMetaInfoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ResponseMetaInfoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // bool Status = 1;
  if (this->_internal_status() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(1, this->_internal_status(), target);
  }

  // string Id = 2;
  if (!this->_internal_id().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ResponseMetaInfoV1.Id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_id(), target);
  }

  // string Message = 3;
  if (!this->_internal_message().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message().data(), static_cast<int>(this->_internal_message().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ResponseMetaInfoV1.Message");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_message(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ResponseMetaInfoV1)
  return target;
}

size_t ResponseMetaInfoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ResponseMetaInfoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Id = 2;
  if (!this->_internal_id().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  // string Message = 3;
  if (!this->_internal_message().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message());
  }

  // bool Status = 1;
  if (this->_internal_status() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ResponseMetaInfoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ResponseMetaInfoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ResponseMetaInfoV1::GetClassData() const { return &_class_data_; }


void ResponseMetaInfoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ResponseMetaInfoV1*>(&to_msg);
  auto& from = static_cast<const ResponseMetaInfoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ResponseMetaInfoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_id().empty()) {
    _this->_internal_set_id(from._internal_id());
  }
  if (!from._internal_message().empty()) {
    _this->_internal_set_message(from._internal_message());
  }
  if (from._internal_status() != 0) {
    _this->_internal_set_status(from._internal_status());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ResponseMetaInfoV1::CopyFrom(const ResponseMetaInfoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ResponseMetaInfoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ResponseMetaInfoV1::IsInitialized() const {
  return true;
}

void ResponseMetaInfoV1::InternalSwap(ResponseMetaInfoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.id_, lhs_arena,
      &other->_impl_.id_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.message_, lhs_arena,
      &other->_impl_.message_, rhs_arena
  );
  swap(_impl_.status_, other->_impl_.status_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ResponseMetaInfoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[21]);
}

// ===================================================================

class SwcAttachmentAnoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const SwcAttachmentAnoV1* msg);
};

const ::proto::MetaInfoBase&
SwcAttachmentAnoV1::_Internal::base(const SwcAttachmentAnoV1* msg) {
  return *msg->_impl_.base_;
}
SwcAttachmentAnoV1::SwcAttachmentAnoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcAttachmentAnoV1)
}
SwcAttachmentAnoV1::SwcAttachmentAnoV1(const SwcAttachmentAnoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcAttachmentAnoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.apofile_){}
    , decltype(_impl_.swcfile_){}
    , decltype(_impl_.base_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.apofile_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apofile_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_apofile().empty()) {
    _this->_impl_.apofile_.Set(from._internal_apofile(), 
      _this->GetArenaForAllocation());
  }
  _impl_.swcfile_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcfile_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcfile().empty()) {
    _this->_impl_.swcfile_.Set(from._internal_swcfile(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.SwcAttachmentAnoV1)
}

inline void SwcAttachmentAnoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.apofile_){}
    , decltype(_impl_.swcfile_){}
    , decltype(_impl_.base_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.apofile_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apofile_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.swcfile_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcfile_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SwcAttachmentAnoV1::~SwcAttachmentAnoV1() {
  // @@protoc_insertion_point(destructor:proto.SwcAttachmentAnoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcAttachmentAnoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.apofile_.Destroy();
  _impl_.swcfile_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void SwcAttachmentAnoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcAttachmentAnoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcAttachmentAnoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.apofile_.ClearToEmpty();
  _impl_.swcfile_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcAttachmentAnoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string APOFILE = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_apofile();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcAttachmentAnoV1.APOFILE"));
        } else
          goto handle_unusual;
        continue;
      // string SWCFILE = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcfile();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcAttachmentAnoV1.SWCFILE"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcAttachmentAnoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcAttachmentAnoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // string APOFILE = 2;
  if (!this->_internal_apofile().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_apofile().data(), static_cast<int>(this->_internal_apofile().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcAttachmentAnoV1.APOFILE");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_apofile(), target);
  }

  // string SWCFILE = 3;
  if (!this->_internal_swcfile().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcfile().data(), static_cast<int>(this->_internal_swcfile().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcAttachmentAnoV1.SWCFILE");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcfile(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcAttachmentAnoV1)
  return target;
}

size_t SwcAttachmentAnoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcAttachmentAnoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string APOFILE = 2;
  if (!this->_internal_apofile().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_apofile());
  }

  // string SWCFILE = 3;
  if (!this->_internal_swcfile().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcfile());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcAttachmentAnoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcAttachmentAnoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcAttachmentAnoV1::GetClassData() const { return &_class_data_; }


void SwcAttachmentAnoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcAttachmentAnoV1*>(&to_msg);
  auto& from = static_cast<const SwcAttachmentAnoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcAttachmentAnoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_apofile().empty()) {
    _this->_internal_set_apofile(from._internal_apofile());
  }
  if (!from._internal_swcfile().empty()) {
    _this->_internal_set_swcfile(from._internal_swcfile());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcAttachmentAnoV1::CopyFrom(const SwcAttachmentAnoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcAttachmentAnoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcAttachmentAnoV1::IsInitialized() const {
  return true;
}

void SwcAttachmentAnoV1::InternalSwap(SwcAttachmentAnoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.apofile_, lhs_arena,
      &other->_impl_.apofile_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcfile_, lhs_arena,
      &other->_impl_.swcfile_, rhs_arena
  );
  swap(_impl_.base_, other->_impl_.base_);
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcAttachmentAnoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[22]);
}

// ===================================================================

class SwcAttachmentApoV1::_Internal {
 public:
  static const ::proto::MetaInfoBase& base(const SwcAttachmentApoV1* msg);
};

const ::proto::MetaInfoBase&
SwcAttachmentApoV1::_Internal::base(const SwcAttachmentApoV1* msg) {
  return *msg->_impl_.base_;
}
SwcAttachmentApoV1::SwcAttachmentApoV1(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.SwcAttachmentApoV1)
}
SwcAttachmentApoV1::SwcAttachmentApoV1(const SwcAttachmentApoV1& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  SwcAttachmentApoV1* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.orderinfo_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.comment_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.n_){}
    , decltype(_impl_.z_){}
    , decltype(_impl_.x_){}
    , decltype(_impl_.y_){}
    , decltype(_impl_.pixmax_){}
    , decltype(_impl_.intensity_){}
    , decltype(_impl_.sdev_){}
    , decltype(_impl_.volsize_){}
    , decltype(_impl_.mass_){}
    , decltype(_impl_.colorr_){}
    , decltype(_impl_.colorg_){}
    , decltype(_impl_.colorb_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.orderinfo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.orderinfo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_orderinfo().empty()) {
    _this->_impl_.orderinfo_.Set(from._internal_orderinfo(), 
      _this->GetArenaForAllocation());
  }
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_name().empty()) {
    _this->_impl_.name_.Set(from._internal_name(), 
      _this->GetArenaForAllocation());
  }
  _impl_.comment_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.comment_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_comment().empty()) {
    _this->_impl_.comment_.Set(from._internal_comment(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_base()) {
    _this->_impl_.base_ = new ::proto::MetaInfoBase(*from._impl_.base_);
  }
  ::memcpy(&_impl_.n_, &from._impl_.n_,
    static_cast<size_t>(reinterpret_cast<char*>(&_impl_.colorb_) -
    reinterpret_cast<char*>(&_impl_.n_)) + sizeof(_impl_.colorb_));
  // @@protoc_insertion_point(copy_constructor:proto.SwcAttachmentApoV1)
}

inline void SwcAttachmentApoV1::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.orderinfo_){}
    , decltype(_impl_.name_){}
    , decltype(_impl_.comment_){}
    , decltype(_impl_.base_){nullptr}
    , decltype(_impl_.n_){0}
    , decltype(_impl_.z_){0}
    , decltype(_impl_.x_){0}
    , decltype(_impl_.y_){0}
    , decltype(_impl_.pixmax_){0}
    , decltype(_impl_.intensity_){0}
    , decltype(_impl_.sdev_){0}
    , decltype(_impl_.volsize_){0}
    , decltype(_impl_.mass_){0}
    , decltype(_impl_.colorr_){0}
    , decltype(_impl_.colorg_){0}
    , decltype(_impl_.colorb_){0}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.orderinfo_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.orderinfo_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.name_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.name_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.comment_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.comment_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

SwcAttachmentApoV1::~SwcAttachmentApoV1() {
  // @@protoc_insertion_point(destructor:proto.SwcAttachmentApoV1)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void SwcAttachmentApoV1::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.orderinfo_.Destroy();
  _impl_.name_.Destroy();
  _impl_.comment_.Destroy();
  if (this != internal_default_instance()) delete _impl_.base_;
}

void SwcAttachmentApoV1::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void SwcAttachmentApoV1::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.SwcAttachmentApoV1)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.orderinfo_.ClearToEmpty();
  _impl_.name_.ClearToEmpty();
  _impl_.comment_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.base_ != nullptr) {
    delete _impl_.base_;
  }
  _impl_.base_ = nullptr;
  ::memset(&_impl_.n_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&_impl_.colorb_) -
      reinterpret_cast<char*>(&_impl_.n_)) + sizeof(_impl_.colorb_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* SwcAttachmentApoV1::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.MetaInfoBase Base = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_base(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 N = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.n_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string Orderinfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_orderinfo();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcAttachmentApoV1.Orderinfo"));
        } else
          goto handle_unusual;
        continue;
      // string Name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_name();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcAttachmentApoV1.Name"));
        } else
          goto handle_unusual;
        continue;
      // string Comment = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          auto str = _internal_mutable_comment();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.SwcAttachmentApoV1.Comment"));
        } else
          goto handle_unusual;
        continue;
      // float Z = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 53)) {
          _impl_.z_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float X = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 61)) {
          _impl_.x_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Y = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 69)) {
          _impl_.y_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Pixmax = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 77)) {
          _impl_.pixmax_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Intensity = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 85)) {
          _impl_.intensity_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Sdev = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 93)) {
          _impl_.sdev_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Volsize = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 101)) {
          _impl_.volsize_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // float Mass = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 109)) {
          _impl_.mass_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<float>(ptr);
          ptr += sizeof(float);
        } else
          goto handle_unusual;
        continue;
      // int32 ColorR = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 112)) {
          _impl_.colorr_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ColorG = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 120)) {
          _impl_.colorg_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int32 ColorB = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 128)) {
          _impl_.colorb_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* SwcAttachmentApoV1::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.SwcAttachmentApoV1)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::base(this),
        _Internal::base(this).GetCachedSize(), target, stream);
  }

  // int32 N = 2;
  if (this->_internal_n() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(2, this->_internal_n(), target);
  }

  // string Orderinfo = 3;
  if (!this->_internal_orderinfo().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_orderinfo().data(), static_cast<int>(this->_internal_orderinfo().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcAttachmentApoV1.Orderinfo");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_orderinfo(), target);
  }

  // string Name = 4;
  if (!this->_internal_name().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_name().data(), static_cast<int>(this->_internal_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcAttachmentApoV1.Name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_name(), target);
  }

  // string Comment = 5;
  if (!this->_internal_comment().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_comment().data(), static_cast<int>(this->_internal_comment().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.SwcAttachmentApoV1.Comment");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_comment(), target);
  }

  // float Z = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(6, this->_internal_z(), target);
  }

  // float X = 7;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(7, this->_internal_x(), target);
  }

  // float Y = 8;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(8, this->_internal_y(), target);
  }

  // float Pixmax = 9;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_pixmax = this->_internal_pixmax();
  uint32_t raw_pixmax;
  memcpy(&raw_pixmax, &tmp_pixmax, sizeof(tmp_pixmax));
  if (raw_pixmax != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(9, this->_internal_pixmax(), target);
  }

  // float Intensity = 10;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_intensity = this->_internal_intensity();
  uint32_t raw_intensity;
  memcpy(&raw_intensity, &tmp_intensity, sizeof(tmp_intensity));
  if (raw_intensity != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(10, this->_internal_intensity(), target);
  }

  // float Sdev = 11;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_sdev = this->_internal_sdev();
  uint32_t raw_sdev;
  memcpy(&raw_sdev, &tmp_sdev, sizeof(tmp_sdev));
  if (raw_sdev != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(11, this->_internal_sdev(), target);
  }

  // float Volsize = 12;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_volsize = this->_internal_volsize();
  uint32_t raw_volsize;
  memcpy(&raw_volsize, &tmp_volsize, sizeof(tmp_volsize));
  if (raw_volsize != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(12, this->_internal_volsize(), target);
  }

  // float Mass = 13;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_mass = this->_internal_mass();
  uint32_t raw_mass;
  memcpy(&raw_mass, &tmp_mass, sizeof(tmp_mass));
  if (raw_mass != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteFloatToArray(13, this->_internal_mass(), target);
  }

  // int32 ColorR = 14;
  if (this->_internal_colorr() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(14, this->_internal_colorr(), target);
  }

  // int32 ColorG = 15;
  if (this->_internal_colorg() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(15, this->_internal_colorg(), target);
  }

  // int32 ColorB = 16;
  if (this->_internal_colorb() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt32ToArray(16, this->_internal_colorb(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.SwcAttachmentApoV1)
  return target;
}

size_t SwcAttachmentApoV1::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.SwcAttachmentApoV1)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string Orderinfo = 3;
  if (!this->_internal_orderinfo().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_orderinfo());
  }

  // string Name = 4;
  if (!this->_internal_name().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_name());
  }

  // string Comment = 5;
  if (!this->_internal_comment().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_comment());
  }

  // .proto.MetaInfoBase Base = 1;
  if (this->_internal_has_base()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.base_);
  }

  // int32 N = 2;
  if (this->_internal_n() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_n());
  }

  // float Z = 6;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = this->_internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    total_size += 1 + 4;
  }

  // float X = 7;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = this->_internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    total_size += 1 + 4;
  }

  // float Y = 8;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = this->_internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    total_size += 1 + 4;
  }

  // float Pixmax = 9;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_pixmax = this->_internal_pixmax();
  uint32_t raw_pixmax;
  memcpy(&raw_pixmax, &tmp_pixmax, sizeof(tmp_pixmax));
  if (raw_pixmax != 0) {
    total_size += 1 + 4;
  }

  // float Intensity = 10;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_intensity = this->_internal_intensity();
  uint32_t raw_intensity;
  memcpy(&raw_intensity, &tmp_intensity, sizeof(tmp_intensity));
  if (raw_intensity != 0) {
    total_size += 1 + 4;
  }

  // float Sdev = 11;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_sdev = this->_internal_sdev();
  uint32_t raw_sdev;
  memcpy(&raw_sdev, &tmp_sdev, sizeof(tmp_sdev));
  if (raw_sdev != 0) {
    total_size += 1 + 4;
  }

  // float Volsize = 12;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_volsize = this->_internal_volsize();
  uint32_t raw_volsize;
  memcpy(&raw_volsize, &tmp_volsize, sizeof(tmp_volsize));
  if (raw_volsize != 0) {
    total_size += 1 + 4;
  }

  // float Mass = 13;
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_mass = this->_internal_mass();
  uint32_t raw_mass;
  memcpy(&raw_mass, &tmp_mass, sizeof(tmp_mass));
  if (raw_mass != 0) {
    total_size += 1 + 4;
  }

  // int32 ColorR = 14;
  if (this->_internal_colorr() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_colorr());
  }

  // int32 ColorG = 15;
  if (this->_internal_colorg() != 0) {
    total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(this->_internal_colorg());
  }

  // int32 ColorB = 16;
  if (this->_internal_colorb() != 0) {
    total_size += 2 +
      ::_pbi::WireFormatLite::Int32Size(
        this->_internal_colorb());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData SwcAttachmentApoV1::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    SwcAttachmentApoV1::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*SwcAttachmentApoV1::GetClassData() const { return &_class_data_; }


void SwcAttachmentApoV1::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<SwcAttachmentApoV1*>(&to_msg);
  auto& from = static_cast<const SwcAttachmentApoV1&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.SwcAttachmentApoV1)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_orderinfo().empty()) {
    _this->_internal_set_orderinfo(from._internal_orderinfo());
  }
  if (!from._internal_name().empty()) {
    _this->_internal_set_name(from._internal_name());
  }
  if (!from._internal_comment().empty()) {
    _this->_internal_set_comment(from._internal_comment());
  }
  if (from._internal_has_base()) {
    _this->_internal_mutable_base()->::proto::MetaInfoBase::MergeFrom(
        from._internal_base());
  }
  if (from._internal_n() != 0) {
    _this->_internal_set_n(from._internal_n());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_z = from._internal_z();
  uint32_t raw_z;
  memcpy(&raw_z, &tmp_z, sizeof(tmp_z));
  if (raw_z != 0) {
    _this->_internal_set_z(from._internal_z());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_x = from._internal_x();
  uint32_t raw_x;
  memcpy(&raw_x, &tmp_x, sizeof(tmp_x));
  if (raw_x != 0) {
    _this->_internal_set_x(from._internal_x());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_y = from._internal_y();
  uint32_t raw_y;
  memcpy(&raw_y, &tmp_y, sizeof(tmp_y));
  if (raw_y != 0) {
    _this->_internal_set_y(from._internal_y());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_pixmax = from._internal_pixmax();
  uint32_t raw_pixmax;
  memcpy(&raw_pixmax, &tmp_pixmax, sizeof(tmp_pixmax));
  if (raw_pixmax != 0) {
    _this->_internal_set_pixmax(from._internal_pixmax());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_intensity = from._internal_intensity();
  uint32_t raw_intensity;
  memcpy(&raw_intensity, &tmp_intensity, sizeof(tmp_intensity));
  if (raw_intensity != 0) {
    _this->_internal_set_intensity(from._internal_intensity());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_sdev = from._internal_sdev();
  uint32_t raw_sdev;
  memcpy(&raw_sdev, &tmp_sdev, sizeof(tmp_sdev));
  if (raw_sdev != 0) {
    _this->_internal_set_sdev(from._internal_sdev());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_volsize = from._internal_volsize();
  uint32_t raw_volsize;
  memcpy(&raw_volsize, &tmp_volsize, sizeof(tmp_volsize));
  if (raw_volsize != 0) {
    _this->_internal_set_volsize(from._internal_volsize());
  }
  static_assert(sizeof(uint32_t) == sizeof(float), "Code assumes uint32_t and float are the same size.");
  float tmp_mass = from._internal_mass();
  uint32_t raw_mass;
  memcpy(&raw_mass, &tmp_mass, sizeof(tmp_mass));
  if (raw_mass != 0) {
    _this->_internal_set_mass(from._internal_mass());
  }
  if (from._internal_colorr() != 0) {
    _this->_internal_set_colorr(from._internal_colorr());
  }
  if (from._internal_colorg() != 0) {
    _this->_internal_set_colorg(from._internal_colorg());
  }
  if (from._internal_colorb() != 0) {
    _this->_internal_set_colorb(from._internal_colorb());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void SwcAttachmentApoV1::CopyFrom(const SwcAttachmentApoV1& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.SwcAttachmentApoV1)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool SwcAttachmentApoV1::IsInitialized() const {
  return true;
}

void SwcAttachmentApoV1::InternalSwap(SwcAttachmentApoV1* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.orderinfo_, lhs_arena,
      &other->_impl_.orderinfo_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.name_, lhs_arena,
      &other->_impl_.name_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.comment_, lhs_arena,
      &other->_impl_.comment_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(SwcAttachmentApoV1, _impl_.colorb_)
      + sizeof(SwcAttachmentApoV1::_impl_.colorb_)
      - PROTOBUF_FIELD_OFFSET(SwcAttachmentApoV1, _impl_.base_)>(
          reinterpret_cast<char*>(&_impl_.base_),
          reinterpret_cast<char*>(&other->_impl_.base_));
}

::PROTOBUF_NAMESPACE_ID::Metadata SwcAttachmentApoV1::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fMessage_2eproto_getter, &descriptor_table_Message_2fMessage_2eproto_once,
      file_level_metadata_Message_2fMessage_2eproto[23]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::MetaInfoBase*
Arena::CreateMaybeMessage< ::proto::MetaInfoBase >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::MetaInfoBase >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::BrainTellServerMysqlDBCompatibleData*
Arena::CreateMaybeMessage< ::proto::BrainTellServerMysqlDBCompatibleData >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::BrainTellServerMysqlDBCompatibleData >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::UserMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GlobalPermissionMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::GlobalPermissionMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GlobalPermissionMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ProjectPermissionMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::ProjectPermissionMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ProjectPermissionMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::PermissionGroupMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::PermissionGroupMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::PermissionGroupMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserPermissionOverrideMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::UserPermissionOverrideMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserPermissionOverrideMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ProjectMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::ProjectMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ProjectMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcSnapshotMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::SwcSnapshotMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcSnapshotMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcIncrementOperationMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::SwcIncrementOperationMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcIncrementOperationMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcIncrementOperationV1*
Arena::CreateMaybeMessage< ::proto::SwcIncrementOperationV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcIncrementOperationV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcIncrementOperationListV1*
Arena::CreateMaybeMessage< ::proto::SwcIncrementOperationListV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcIncrementOperationListV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcAttachmentAnoMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::SwcAttachmentAnoMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcAttachmentAnoMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcAttachmentApoMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::SwcAttachmentApoMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcAttachmentApoMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::SwcMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcNodeInternalDataV1*
Arena::CreateMaybeMessage< ::proto::SwcNodeInternalDataV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcNodeInternalDataV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcNodeDataV1*
Arena::CreateMaybeMessage< ::proto::SwcNodeDataV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcNodeDataV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcDataV1*
Arena::CreateMaybeMessage< ::proto::SwcDataV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcDataV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DailyStatisticsMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::DailyStatisticsMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DailyStatisticsMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserVerifyInfoV1*
Arena::CreateMaybeMessage< ::proto::UserVerifyInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserVerifyInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::RequestMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::RequestMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::RequestMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ResponseMetaInfoV1*
Arena::CreateMaybeMessage< ::proto::ResponseMetaInfoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ResponseMetaInfoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcAttachmentAnoV1*
Arena::CreateMaybeMessage< ::proto::SwcAttachmentAnoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcAttachmentAnoV1 >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::SwcAttachmentApoV1*
Arena::CreateMaybeMessage< ::proto::SwcAttachmentApoV1 >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::SwcAttachmentApoV1 >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
