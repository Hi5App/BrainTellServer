// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message/Request.proto

#include "Message/Request.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
PROTOBUF_CONSTEXPR CreateUserRequest::CreateUserRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateUserRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateUserRequestDefaultTypeInternal() {}
  union {
    CreateUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateUserRequestDefaultTypeInternal _CreateUserRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteUserRequest::DeleteUserRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.username_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteUserRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteUserRequestDefaultTypeInternal() {}
  union {
    DeleteUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteUserRequestDefaultTypeInternal _DeleteUserRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateUserRequest::UpdateUserRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.userinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateUserRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateUserRequestDefaultTypeInternal() {}
  union {
    UpdateUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateUserRequestDefaultTypeInternal _UpdateUserRequest_default_instance_;
PROTOBUF_CONSTEXPR GetUserRequest::GetUserRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.username_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserRequestDefaultTypeInternal() {}
  union {
    GetUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserRequestDefaultTypeInternal _GetUserRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAllUserRequest::GetAllUserRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllUserRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllUserRequestDefaultTypeInternal() {}
  union {
    GetAllUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllUserRequestDefaultTypeInternal _GetAllUserRequest_default_instance_;
PROTOBUF_CONSTEXPR UserLoginRequest::UserLoginRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.username_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.password_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserLoginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserLoginRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserLoginRequestDefaultTypeInternal() {}
  union {
    UserLoginRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserLoginRequestDefaultTypeInternal _UserLoginRequest_default_instance_;
PROTOBUF_CONSTEXPR UserLogoutRequest::UserLogoutRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserLogoutRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserLogoutRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserLogoutRequestDefaultTypeInternal() {}
  union {
    UserLogoutRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserLogoutRequestDefaultTypeInternal _UserLogoutRequest_default_instance_;
PROTOBUF_CONSTEXPR UserOnlineHeartBeatNotification::UserOnlineHeartBeatNotification(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.heartbeattime_)*/int64_t{0}
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserOnlineHeartBeatNotificationDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserOnlineHeartBeatNotificationDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserOnlineHeartBeatNotificationDefaultTypeInternal() {}
  union {
    UserOnlineHeartBeatNotification _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserOnlineHeartBeatNotificationDefaultTypeInternal _UserOnlineHeartBeatNotification_default_instance_;
PROTOBUF_CONSTEXPR GetUserPermissionGroupRequest::GetUserPermissionGroupRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserPermissionGroupRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserPermissionGroupRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserPermissionGroupRequestDefaultTypeInternal() {}
  union {
    GetUserPermissionGroupRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserPermissionGroupRequestDefaultTypeInternal _GetUserPermissionGroupRequest_default_instance_;
PROTOBUF_CONSTEXPR GetPermissionGroupRequest::GetPermissionGroupRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.permissiongroup_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPermissionGroupRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPermissionGroupRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPermissionGroupRequestDefaultTypeInternal() {}
  union {
    GetPermissionGroupRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPermissionGroupRequestDefaultTypeInternal _GetPermissionGroupRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAllPermissionGroupRequest::GetAllPermissionGroupRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllPermissionGroupRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllPermissionGroupRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllPermissionGroupRequestDefaultTypeInternal() {}
  union {
    GetAllPermissionGroupRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllPermissionGroupRequestDefaultTypeInternal _GetAllPermissionGroupRequest_default_instance_;
PROTOBUF_CONSTEXPR ChangeUserPermissionGroupRequest::ChangeUserPermissionGroupRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.targetusername_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.permissiongroupname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChangeUserPermissionGroupRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangeUserPermissionGroupRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangeUserPermissionGroupRequestDefaultTypeInternal() {}
  union {
    ChangeUserPermissionGroupRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangeUserPermissionGroupRequestDefaultTypeInternal _ChangeUserPermissionGroupRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateProjectRequest::CreateProjectRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.projectinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateProjectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateProjectRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateProjectRequestDefaultTypeInternal() {}
  union {
    CreateProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateProjectRequestDefaultTypeInternal _CreateProjectRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteProjectRequest::DeleteProjectRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.projectname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteProjectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteProjectRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteProjectRequestDefaultTypeInternal() {}
  union {
    DeleteProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteProjectRequestDefaultTypeInternal _DeleteProjectRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateProjectRequest::UpdateProjectRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.projectinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateProjectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateProjectRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateProjectRequestDefaultTypeInternal() {}
  union {
    UpdateProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateProjectRequestDefaultTypeInternal _UpdateProjectRequest_default_instance_;
PROTOBUF_CONSTEXPR GetProjectRequest::GetProjectRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.projectname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetProjectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProjectRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProjectRequestDefaultTypeInternal() {}
  union {
    GetProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProjectRequestDefaultTypeInternal _GetProjectRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAllProjectRequest::GetAllProjectRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllProjectRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllProjectRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllProjectRequestDefaultTypeInternal() {}
  union {
    GetAllProjectRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllProjectRequestDefaultTypeInternal _GetAllProjectRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateSwcRequest::CreateSwcRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcattachmentapo_)*/{}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.swcinfo_)*/nullptr
  , /*decltype(_impl_.swcattachmentano_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSwcRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSwcRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSwcRequestDefaultTypeInternal() {}
  union {
    CreateSwcRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSwcRequestDefaultTypeInternal _CreateSwcRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteSwcRequest::DeleteSwcRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteSwcRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSwcRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSwcRequestDefaultTypeInternal() {}
  union {
    DeleteSwcRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSwcRequestDefaultTypeInternal _DeleteSwcRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateSwcRequest::UpdateSwcRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.swcinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateSwcRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSwcRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSwcRequestDefaultTypeInternal() {}
  union {
    UpdateSwcRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSwcRequestDefaultTypeInternal _UpdateSwcRequest_default_instance_;
PROTOBUF_CONSTEXPR GetSwcMetaInfoRequest::GetSwcMetaInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcMetaInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcMetaInfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcMetaInfoRequestDefaultTypeInternal() {}
  union {
    GetSwcMetaInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcMetaInfoRequestDefaultTypeInternal _GetSwcMetaInfoRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAllSwcMetaInfoRequest::GetAllSwcMetaInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllSwcMetaInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllSwcMetaInfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllSwcMetaInfoRequestDefaultTypeInternal() {}
  union {
    GetAllSwcMetaInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllSwcMetaInfoRequestDefaultTypeInternal _GetAllSwcMetaInfoRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateSwcSnapshotRequest::CreateSwcSnapshotRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSwcSnapshotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSwcSnapshotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSwcSnapshotRequestDefaultTypeInternal() {}
  union {
    CreateSwcSnapshotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSwcSnapshotRequestDefaultTypeInternal _CreateSwcSnapshotRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAllSnapshotMetaInfoRequest::GetAllSnapshotMetaInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllSnapshotMetaInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllSnapshotMetaInfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllSnapshotMetaInfoRequestDefaultTypeInternal() {}
  union {
    GetAllSnapshotMetaInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllSnapshotMetaInfoRequestDefaultTypeInternal _GetAllSnapshotMetaInfoRequest_default_instance_;
PROTOBUF_CONSTEXPR GetSnapshotRequest::GetSnapshotRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcsnapshotcollectionname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSnapshotRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSnapshotRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSnapshotRequestDefaultTypeInternal() {}
  union {
    GetSnapshotRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSnapshotRequestDefaultTypeInternal _GetSnapshotRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAllIncrementOperationMetaInfoRequest::GetAllIncrementOperationMetaInfoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllIncrementOperationMetaInfoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllIncrementOperationMetaInfoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllIncrementOperationMetaInfoRequestDefaultTypeInternal() {}
  union {
    GetAllIncrementOperationMetaInfoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllIncrementOperationMetaInfoRequestDefaultTypeInternal _GetAllIncrementOperationMetaInfoRequest_default_instance_;
PROTOBUF_CONSTEXPR GetIncrementOperationRequest::GetIncrementOperationRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.incrementoperationcollectionname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetIncrementOperationRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetIncrementOperationRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetIncrementOperationRequestDefaultTypeInternal() {}
  union {
    GetIncrementOperationRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetIncrementOperationRequestDefaultTypeInternal _GetIncrementOperationRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateSwcNodeDataRequest::CreateSwcNodeDataRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.swcdata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSwcNodeDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSwcNodeDataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSwcNodeDataRequestDefaultTypeInternal() {}
  union {
    CreateSwcNodeDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSwcNodeDataRequestDefaultTypeInternal _CreateSwcNodeDataRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteSwcNodeDataRequest::DeleteSwcNodeDataRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.swcdata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteSwcNodeDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSwcNodeDataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSwcNodeDataRequestDefaultTypeInternal() {}
  union {
    DeleteSwcNodeDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSwcNodeDataRequestDefaultTypeInternal _DeleteSwcNodeDataRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateSwcNodeDataRequest::UpdateSwcNodeDataRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.swcdata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateSwcNodeDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSwcNodeDataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSwcNodeDataRequestDefaultTypeInternal() {}
  union {
    UpdateSwcNodeDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSwcNodeDataRequestDefaultTypeInternal _UpdateSwcNodeDataRequest_default_instance_;
PROTOBUF_CONSTEXPR GetSwcNodeDataRequest::GetSwcNodeDataRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.swcnodedata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcNodeDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcNodeDataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcNodeDataRequestDefaultTypeInternal() {}
  union {
    GetSwcNodeDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcNodeDataRequestDefaultTypeInternal _GetSwcNodeDataRequest_default_instance_;
PROTOBUF_CONSTEXPR GetSwcFullNodeDataRequest::GetSwcFullNodeDataRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcFullNodeDataRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcFullNodeDataRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcFullNodeDataRequestDefaultTypeInternal() {}
  union {
    GetSwcFullNodeDataRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcFullNodeDataRequestDefaultTypeInternal _GetSwcFullNodeDataRequest_default_instance_;
PROTOBUF_CONSTEXPR GetSwcNodeDataListByTimeAndUserRequest::GetSwcNodeDataListByTimeAndUserRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.username_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.starttime_)*/nullptr
  , /*decltype(_impl_.endtime_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcNodeDataListByTimeAndUserRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcNodeDataListByTimeAndUserRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcNodeDataListByTimeAndUserRequestDefaultTypeInternal() {}
  union {
    GetSwcNodeDataListByTimeAndUserRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcNodeDataListByTimeAndUserRequestDefaultTypeInternal _GetSwcNodeDataListByTimeAndUserRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateDailyStatisticsRequest::CreateDailyStatisticsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.dailystatisticsinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateDailyStatisticsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDailyStatisticsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDailyStatisticsRequestDefaultTypeInternal() {}
  union {
    CreateDailyStatisticsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDailyStatisticsRequestDefaultTypeInternal _CreateDailyStatisticsRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteDailyStatisticsRequest::DeleteDailyStatisticsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dailystatisticsname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteDailyStatisticsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDailyStatisticsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDailyStatisticsRequestDefaultTypeInternal() {}
  union {
    DeleteDailyStatisticsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDailyStatisticsRequestDefaultTypeInternal _DeleteDailyStatisticsRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateDailyStatisticsRequest::UpdateDailyStatisticsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.dailystatisticsinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateDailyStatisticsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDailyStatisticsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDailyStatisticsRequestDefaultTypeInternal() {}
  union {
    UpdateDailyStatisticsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDailyStatisticsRequestDefaultTypeInternal _UpdateDailyStatisticsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetDailyStatisticsRequest::GetDailyStatisticsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dailystatisticsname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetDailyStatisticsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDailyStatisticsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDailyStatisticsRequestDefaultTypeInternal() {}
  union {
    GetDailyStatisticsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDailyStatisticsRequestDefaultTypeInternal _GetDailyStatisticsRequest_default_instance_;
PROTOBUF_CONSTEXPR GetAllDailyStatisticsRequest::GetAllDailyStatisticsRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllDailyStatisticsRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllDailyStatisticsRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllDailyStatisticsRequestDefaultTypeInternal() {}
  union {
    GetAllDailyStatisticsRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllDailyStatisticsRequestDefaultTypeInternal _GetAllDailyStatisticsRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateSwcAttachmentAnoRequest::CreateSwcAttachmentAnoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.swcattachmentano_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSwcAttachmentAnoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSwcAttachmentAnoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSwcAttachmentAnoRequestDefaultTypeInternal() {}
  union {
    CreateSwcAttachmentAnoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSwcAttachmentAnoRequestDefaultTypeInternal _CreateSwcAttachmentAnoRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteSwcAttachmentAnoRequest::DeleteSwcAttachmentAnoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.anoattachmentuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteSwcAttachmentAnoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSwcAttachmentAnoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSwcAttachmentAnoRequestDefaultTypeInternal() {}
  union {
    DeleteSwcAttachmentAnoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSwcAttachmentAnoRequestDefaultTypeInternal _DeleteSwcAttachmentAnoRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateSwcAttachmentAnoRequest::UpdateSwcAttachmentAnoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.anoattachmentuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.newswcattachmentano_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateSwcAttachmentAnoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSwcAttachmentAnoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSwcAttachmentAnoRequestDefaultTypeInternal() {}
  union {
    UpdateSwcAttachmentAnoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSwcAttachmentAnoRequestDefaultTypeInternal _UpdateSwcAttachmentAnoRequest_default_instance_;
PROTOBUF_CONSTEXPR GetSwcAttachmentAnoRequest::GetSwcAttachmentAnoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.anoattachmentuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcAttachmentAnoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcAttachmentAnoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcAttachmentAnoRequestDefaultTypeInternal() {}
  union {
    GetSwcAttachmentAnoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcAttachmentAnoRequestDefaultTypeInternal _GetSwcAttachmentAnoRequest_default_instance_;
PROTOBUF_CONSTEXPR CreateSwcAttachmentApoRequest::CreateSwcAttachmentApoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcattachmentapo_)*/{}
  , /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSwcAttachmentApoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSwcAttachmentApoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSwcAttachmentApoRequestDefaultTypeInternal() {}
  union {
    CreateSwcAttachmentApoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSwcAttachmentApoRequestDefaultTypeInternal _CreateSwcAttachmentApoRequest_default_instance_;
PROTOBUF_CONSTEXPR DeleteSwcAttachmentApoRequest::DeleteSwcAttachmentApoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.apoattachmentuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteSwcAttachmentApoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSwcAttachmentApoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSwcAttachmentApoRequestDefaultTypeInternal() {}
  union {
    DeleteSwcAttachmentApoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSwcAttachmentApoRequestDefaultTypeInternal _DeleteSwcAttachmentApoRequest_default_instance_;
PROTOBUF_CONSTEXPR UpdateSwcAttachmentApoRequest::UpdateSwcAttachmentApoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.newswcattachmentapo_)*/{}
  , /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.apoattachmentuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateSwcAttachmentApoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSwcAttachmentApoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSwcAttachmentApoRequestDefaultTypeInternal() {}
  union {
    UpdateSwcAttachmentApoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSwcAttachmentApoRequestDefaultTypeInternal _UpdateSwcAttachmentApoRequest_default_instance_;
PROTOBUF_CONSTEXPR GetSwcAttachmentApoRequest::GetSwcAttachmentApoRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.apoattachmentuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcAttachmentApoRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcAttachmentApoRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcAttachmentApoRequestDefaultTypeInternal() {}
  union {
    GetSwcAttachmentApoRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcAttachmentApoRequestDefaultTypeInternal _GetSwcAttachmentApoRequest_default_instance_;
PROTOBUF_CONSTEXPR RevertSwcVersionRequest::RevertSwcVersionRequest(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcname_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_.versionendtime_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RevertSwcVersionRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RevertSwcVersionRequestDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RevertSwcVersionRequestDefaultTypeInternal() {}
  union {
    RevertSwcVersionRequest _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RevertSwcVersionRequestDefaultTypeInternal _RevertSwcVersionRequest_default_instance_;
}  // namespace proto
static ::_pb::Metadata file_level_metadata_Message_2fRequest_2eproto[47];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Message_2fRequest_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Message_2fRequest_2eproto = nullptr;

const uint32_t TableStruct_Message_2fRequest_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateUserRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateUserRequest, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteUserRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteUserRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteUserRequest, _impl_.username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateUserRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateUserRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateUserRequest, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetUserRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetUserRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetUserRequest, _impl_.username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllUserRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllUserRequest, _impl_.userverifyinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserLoginRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserLoginRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UserLoginRequest, _impl_.username_),
  PROTOBUF_FIELD_OFFSET(::proto::UserLoginRequest, _impl_.password_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserLogoutRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserLogoutRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UserLogoutRequest, _impl_.userverifyinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserOnlineHeartBeatNotification, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserOnlineHeartBeatNotification, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UserOnlineHeartBeatNotification, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UserOnlineHeartBeatNotification, _impl_.heartbeattime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetUserPermissionGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetUserPermissionGroupRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetUserPermissionGroupRequest, _impl_.userverifyinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupRequest, _impl_.permissiongroup_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllPermissionGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllPermissionGroupRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllPermissionGroupRequest, _impl_.userverifyinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ChangeUserPermissionGroupRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ChangeUserPermissionGroupRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::ChangeUserPermissionGroupRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::ChangeUserPermissionGroupRequest, _impl_.targetusername_),
  PROTOBUF_FIELD_OFFSET(::proto::ChangeUserPermissionGroupRequest, _impl_.permissiongroupname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateProjectRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateProjectRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateProjectRequest, _impl_.projectinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteProjectRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteProjectRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteProjectRequest, _impl_.projectname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateProjectRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateProjectRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateProjectRequest, _impl_.projectinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectRequest, _impl_.projectname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllProjectRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllProjectRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllProjectRequest, _impl_.userverifyinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcRequest, _impl_.swcinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcRequest, _impl_.swcattachmentano_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcRequest, _impl_.swcattachmentapo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcRequest, _impl_.swcname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcRequest, _impl_.swcinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcMetaInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcMetaInfoRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcMetaInfoRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcMetaInfoRequest, _impl_.swcname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSwcMetaInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSwcMetaInfoRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSwcMetaInfoRequest, _impl_.userverifyinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcSnapshotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcSnapshotRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcSnapshotRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcSnapshotRequest, _impl_.swcname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSnapshotMetaInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSnapshotMetaInfoRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSnapshotMetaInfoRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSnapshotMetaInfoRequest, _impl_.swcname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSnapshotRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSnapshotRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSnapshotRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSnapshotRequest, _impl_.swcsnapshotcollectionname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllIncrementOperationMetaInfoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllIncrementOperationMetaInfoRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllIncrementOperationMetaInfoRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllIncrementOperationMetaInfoRequest, _impl_.swcname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetIncrementOperationRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetIncrementOperationRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetIncrementOperationRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetIncrementOperationRequest, _impl_.incrementoperationcollectionname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcNodeDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcNodeDataRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcNodeDataRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcNodeDataRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcNodeDataRequest, _impl_.swcdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcNodeDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcNodeDataRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcNodeDataRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcNodeDataRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcNodeDataRequest, _impl_.swcdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcNodeDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcNodeDataRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcNodeDataRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcNodeDataRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcNodeDataRequest, _impl_.swcdata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataRequest, _impl_.swcnodedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcFullNodeDataRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcFullNodeDataRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcFullNodeDataRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcFullNodeDataRequest, _impl_.swcname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataListByTimeAndUserRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataListByTimeAndUserRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataListByTimeAndUserRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataListByTimeAndUserRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataListByTimeAndUserRequest, _impl_.starttime_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataListByTimeAndUserRequest, _impl_.endtime_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataListByTimeAndUserRequest, _impl_.username_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateDailyStatisticsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateDailyStatisticsRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateDailyStatisticsRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateDailyStatisticsRequest, _impl_.dailystatisticsinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteDailyStatisticsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteDailyStatisticsRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteDailyStatisticsRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteDailyStatisticsRequest, _impl_.dailystatisticsname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateDailyStatisticsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateDailyStatisticsRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateDailyStatisticsRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateDailyStatisticsRequest, _impl_.dailystatisticsinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetDailyStatisticsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetDailyStatisticsRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetDailyStatisticsRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetDailyStatisticsRequest, _impl_.dailystatisticsname_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllDailyStatisticsRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllDailyStatisticsRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllDailyStatisticsRequest, _impl_.userverifyinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentAnoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentAnoRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentAnoRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentAnoRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentAnoRequest, _impl_.swcattachmentano_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentAnoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentAnoRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentAnoRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentAnoRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentAnoRequest, _impl_.anoattachmentuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentAnoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentAnoRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentAnoRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentAnoRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentAnoRequest, _impl_.anoattachmentuuid_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentAnoRequest, _impl_.newswcattachmentano_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentAnoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentAnoRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentAnoRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentAnoRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentAnoRequest, _impl_.anoattachmentuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentApoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentApoRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentApoRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentApoRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentApoRequest, _impl_.swcattachmentapo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentApoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentApoRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentApoRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentApoRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentApoRequest, _impl_.apoattachmentuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentApoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentApoRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentApoRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentApoRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentApoRequest, _impl_.apoattachmentuuid_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentApoRequest, _impl_.newswcattachmentapo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentApoRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentApoRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentApoRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentApoRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentApoRequest, _impl_.apoattachmentuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::RevertSwcVersionRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::RevertSwcVersionRequest, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::RevertSwcVersionRequest, _impl_.userverifyinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::RevertSwcVersionRequest, _impl_.swcname_),
  PROTOBUF_FIELD_OFFSET(::proto::RevertSwcVersionRequest, _impl_.versionendtime_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::CreateUserRequest)},
  { 8, -1, -1, sizeof(::proto::DeleteUserRequest)},
  { 17, -1, -1, sizeof(::proto::UpdateUserRequest)},
  { 26, -1, -1, sizeof(::proto::GetUserRequest)},
  { 35, -1, -1, sizeof(::proto::GetAllUserRequest)},
  { 43, -1, -1, sizeof(::proto::UserLoginRequest)},
  { 52, -1, -1, sizeof(::proto::UserLogoutRequest)},
  { 60, -1, -1, sizeof(::proto::UserOnlineHeartBeatNotification)},
  { 69, -1, -1, sizeof(::proto::GetUserPermissionGroupRequest)},
  { 77, -1, -1, sizeof(::proto::GetPermissionGroupRequest)},
  { 86, -1, -1, sizeof(::proto::GetAllPermissionGroupRequest)},
  { 94, -1, -1, sizeof(::proto::ChangeUserPermissionGroupRequest)},
  { 104, -1, -1, sizeof(::proto::CreateProjectRequest)},
  { 113, -1, -1, sizeof(::proto::DeleteProjectRequest)},
  { 122, -1, -1, sizeof(::proto::UpdateProjectRequest)},
  { 131, -1, -1, sizeof(::proto::GetProjectRequest)},
  { 140, -1, -1, sizeof(::proto::GetAllProjectRequest)},
  { 148, -1, -1, sizeof(::proto::CreateSwcRequest)},
  { 159, -1, -1, sizeof(::proto::DeleteSwcRequest)},
  { 168, -1, -1, sizeof(::proto::UpdateSwcRequest)},
  { 177, -1, -1, sizeof(::proto::GetSwcMetaInfoRequest)},
  { 186, -1, -1, sizeof(::proto::GetAllSwcMetaInfoRequest)},
  { 194, -1, -1, sizeof(::proto::CreateSwcSnapshotRequest)},
  { 203, -1, -1, sizeof(::proto::GetAllSnapshotMetaInfoRequest)},
  { 212, -1, -1, sizeof(::proto::GetSnapshotRequest)},
  { 221, -1, -1, sizeof(::proto::GetAllIncrementOperationMetaInfoRequest)},
  { 230, -1, -1, sizeof(::proto::GetIncrementOperationRequest)},
  { 239, -1, -1, sizeof(::proto::CreateSwcNodeDataRequest)},
  { 249, -1, -1, sizeof(::proto::DeleteSwcNodeDataRequest)},
  { 259, -1, -1, sizeof(::proto::UpdateSwcNodeDataRequest)},
  { 269, -1, -1, sizeof(::proto::GetSwcNodeDataRequest)},
  { 279, -1, -1, sizeof(::proto::GetSwcFullNodeDataRequest)},
  { 288, -1, -1, sizeof(::proto::GetSwcNodeDataListByTimeAndUserRequest)},
  { 300, -1, -1, sizeof(::proto::CreateDailyStatisticsRequest)},
  { 309, -1, -1, sizeof(::proto::DeleteDailyStatisticsRequest)},
  { 318, -1, -1, sizeof(::proto::UpdateDailyStatisticsRequest)},
  { 327, -1, -1, sizeof(::proto::GetDailyStatisticsRequest)},
  { 336, -1, -1, sizeof(::proto::GetAllDailyStatisticsRequest)},
  { 344, -1, -1, sizeof(::proto::CreateSwcAttachmentAnoRequest)},
  { 354, -1, -1, sizeof(::proto::DeleteSwcAttachmentAnoRequest)},
  { 364, -1, -1, sizeof(::proto::UpdateSwcAttachmentAnoRequest)},
  { 375, -1, -1, sizeof(::proto::GetSwcAttachmentAnoRequest)},
  { 385, -1, -1, sizeof(::proto::CreateSwcAttachmentApoRequest)},
  { 395, -1, -1, sizeof(::proto::DeleteSwcAttachmentApoRequest)},
  { 405, -1, -1, sizeof(::proto::UpdateSwcAttachmentApoRequest)},
  { 416, -1, -1, sizeof(::proto::GetSwcAttachmentApoRequest)},
  { 426, -1, -1, sizeof(::proto::RevertSwcVersionRequest)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::_CreateUserRequest_default_instance_._instance,
  &::proto::_DeleteUserRequest_default_instance_._instance,
  &::proto::_UpdateUserRequest_default_instance_._instance,
  &::proto::_GetUserRequest_default_instance_._instance,
  &::proto::_GetAllUserRequest_default_instance_._instance,
  &::proto::_UserLoginRequest_default_instance_._instance,
  &::proto::_UserLogoutRequest_default_instance_._instance,
  &::proto::_UserOnlineHeartBeatNotification_default_instance_._instance,
  &::proto::_GetUserPermissionGroupRequest_default_instance_._instance,
  &::proto::_GetPermissionGroupRequest_default_instance_._instance,
  &::proto::_GetAllPermissionGroupRequest_default_instance_._instance,
  &::proto::_ChangeUserPermissionGroupRequest_default_instance_._instance,
  &::proto::_CreateProjectRequest_default_instance_._instance,
  &::proto::_DeleteProjectRequest_default_instance_._instance,
  &::proto::_UpdateProjectRequest_default_instance_._instance,
  &::proto::_GetProjectRequest_default_instance_._instance,
  &::proto::_GetAllProjectRequest_default_instance_._instance,
  &::proto::_CreateSwcRequest_default_instance_._instance,
  &::proto::_DeleteSwcRequest_default_instance_._instance,
  &::proto::_UpdateSwcRequest_default_instance_._instance,
  &::proto::_GetSwcMetaInfoRequest_default_instance_._instance,
  &::proto::_GetAllSwcMetaInfoRequest_default_instance_._instance,
  &::proto::_CreateSwcSnapshotRequest_default_instance_._instance,
  &::proto::_GetAllSnapshotMetaInfoRequest_default_instance_._instance,
  &::proto::_GetSnapshotRequest_default_instance_._instance,
  &::proto::_GetAllIncrementOperationMetaInfoRequest_default_instance_._instance,
  &::proto::_GetIncrementOperationRequest_default_instance_._instance,
  &::proto::_CreateSwcNodeDataRequest_default_instance_._instance,
  &::proto::_DeleteSwcNodeDataRequest_default_instance_._instance,
  &::proto::_UpdateSwcNodeDataRequest_default_instance_._instance,
  &::proto::_GetSwcNodeDataRequest_default_instance_._instance,
  &::proto::_GetSwcFullNodeDataRequest_default_instance_._instance,
  &::proto::_GetSwcNodeDataListByTimeAndUserRequest_default_instance_._instance,
  &::proto::_CreateDailyStatisticsRequest_default_instance_._instance,
  &::proto::_DeleteDailyStatisticsRequest_default_instance_._instance,
  &::proto::_UpdateDailyStatisticsRequest_default_instance_._instance,
  &::proto::_GetDailyStatisticsRequest_default_instance_._instance,
  &::proto::_GetAllDailyStatisticsRequest_default_instance_._instance,
  &::proto::_CreateSwcAttachmentAnoRequest_default_instance_._instance,
  &::proto::_DeleteSwcAttachmentAnoRequest_default_instance_._instance,
  &::proto::_UpdateSwcAttachmentAnoRequest_default_instance_._instance,
  &::proto::_GetSwcAttachmentAnoRequest_default_instance_._instance,
  &::proto::_CreateSwcAttachmentApoRequest_default_instance_._instance,
  &::proto::_DeleteSwcAttachmentApoRequest_default_instance_._instance,
  &::proto::_UpdateSwcAttachmentApoRequest_default_instance_._instance,
  &::proto::_GetSwcAttachmentApoRequest_default_instance_._instance,
  &::proto::_RevertSwcVersionRequest_default_instance_._instance,
};

const char descriptor_table_protodef_Message_2fRequest_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\025Message/Request.proto\022\005proto\032\037google/p"
  "rotobuf/timestamp.proto\032\025Message/Message"
  ".proto\"h\n\021CreateUserRequest\022*\n\010metaInfo\030"
  "\001 \001(\0132\030.proto.RequestMetaInfoV1\022\'\n\010UserI"
  "nfo\030\002 \001(\0132\025.proto.UserMetaInfoV1\"\202\001\n\021Del"
  "eteUserRequest\022*\n\010metaInfo\030\001 \001(\0132\030.proto"
  ".RequestMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001"
  "(\0132\027.proto.UserVerifyInfoV1\022\020\n\010UserName\030"
  "\003 \001(\t\"\231\001\n\021UpdateUserRequest\022*\n\010metaInfo\030"
  "\001 \001(\0132\030.proto.RequestMetaInfoV1\022/\n\016UserV"
  "erifyInfo\030\002 \001(\0132\027.proto.UserVerifyInfoV1"
  "\022\'\n\010UserInfo\030\003 \001(\0132\025.proto.UserMetaInfoV"
  "1\"\177\n\016GetUserRequest\022*\n\010metaInfo\030\001 \001(\0132\030."
  "proto.RequestMetaInfoV1\022/\n\016UserVerifyInf"
  "o\030\002 \001(\0132\027.proto.UserVerifyInfoV1\022\020\n\010User"
  "Name\030\003 \001(\t\"p\n\021GetAllUserRequest\022*\n\010metaI"
  "nfo\030\001 \001(\0132\030.proto.RequestMetaInfoV1\022/\n\016U"
  "serVerifyInfo\030\002 \001(\0132\027.proto.UserVerifyIn"
  "foV1\"b\n\020UserLoginRequest\022*\n\010metaInfo\030\001 \001"
  "(\0132\030.proto.RequestMetaInfoV1\022\020\n\010UserName"
  "\030\002 \001(\t\022\020\n\010Password\030\003 \001(\t\"p\n\021UserLogoutRe"
  "quest\022*\n\010metaInfo\030\001 \001(\0132\030.proto.RequestM"
  "etaInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.prot"
  "o.UserVerifyInfoV1\"\225\001\n\037UserOnlineHeartBe"
  "atNotification\022*\n\010metaInfo\030\001 \001(\0132\030.proto"
  ".RequestMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001"
  "(\0132\027.proto.UserVerifyInfoV1\022\025\n\rHeartBeat"
  "Time\030\003 \001(\003\"|\n\035GetUserPermissionGroupRequ"
  "est\022*\n\010metaInfo\030\001 \001(\0132\030.proto.RequestMet"
  "aInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto."
  "UserVerifyInfoV1\"\263\001\n\031GetPermissionGroupR"
  "equest\022*\n\010metaInfo\030\001 \001(\0132\030.proto.Request"
  "MetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.pro"
  "to.UserVerifyInfoV1\0229\n\017PermissionGroup\030\003"
  " \001(\0132 .proto.PermissionGroupMetaInfoV1\"{"
  "\n\034GetAllPermissionGroupRequest\022*\n\010metaIn"
  "fo\030\001 \001(\0132\030.proto.RequestMetaInfoV1\022/\n\016Us"
  "erVerifyInfo\030\002 \001(\0132\027.proto.UserVerifyInf"
  "oV1\"\264\001\n ChangeUserPermissionGroupRequest"
  "\022*\n\010metaInfo\030\001 \001(\0132\030.proto.RequestMetaIn"
  "foV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto.Use"
  "rVerifyInfoV1\022\026\n\016TargetUserName\030\003 \001(\t\022\033\n"
  "\023PermissionGroupName\030\004 \001(\t\"\242\001\n\024CreatePro"
  "jectRequest\022*\n\010metaInfo\030\001 \001(\0132\030.proto.Re"
  "questMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132"
  "\027.proto.UserVerifyInfoV1\022-\n\013ProjectInfo\030"
  "\003 \001(\0132\030.proto.ProjectMetaInfoV1\"\210\001\n\024Dele"
  "teProjectRequest\022*\n\010metaInfo\030\001 \001(\0132\030.pro"
  "to.RequestMetaInfoV1\022/\n\016UserVerifyInfo\030\002"
  " \001(\0132\027.proto.UserVerifyInfoV1\022\023\n\013Project"
  "Name\030\003 \001(\t\"\242\001\n\024UpdateProjectRequest\022*\n\010m"
  "etaInfo\030\001 \001(\0132\030.proto.RequestMetaInfoV1\022"
  "/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto.UserVeri"
  "fyInfoV1\022-\n\013ProjectInfo\030\003 \001(\0132\030.proto.Pr"
  "ojectMetaInfoV1\"\205\001\n\021GetProjectRequest\022*\n"
  "\010metaInfo\030\001 \001(\0132\030.proto.RequestMetaInfoV"
  "1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto.UserVe"
  "rifyInfoV1\022\023\n\013ProjectName\030\003 \001(\t\"s\n\024GetAl"
  "lProjectRequest\022*\n\010metaInfo\030\001 \001(\0132\030.prot"
  "o.RequestMetaInfoV1\022/\n\016UserVerifyInfo\030\002 "
  "\001(\0132\027.proto.UserVerifyInfoV1\"\200\002\n\020CreateS"
  "wcRequest\022*\n\010metaInfo\030\001 \001(\0132\030.proto.Requ"
  "estMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027."
  "proto.UserVerifyInfoV1\022%\n\007SwcInfo\030\003 \001(\0132"
  "\024.proto.SwcMetaInfoV1\0223\n\020SwcAttachmentAn"
  "o\030\004 \001(\0132\031.proto.SwcAttachmentAnoV1\0223\n\020Sw"
  "cAttachmentApo\030\005 \003(\0132\031.proto.SwcAttachme"
  "ntApoV1\"\200\001\n\020DeleteSwcRequest\022*\n\010metaInfo"
  "\030\001 \001(\0132\030.proto.RequestMetaInfoV1\022/\n\016User"
  "VerifyInfo\030\002 \001(\0132\027.proto.UserVerifyInfoV"
  "1\022\017\n\007SwcName\030\003 \001(\t\"\226\001\n\020UpdateSwcRequest\022"
  "*\n\010metaInfo\030\001 \001(\0132\030.proto.RequestMetaInf"
  "oV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto.User"
  "VerifyInfoV1\022%\n\007SwcInfo\030\003 \001(\0132\024.proto.Sw"
  "cMetaInfoV1\"\205\001\n\025GetSwcMetaInfoRequest\022*\n"
  "\010metaInfo\030\001 \001(\0132\030.proto.RequestMetaInfoV"
  "1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto.UserVe"
  "rifyInfoV1\022\017\n\007SwcName\030\003 \001(\t\"w\n\030GetAllSwc"
  "MetaInfoRequest\022*\n\010metaInfo\030\001 \001(\0132\030.prot"
  "o.RequestMetaInfoV1\022/\n\016UserVerifyInfo\030\002 "
  "\001(\0132\027.proto.UserVerifyInfoV1\"\210\001\n\030CreateS"
  "wcSnapshotRequest\022*\n\010metaInfo\030\001 \001(\0132\030.pr"
  "oto.RequestMetaInfoV1\022/\n\016UserVerifyInfo\030"
  "\002 \001(\0132\027.proto.UserVerifyInfoV1\022\017\n\007SwcNam"
  "e\030\003 \001(\t\"\215\001\n\035GetAllSnapshotMetaInfoReques"
  "t\022*\n\010metaInfo\030\001 \001(\0132\030.proto.RequestMetaI"
  "nfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto.Us"
  "erVerifyInfoV1\022\017\n\007SwcName\030\003 \001(\t\"\224\001\n\022GetS"
  "napshotRequest\022*\n\010metaInfo\030\001 \001(\0132\030.proto"
  ".RequestMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001"
  "(\0132\027.proto.UserVerifyInfoV1\022!\n\031SwcSnapsh"
  "otCollectionName\030\003 \001(\t\"\227\001\n\'GetAllIncreme"
  "ntOperationMetaInfoRequest\022*\n\010metaInfo\030\001"
  " \001(\0132\030.proto.RequestMetaInfoV1\022/\n\016UserVe"
  "rifyInfo\030\002 \001(\0132\027.proto.UserVerifyInfoV1\022"
  "\017\n\007SwcName\030\003 \001(\t\"\245\001\n\034GetIncrementOperati"
  "onRequest\022*\n\010metaInfo\030\001 \001(\0132\030.proto.Requ"
  "estMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027."
  "proto.UserVerifyInfoV1\022(\n IncrementOpera"
  "tionCollectionName\030\003 \001(\t\"\253\001\n\030CreateSwcNo"
  "deDataRequest\022*\n\010metaInfo\030\001 \001(\0132\030.proto."
  "RequestMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001("
  "\0132\027.proto.UserVerifyInfoV1\022\017\n\007SwcName\030\003 "
  "\001(\t\022!\n\007SwcData\030\004 \001(\0132\020.proto.SwcDataV1\"\253"
  "\001\n\030DeleteSwcNodeDataRequest\022*\n\010metaInfo\030"
  "\001 \001(\0132\030.proto.RequestMetaInfoV1\022/\n\016UserV"
  "erifyInfo\030\002 \001(\0132\027.proto.UserVerifyInfoV1"
  "\022\017\n\007SwcName\030\003 \001(\t\022!\n\007SwcData\030\004 \001(\0132\020.pro"
  "to.SwcDataV1\"\253\001\n\030UpdateSwcNodeDataReques"
  "t\022*\n\010metaInfo\030\001 \001(\0132\030.proto.RequestMetaI"
  "nfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto.Us"
  "erVerifyInfoV1\022\017\n\007SwcName\030\003 \001(\t\022!\n\007SwcDa"
  "ta\030\004 \001(\0132\020.proto.SwcDataV1\"\254\001\n\025GetSwcNod"
  "eDataRequest\022*\n\010metaInfo\030\001 \001(\0132\030.proto.R"
  "equestMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\013"
  "2\027.proto.UserVerifyInfoV1\022\017\n\007SwcName\030\003 \001"
  "(\t\022%\n\013SwcNodeData\030\004 \001(\0132\020.proto.SwcDataV"
  "1\"\211\001\n\031GetSwcFullNodeDataRequest\022*\n\010metaI"
  "nfo\030\001 \001(\0132\030.proto.RequestMetaInfoV1\022/\n\016U"
  "serVerifyInfo\030\002 \001(\0132\027.proto.UserVerifyIn"
  "foV1\022\017\n\007SwcName\030\003 \001(\t\"\204\002\n&GetSwcNodeData"
  "ListByTimeAndUserRequest\022*\n\010metaInfo\030\001 \001"
  "(\0132\030.proto.RequestMetaInfoV1\022/\n\016UserVeri"
  "fyInfo\030\002 \001(\0132\027.proto.UserVerifyInfoV1\022\017\n"
  "\007SwcName\030\003 \001(\t\022-\n\tStartTime\030\004 \001(\0132\032.goog"
  "le.protobuf.Timestamp\022+\n\007EndTime\030\005 \001(\0132\032"
  ".google.protobuf.Timestamp\022\020\n\010UserName\030\006"
  " \001(\t\"\272\001\n\034CreateDailyStatisticsRequest\022*\n"
  "\010metaInfo\030\001 \001(\0132\030.proto.RequestMetaInfoV"
  "1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto.UserVe"
  "rifyInfoV1\022=\n\023DailyStatisticsInfo\030\003 \001(\0132"
  " .proto.DailyStatisticsMetaInfoV1\"\230\001\n\034De"
  "leteDailyStatisticsRequest\022*\n\010metaInfo\030\001"
  " \001(\0132\030.proto.RequestMetaInfoV1\022/\n\016UserVe"
  "rifyInfo\030\002 \001(\0132\027.proto.UserVerifyInfoV1\022"
  "\033\n\023DailyStatisticsName\030\003 \001(\t\"\272\001\n\034UpdateD"
  "ailyStatisticsRequest\022*\n\010metaInfo\030\001 \001(\0132"
  "\030.proto.RequestMetaInfoV1\022/\n\016UserVerifyI"
  "nfo\030\002 \001(\0132\027.proto.UserVerifyInfoV1\022=\n\023Da"
  "ilyStatisticsInfo\030\003 \001(\0132 .proto.DailySta"
  "tisticsMetaInfoV1\"\225\001\n\031GetDailyStatistics"
  "Request\022*\n\010metaInfo\030\001 \001(\0132\030.proto.Reques"
  "tMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.pr"
  "oto.UserVerifyInfoV1\022\033\n\023DailyStatisticsN"
  "ame\030\003 \001(\t\"{\n\034GetAllDailyStatisticsReques"
  "t\022*\n\010metaInfo\030\001 \001(\0132\030.proto.RequestMetaI"
  "nfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto.Us"
  "erVerifyInfoV1\"\302\001\n\035CreateSwcAttachmentAn"
  "oRequest\022*\n\010metaInfo\030\001 \001(\0132\030.proto.Reque"
  "stMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.p"
  "roto.UserVerifyInfoV1\022\017\n\007SwcName\030\003 \001(\t\0223"
  "\n\020SwcAttachmentAno\030\004 \001(\0132\031.proto.SwcAtta"
  "chmentAnoV1\"\250\001\n\035DeleteSwcAttachmentAnoRe"
  "quest\022*\n\010metaInfo\030\001 \001(\0132\030.proto.RequestM"
  "etaInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.prot"
  "o.UserVerifyInfoV1\022\017\n\007SwcName\030\003 \001(\t\022\031\n\021A"
  "noAttachmentUuid\030\004 \001(\t\"\340\001\n\035UpdateSwcAtta"
  "chmentAnoRequest\022*\n\010metaInfo\030\001 \001(\0132\030.pro"
  "to.RequestMetaInfoV1\022/\n\016UserVerifyInfo\030\002"
  " \001(\0132\027.proto.UserVerifyInfoV1\022\017\n\007SwcName"
  "\030\003 \001(\t\022\031\n\021AnoAttachmentUuid\030\004 \001(\t\0226\n\023New"
  "SwcAttachmentAno\030\005 \001(\0132\031.proto.SwcAttach"
  "mentAnoV1\"\245\001\n\032GetSwcAttachmentAnoRequest"
  "\022*\n\010metaInfo\030\001 \001(\0132\030.proto.RequestMetaIn"
  "foV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto.Use"
  "rVerifyInfoV1\022\017\n\007SwcName\030\003 \001(\t\022\031\n\021AnoAtt"
  "achmentUuid\030\004 \001(\t\"\302\001\n\035CreateSwcAttachmen"
  "tApoRequest\022*\n\010metaInfo\030\001 \001(\0132\030.proto.Re"
  "questMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132"
  "\027.proto.UserVerifyInfoV1\022\017\n\007SwcName\030\003 \001("
  "\t\0223\n\020SwcAttachmentApo\030\004 \003(\0132\031.proto.SwcA"
  "ttachmentApoV1\"\250\001\n\035DeleteSwcAttachmentAp"
  "oRequest\022*\n\010metaInfo\030\001 \001(\0132\030.proto.Reque"
  "stMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.p"
  "roto.UserVerifyInfoV1\022\017\n\007SwcName\030\003 \001(\t\022\031"
  "\n\021ApoAttachmentUuid\030\004 \001(\t\"\340\001\n\035UpdateSwcA"
  "ttachmentApoRequest\022*\n\010metaInfo\030\001 \001(\0132\030."
  "proto.RequestMetaInfoV1\022/\n\016UserVerifyInf"
  "o\030\002 \001(\0132\027.proto.UserVerifyInfoV1\022\017\n\007SwcN"
  "ame\030\003 \001(\t\022\031\n\021ApoAttachmentUuid\030\004 \001(\t\0226\n\023"
  "NewSwcAttachmentApo\030\005 \003(\0132\031.proto.SwcAtt"
  "achmentApoV1\"\245\001\n\032GetSwcAttachmentApoRequ"
  "est\022*\n\010metaInfo\030\001 \001(\0132\030.proto.RequestMet"
  "aInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto."
  "UserVerifyInfoV1\022\017\n\007SwcName\030\003 \001(\t\022\031\n\021Apo"
  "AttachmentUuid\030\004 \001(\t\"\273\001\n\027RevertSwcVersio"
  "nRequest\022*\n\010metaInfo\030\001 \001(\0132\030.proto.Reque"
  "stMetaInfoV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.p"
  "roto.UserVerifyInfoV1\022\017\n\007SwcName\030\003 \001(\t\0222"
  "\n\016VersionEndTime\030\004 \001(\0132\032.google.protobuf"
  ".TimestampB/Z-DBMS/SwcDbmsCommon/Generat"
  "ed/go/proto/requestP\000b\006proto3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Message_2fRequest_2eproto_deps[2] = {
  &::descriptor_table_Message_2fMessage_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_Message_2fRequest_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Message_2fRequest_2eproto = {
    false, false, 7669, descriptor_table_protodef_Message_2fRequest_2eproto,
    "Message/Request.proto",
    &descriptor_table_Message_2fRequest_2eproto_once, descriptor_table_Message_2fRequest_2eproto_deps, 2, 47,
    schemas, file_default_instances, TableStruct_Message_2fRequest_2eproto::offsets,
    file_level_metadata_Message_2fRequest_2eproto, file_level_enum_descriptors_Message_2fRequest_2eproto,
    file_level_service_descriptors_Message_2fRequest_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Message_2fRequest_2eproto_getter() {
  return &descriptor_table_Message_2fRequest_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Message_2fRequest_2eproto(&descriptor_table_Message_2fRequest_2eproto);
namespace proto {

// ===================================================================

class CreateUserRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const CreateUserRequest* msg);
  static const ::proto::UserMetaInfoV1& userinfo(const CreateUserRequest* msg);
};

const ::proto::RequestMetaInfoV1&
CreateUserRequest::_Internal::metainfo(const CreateUserRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserMetaInfoV1&
CreateUserRequest::_Internal::userinfo(const CreateUserRequest* msg) {
  return *msg->_impl_.userinfo_;
}
void CreateUserRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void CreateUserRequest::clear_userinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
}
CreateUserRequest::CreateUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateUserRequest)
}
CreateUserRequest::CreateUserRequest(const CreateUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateUserRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userinfo()) {
    _this->_impl_.userinfo_ = new ::proto::UserMetaInfoV1(*from._impl_.userinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateUserRequest)
}

inline void CreateUserRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateUserRequest::~CreateUserRequest() {
  // @@protoc_insertion_point(destructor:proto.CreateUserRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userinfo_;
}

void CreateUserRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateUserRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateUserRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserMetaInfoV1 UserInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateUserRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateUserRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserMetaInfoV1 UserInfo = 2;
  if (this->_internal_has_userinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userinfo(this),
        _Internal::userinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateUserRequest)
  return target;
}

size_t CreateUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateUserRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserMetaInfoV1 UserInfo = 2;
  if (this->_internal_has_userinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateUserRequest::GetClassData() const { return &_class_data_; }


void CreateUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateUserRequest*>(&to_msg);
  auto& from = static_cast<const CreateUserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateUserRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userinfo()) {
    _this->_internal_mutable_userinfo()->::proto::UserMetaInfoV1::MergeFrom(
        from._internal_userinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateUserRequest::CopyFrom(const CreateUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateUserRequest::IsInitialized() const {
  return true;
}

void CreateUserRequest::InternalSwap(CreateUserRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateUserRequest, _impl_.userinfo_)
      + sizeof(CreateUserRequest::_impl_.userinfo_)
      - PROTOBUF_FIELD_OFFSET(CreateUserRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[0]);
}

// ===================================================================

class DeleteUserRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const DeleteUserRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const DeleteUserRequest* msg);
};

const ::proto::RequestMetaInfoV1&
DeleteUserRequest::_Internal::metainfo(const DeleteUserRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
DeleteUserRequest::_Internal::userverifyinfo(const DeleteUserRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void DeleteUserRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void DeleteUserRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
DeleteUserRequest::DeleteUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteUserRequest)
}
DeleteUserRequest::DeleteUserRequest(const DeleteUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteUserRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    _this->_impl_.username_.Set(from._internal_username(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteUserRequest)
}

inline void DeleteUserRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteUserRequest::~DeleteUserRequest() {
  // @@protoc_insertion_point(destructor:proto.DeleteUserRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.username_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void DeleteUserRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteUserRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteUserRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string UserName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_username();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteUserRequest.UserName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteUserRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteUserRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string UserName = 3;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteUserRequest.UserName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteUserRequest)
  return target;
}

size_t DeleteUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteUserRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string UserName = 3;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteUserRequest::GetClassData() const { return &_class_data_; }


void DeleteUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteUserRequest*>(&to_msg);
  auto& from = static_cast<const DeleteUserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteUserRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteUserRequest::CopyFrom(const DeleteUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteUserRequest::IsInitialized() const {
  return true;
}

void DeleteUserRequest::InternalSwap(DeleteUserRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.username_, lhs_arena,
      &other->_impl_.username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteUserRequest, _impl_.userverifyinfo_)
      + sizeof(DeleteUserRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(DeleteUserRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[1]);
}

// ===================================================================

class UpdateUserRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const UpdateUserRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const UpdateUserRequest* msg);
  static const ::proto::UserMetaInfoV1& userinfo(const UpdateUserRequest* msg);
};

const ::proto::RequestMetaInfoV1&
UpdateUserRequest::_Internal::metainfo(const UpdateUserRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
UpdateUserRequest::_Internal::userverifyinfo(const UpdateUserRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::UserMetaInfoV1&
UpdateUserRequest::_Internal::userinfo(const UpdateUserRequest* msg) {
  return *msg->_impl_.userinfo_;
}
void UpdateUserRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UpdateUserRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void UpdateUserRequest::clear_userinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
}
UpdateUserRequest::UpdateUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateUserRequest)
}
UpdateUserRequest::UpdateUserRequest(const UpdateUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateUserRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.userinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_userinfo()) {
    _this->_impl_.userinfo_ = new ::proto::UserMetaInfoV1(*from._impl_.userinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateUserRequest)
}

inline void UpdateUserRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.userinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateUserRequest::~UpdateUserRequest() {
  // @@protoc_insertion_point(destructor:proto.UpdateUserRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.userinfo_;
}

void UpdateUserRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateUserRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateUserRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserMetaInfoV1 UserInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_userinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateUserRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateUserRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserMetaInfoV1 UserInfo = 3;
  if (this->_internal_has_userinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::userinfo(this),
        _Internal::userinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateUserRequest)
  return target;
}

size_t UpdateUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateUserRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.UserMetaInfoV1 UserInfo = 3;
  if (this->_internal_has_userinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateUserRequest::GetClassData() const { return &_class_data_; }


void UpdateUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateUserRequest*>(&to_msg);
  auto& from = static_cast<const UpdateUserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateUserRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_userinfo()) {
    _this->_internal_mutable_userinfo()->::proto::UserMetaInfoV1::MergeFrom(
        from._internal_userinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateUserRequest::CopyFrom(const UpdateUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUserRequest::IsInitialized() const {
  return true;
}

void UpdateUserRequest::InternalSwap(UpdateUserRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.userinfo_)
      + sizeof(UpdateUserRequest::_impl_.userinfo_)
      - PROTOBUF_FIELD_OFFSET(UpdateUserRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[2]);
}

// ===================================================================

class GetUserRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetUserRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetUserRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetUserRequest::_Internal::metainfo(const GetUserRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetUserRequest::_Internal::userverifyinfo(const GetUserRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetUserRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetUserRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetUserRequest::GetUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetUserRequest)
}
GetUserRequest::GetUserRequest(const GetUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    _this->_impl_.username_.Set(from._internal_username(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetUserRequest)
}

inline void GetUserRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetUserRequest::~GetUserRequest() {
  // @@protoc_insertion_point(destructor:proto.GetUserRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.username_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetUserRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetUserRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string UserName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_username();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetUserRequest.UserName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetUserRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string UserName = 3;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetUserRequest.UserName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetUserRequest)
  return target;
}

size_t GetUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetUserRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string UserName = 3;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserRequest::GetClassData() const { return &_class_data_; }


void GetUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserRequest*>(&to_msg);
  auto& from = static_cast<const GetUserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetUserRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserRequest::CopyFrom(const GetUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserRequest::IsInitialized() const {
  return true;
}

void GetUserRequest::InternalSwap(GetUserRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.username_, lhs_arena,
      &other->_impl_.username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetUserRequest, _impl_.userverifyinfo_)
      + sizeof(GetUserRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetUserRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[3]);
}

// ===================================================================

class GetAllUserRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetAllUserRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetAllUserRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetAllUserRequest::_Internal::metainfo(const GetAllUserRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetAllUserRequest::_Internal::userverifyinfo(const GetAllUserRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetAllUserRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllUserRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetAllUserRequest::GetAllUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllUserRequest)
}
GetAllUserRequest::GetAllUserRequest(const GetAllUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllUserRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllUserRequest)
}

inline void GetAllUserRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllUserRequest::~GetAllUserRequest() {
  // @@protoc_insertion_point(destructor:proto.GetAllUserRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetAllUserRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllUserRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllUserRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllUserRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllUserRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllUserRequest)
  return target;
}

size_t GetAllUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllUserRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllUserRequest::GetClassData() const { return &_class_data_; }


void GetAllUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllUserRequest*>(&to_msg);
  auto& from = static_cast<const GetAllUserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllUserRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllUserRequest::CopyFrom(const GetAllUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllUserRequest::IsInitialized() const {
  return true;
}

void GetAllUserRequest::InternalSwap(GetAllUserRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetAllUserRequest, _impl_.userverifyinfo_)
      + sizeof(GetAllUserRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetAllUserRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[4]);
}

// ===================================================================

class UserLoginRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const UserLoginRequest* msg);
};

const ::proto::RequestMetaInfoV1&
UserLoginRequest::_Internal::metainfo(const UserLoginRequest* msg) {
  return *msg->_impl_.metainfo_;
}
void UserLoginRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
UserLoginRequest::UserLoginRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserLoginRequest)
}
UserLoginRequest::UserLoginRequest(const UserLoginRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserLoginRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    _this->_impl_.username_.Set(from._internal_username(), 
      _this->GetArenaForAllocation());
  }
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_password().empty()) {
    _this->_impl_.password_.Set(from._internal_password(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UserLoginRequest)
}

inline void UserLoginRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.username_){}
    , decltype(_impl_.password_){}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.password_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.password_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UserLoginRequest::~UserLoginRequest() {
  // @@protoc_insertion_point(destructor:proto.UserLoginRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserLoginRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.username_.Destroy();
  _impl_.password_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void UserLoginRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserLoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserLoginRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.username_.ClearToEmpty();
  _impl_.password_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserLoginRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string UserName = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_username();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserLoginRequest.UserName"));
        } else
          goto handle_unusual;
        continue;
      // string Password = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_password();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UserLoginRequest.Password"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserLoginRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserLoginRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // string UserName = 2;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserLoginRequest.UserName");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_username(), target);
  }

  // string Password = 3;
  if (!this->_internal_password().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_password().data(), static_cast<int>(this->_internal_password().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UserLoginRequest.Password");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_password(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserLoginRequest)
  return target;
}

size_t UserLoginRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserLoginRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string UserName = 2;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // string Password = 3;
  if (!this->_internal_password().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_password());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserLoginRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserLoginRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserLoginRequest::GetClassData() const { return &_class_data_; }


void UserLoginRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserLoginRequest*>(&to_msg);
  auto& from = static_cast<const UserLoginRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserLoginRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (!from._internal_password().empty()) {
    _this->_internal_set_password(from._internal_password());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserLoginRequest::CopyFrom(const UserLoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserLoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginRequest::IsInitialized() const {
  return true;
}

void UserLoginRequest::InternalSwap(UserLoginRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.username_, lhs_arena,
      &other->_impl_.username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.password_, lhs_arena,
      &other->_impl_.password_, rhs_arena
  );
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserLoginRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[5]);
}

// ===================================================================

class UserLogoutRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const UserLogoutRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const UserLogoutRequest* msg);
};

const ::proto::RequestMetaInfoV1&
UserLogoutRequest::_Internal::metainfo(const UserLogoutRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
UserLogoutRequest::_Internal::userverifyinfo(const UserLogoutRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void UserLogoutRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UserLogoutRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
UserLogoutRequest::UserLogoutRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserLogoutRequest)
}
UserLogoutRequest::UserLogoutRequest(const UserLogoutRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserLogoutRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UserLogoutRequest)
}

inline void UserLogoutRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UserLogoutRequest::~UserLogoutRequest() {
  // @@protoc_insertion_point(destructor:proto.UserLogoutRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserLogoutRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void UserLogoutRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserLogoutRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserLogoutRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserLogoutRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserLogoutRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserLogoutRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserLogoutRequest)
  return target;
}

size_t UserLogoutRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserLogoutRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserLogoutRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserLogoutRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserLogoutRequest::GetClassData() const { return &_class_data_; }


void UserLogoutRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserLogoutRequest*>(&to_msg);
  auto& from = static_cast<const UserLogoutRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserLogoutRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserLogoutRequest::CopyFrom(const UserLogoutRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserLogoutRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLogoutRequest::IsInitialized() const {
  return true;
}

void UserLogoutRequest::InternalSwap(UserLogoutRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserLogoutRequest, _impl_.userverifyinfo_)
      + sizeof(UserLogoutRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(UserLogoutRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserLogoutRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[6]);
}

// ===================================================================

class UserOnlineHeartBeatNotification::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const UserOnlineHeartBeatNotification* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const UserOnlineHeartBeatNotification* msg);
};

const ::proto::RequestMetaInfoV1&
UserOnlineHeartBeatNotification::_Internal::metainfo(const UserOnlineHeartBeatNotification* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
UserOnlineHeartBeatNotification::_Internal::userverifyinfo(const UserOnlineHeartBeatNotification* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void UserOnlineHeartBeatNotification::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UserOnlineHeartBeatNotification::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
UserOnlineHeartBeatNotification::UserOnlineHeartBeatNotification(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserOnlineHeartBeatNotification)
}
UserOnlineHeartBeatNotification::UserOnlineHeartBeatNotification(const UserOnlineHeartBeatNotification& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserOnlineHeartBeatNotification* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.heartbeattime_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  _this->_impl_.heartbeattime_ = from._impl_.heartbeattime_;
  // @@protoc_insertion_point(copy_constructor:proto.UserOnlineHeartBeatNotification)
}

inline void UserOnlineHeartBeatNotification::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.heartbeattime_){int64_t{0}}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UserOnlineHeartBeatNotification::~UserOnlineHeartBeatNotification() {
  // @@protoc_insertion_point(destructor:proto.UserOnlineHeartBeatNotification)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserOnlineHeartBeatNotification::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void UserOnlineHeartBeatNotification::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserOnlineHeartBeatNotification::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserOnlineHeartBeatNotification)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _impl_.heartbeattime_ = int64_t{0};
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserOnlineHeartBeatNotification::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // int64 HeartBeatTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 24)) {
          _impl_.heartbeattime_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserOnlineHeartBeatNotification::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserOnlineHeartBeatNotification)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // int64 HeartBeatTime = 3;
  if (this->_internal_heartbeattime() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteInt64ToArray(3, this->_internal_heartbeattime(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserOnlineHeartBeatNotification)
  return target;
}

size_t UserOnlineHeartBeatNotification::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserOnlineHeartBeatNotification)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // int64 HeartBeatTime = 3;
  if (this->_internal_heartbeattime() != 0) {
    total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(this->_internal_heartbeattime());
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserOnlineHeartBeatNotification::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserOnlineHeartBeatNotification::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserOnlineHeartBeatNotification::GetClassData() const { return &_class_data_; }


void UserOnlineHeartBeatNotification::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserOnlineHeartBeatNotification*>(&to_msg);
  auto& from = static_cast<const UserOnlineHeartBeatNotification&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserOnlineHeartBeatNotification)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_heartbeattime() != 0) {
    _this->_internal_set_heartbeattime(from._internal_heartbeattime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserOnlineHeartBeatNotification::CopyFrom(const UserOnlineHeartBeatNotification& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserOnlineHeartBeatNotification)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserOnlineHeartBeatNotification::IsInitialized() const {
  return true;
}

void UserOnlineHeartBeatNotification::InternalSwap(UserOnlineHeartBeatNotification* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserOnlineHeartBeatNotification, _impl_.heartbeattime_)
      + sizeof(UserOnlineHeartBeatNotification::_impl_.heartbeattime_)
      - PROTOBUF_FIELD_OFFSET(UserOnlineHeartBeatNotification, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserOnlineHeartBeatNotification::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[7]);
}

// ===================================================================

class GetUserPermissionGroupRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetUserPermissionGroupRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetUserPermissionGroupRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetUserPermissionGroupRequest::_Internal::metainfo(const GetUserPermissionGroupRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetUserPermissionGroupRequest::_Internal::userverifyinfo(const GetUserPermissionGroupRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetUserPermissionGroupRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetUserPermissionGroupRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetUserPermissionGroupRequest::GetUserPermissionGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetUserPermissionGroupRequest)
}
GetUserPermissionGroupRequest::GetUserPermissionGroupRequest(const GetUserPermissionGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserPermissionGroupRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetUserPermissionGroupRequest)
}

inline void GetUserPermissionGroupRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetUserPermissionGroupRequest::~GetUserPermissionGroupRequest() {
  // @@protoc_insertion_point(destructor:proto.GetUserPermissionGroupRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserPermissionGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetUserPermissionGroupRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserPermissionGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetUserPermissionGroupRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserPermissionGroupRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserPermissionGroupRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetUserPermissionGroupRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetUserPermissionGroupRequest)
  return target;
}

size_t GetUserPermissionGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetUserPermissionGroupRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserPermissionGroupRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserPermissionGroupRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserPermissionGroupRequest::GetClassData() const { return &_class_data_; }


void GetUserPermissionGroupRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserPermissionGroupRequest*>(&to_msg);
  auto& from = static_cast<const GetUserPermissionGroupRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetUserPermissionGroupRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserPermissionGroupRequest::CopyFrom(const GetUserPermissionGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetUserPermissionGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserPermissionGroupRequest::IsInitialized() const {
  return true;
}

void GetUserPermissionGroupRequest::InternalSwap(GetUserPermissionGroupRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetUserPermissionGroupRequest, _impl_.userverifyinfo_)
      + sizeof(GetUserPermissionGroupRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetUserPermissionGroupRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserPermissionGroupRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[8]);
}

// ===================================================================

class GetPermissionGroupRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetPermissionGroupRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetPermissionGroupRequest* msg);
  static const ::proto::PermissionGroupMetaInfoV1& permissiongroup(const GetPermissionGroupRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetPermissionGroupRequest::_Internal::metainfo(const GetPermissionGroupRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetPermissionGroupRequest::_Internal::userverifyinfo(const GetPermissionGroupRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::PermissionGroupMetaInfoV1&
GetPermissionGroupRequest::_Internal::permissiongroup(const GetPermissionGroupRequest* msg) {
  return *msg->_impl_.permissiongroup_;
}
void GetPermissionGroupRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetPermissionGroupRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void GetPermissionGroupRequest::clear_permissiongroup() {
  if (GetArenaForAllocation() == nullptr && _impl_.permissiongroup_ != nullptr) {
    delete _impl_.permissiongroup_;
  }
  _impl_.permissiongroup_ = nullptr;
}
GetPermissionGroupRequest::GetPermissionGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetPermissionGroupRequest)
}
GetPermissionGroupRequest::GetPermissionGroupRequest(const GetPermissionGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPermissionGroupRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.permissiongroup_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_permissiongroup()) {
    _this->_impl_.permissiongroup_ = new ::proto::PermissionGroupMetaInfoV1(*from._impl_.permissiongroup_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetPermissionGroupRequest)
}

inline void GetPermissionGroupRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.permissiongroup_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPermissionGroupRequest::~GetPermissionGroupRequest() {
  // @@protoc_insertion_point(destructor:proto.GetPermissionGroupRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPermissionGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.permissiongroup_;
}

void GetPermissionGroupRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPermissionGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPermissionGroupRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.permissiongroup_ != nullptr) {
    delete _impl_.permissiongroup_;
  }
  _impl_.permissiongroup_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPermissionGroupRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_permissiongroup(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPermissionGroupRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPermissionGroupRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 3;
  if (this->_internal_has_permissiongroup()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::permissiongroup(this),
        _Internal::permissiongroup(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPermissionGroupRequest)
  return target;
}

size_t GetPermissionGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPermissionGroupRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 3;
  if (this->_internal_has_permissiongroup()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.permissiongroup_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPermissionGroupRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPermissionGroupRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPermissionGroupRequest::GetClassData() const { return &_class_data_; }


void GetPermissionGroupRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPermissionGroupRequest*>(&to_msg);
  auto& from = static_cast<const GetPermissionGroupRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPermissionGroupRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_permissiongroup()) {
    _this->_internal_mutable_permissiongroup()->::proto::PermissionGroupMetaInfoV1::MergeFrom(
        from._internal_permissiongroup());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPermissionGroupRequest::CopyFrom(const GetPermissionGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPermissionGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPermissionGroupRequest::IsInitialized() const {
  return true;
}

void GetPermissionGroupRequest::InternalSwap(GetPermissionGroupRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPermissionGroupRequest, _impl_.permissiongroup_)
      + sizeof(GetPermissionGroupRequest::_impl_.permissiongroup_)
      - PROTOBUF_FIELD_OFFSET(GetPermissionGroupRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPermissionGroupRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[9]);
}

// ===================================================================

class GetAllPermissionGroupRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetAllPermissionGroupRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetAllPermissionGroupRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetAllPermissionGroupRequest::_Internal::metainfo(const GetAllPermissionGroupRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetAllPermissionGroupRequest::_Internal::userverifyinfo(const GetAllPermissionGroupRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetAllPermissionGroupRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllPermissionGroupRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetAllPermissionGroupRequest::GetAllPermissionGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllPermissionGroupRequest)
}
GetAllPermissionGroupRequest::GetAllPermissionGroupRequest(const GetAllPermissionGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllPermissionGroupRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllPermissionGroupRequest)
}

inline void GetAllPermissionGroupRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllPermissionGroupRequest::~GetAllPermissionGroupRequest() {
  // @@protoc_insertion_point(destructor:proto.GetAllPermissionGroupRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllPermissionGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetAllPermissionGroupRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllPermissionGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllPermissionGroupRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllPermissionGroupRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllPermissionGroupRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllPermissionGroupRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllPermissionGroupRequest)
  return target;
}

size_t GetAllPermissionGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllPermissionGroupRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllPermissionGroupRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllPermissionGroupRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllPermissionGroupRequest::GetClassData() const { return &_class_data_; }


void GetAllPermissionGroupRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllPermissionGroupRequest*>(&to_msg);
  auto& from = static_cast<const GetAllPermissionGroupRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllPermissionGroupRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllPermissionGroupRequest::CopyFrom(const GetAllPermissionGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllPermissionGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllPermissionGroupRequest::IsInitialized() const {
  return true;
}

void GetAllPermissionGroupRequest::InternalSwap(GetAllPermissionGroupRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetAllPermissionGroupRequest, _impl_.userverifyinfo_)
      + sizeof(GetAllPermissionGroupRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetAllPermissionGroupRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllPermissionGroupRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[10]);
}

// ===================================================================

class ChangeUserPermissionGroupRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const ChangeUserPermissionGroupRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const ChangeUserPermissionGroupRequest* msg);
};

const ::proto::RequestMetaInfoV1&
ChangeUserPermissionGroupRequest::_Internal::metainfo(const ChangeUserPermissionGroupRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
ChangeUserPermissionGroupRequest::_Internal::userverifyinfo(const ChangeUserPermissionGroupRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void ChangeUserPermissionGroupRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void ChangeUserPermissionGroupRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
ChangeUserPermissionGroupRequest::ChangeUserPermissionGroupRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ChangeUserPermissionGroupRequest)
}
ChangeUserPermissionGroupRequest::ChangeUserPermissionGroupRequest(const ChangeUserPermissionGroupRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChangeUserPermissionGroupRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.targetusername_){}
    , decltype(_impl_.permissiongroupname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.targetusername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.targetusername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_targetusername().empty()) {
    _this->_impl_.targetusername_.Set(from._internal_targetusername(), 
      _this->GetArenaForAllocation());
  }
  _impl_.permissiongroupname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.permissiongroupname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_permissiongroupname().empty()) {
    _this->_impl_.permissiongroupname_.Set(from._internal_permissiongroupname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ChangeUserPermissionGroupRequest)
}

inline void ChangeUserPermissionGroupRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.targetusername_){}
    , decltype(_impl_.permissiongroupname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.targetusername_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.targetusername_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.permissiongroupname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.permissiongroupname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

ChangeUserPermissionGroupRequest::~ChangeUserPermissionGroupRequest() {
  // @@protoc_insertion_point(destructor:proto.ChangeUserPermissionGroupRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChangeUserPermissionGroupRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.targetusername_.Destroy();
  _impl_.permissiongroupname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void ChangeUserPermissionGroupRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChangeUserPermissionGroupRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeUserPermissionGroupRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.targetusername_.ClearToEmpty();
  _impl_.permissiongroupname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangeUserPermissionGroupRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string TargetUserName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_targetusername();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ChangeUserPermissionGroupRequest.TargetUserName"));
        } else
          goto handle_unusual;
        continue;
      // string PermissionGroupName = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_permissiongroupname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.ChangeUserPermissionGroupRequest.PermissionGroupName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChangeUserPermissionGroupRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeUserPermissionGroupRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string TargetUserName = 3;
  if (!this->_internal_targetusername().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_targetusername().data(), static_cast<int>(this->_internal_targetusername().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ChangeUserPermissionGroupRequest.TargetUserName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_targetusername(), target);
  }

  // string PermissionGroupName = 4;
  if (!this->_internal_permissiongroupname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_permissiongroupname().data(), static_cast<int>(this->_internal_permissiongroupname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.ChangeUserPermissionGroupRequest.PermissionGroupName");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_permissiongroupname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeUserPermissionGroupRequest)
  return target;
}

size_t ChangeUserPermissionGroupRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeUserPermissionGroupRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string TargetUserName = 3;
  if (!this->_internal_targetusername().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_targetusername());
  }

  // string PermissionGroupName = 4;
  if (!this->_internal_permissiongroupname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_permissiongroupname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangeUserPermissionGroupRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChangeUserPermissionGroupRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangeUserPermissionGroupRequest::GetClassData() const { return &_class_data_; }


void ChangeUserPermissionGroupRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChangeUserPermissionGroupRequest*>(&to_msg);
  auto& from = static_cast<const ChangeUserPermissionGroupRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeUserPermissionGroupRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_targetusername().empty()) {
    _this->_internal_set_targetusername(from._internal_targetusername());
  }
  if (!from._internal_permissiongroupname().empty()) {
    _this->_internal_set_permissiongroupname(from._internal_permissiongroupname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeUserPermissionGroupRequest::CopyFrom(const ChangeUserPermissionGroupRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeUserPermissionGroupRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeUserPermissionGroupRequest::IsInitialized() const {
  return true;
}

void ChangeUserPermissionGroupRequest::InternalSwap(ChangeUserPermissionGroupRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.targetusername_, lhs_arena,
      &other->_impl_.targetusername_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.permissiongroupname_, lhs_arena,
      &other->_impl_.permissiongroupname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(ChangeUserPermissionGroupRequest, _impl_.userverifyinfo_)
      + sizeof(ChangeUserPermissionGroupRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(ChangeUserPermissionGroupRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeUserPermissionGroupRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[11]);
}

// ===================================================================

class CreateProjectRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const CreateProjectRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const CreateProjectRequest* msg);
  static const ::proto::ProjectMetaInfoV1& projectinfo(const CreateProjectRequest* msg);
};

const ::proto::RequestMetaInfoV1&
CreateProjectRequest::_Internal::metainfo(const CreateProjectRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
CreateProjectRequest::_Internal::userverifyinfo(const CreateProjectRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::ProjectMetaInfoV1&
CreateProjectRequest::_Internal::projectinfo(const CreateProjectRequest* msg) {
  return *msg->_impl_.projectinfo_;
}
void CreateProjectRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void CreateProjectRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void CreateProjectRequest::clear_projectinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
}
CreateProjectRequest::CreateProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateProjectRequest)
}
CreateProjectRequest::CreateProjectRequest(const CreateProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateProjectRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.projectinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_projectinfo()) {
    _this->_impl_.projectinfo_ = new ::proto::ProjectMetaInfoV1(*from._impl_.projectinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateProjectRequest)
}

inline void CreateProjectRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.projectinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateProjectRequest::~CreateProjectRequest() {
  // @@protoc_insertion_point(destructor:proto.CreateProjectRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.projectinfo_;
}

void CreateProjectRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateProjectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateProjectRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateProjectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateProjectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  if (this->_internal_has_projectinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::projectinfo(this),
        _Internal::projectinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateProjectRequest)
  return target;
}

size_t CreateProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateProjectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  if (this->_internal_has_projectinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateProjectRequest::GetClassData() const { return &_class_data_; }


void CreateProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateProjectRequest*>(&to_msg);
  auto& from = static_cast<const CreateProjectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateProjectRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_projectinfo()) {
    _this->_internal_mutable_projectinfo()->::proto::ProjectMetaInfoV1::MergeFrom(
        from._internal_projectinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateProjectRequest::CopyFrom(const CreateProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProjectRequest::IsInitialized() const {
  return true;
}

void CreateProjectRequest::InternalSwap(CreateProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateProjectRequest, _impl_.projectinfo_)
      + sizeof(CreateProjectRequest::_impl_.projectinfo_)
      - PROTOBUF_FIELD_OFFSET(CreateProjectRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateProjectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[12]);
}

// ===================================================================

class DeleteProjectRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const DeleteProjectRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const DeleteProjectRequest* msg);
};

const ::proto::RequestMetaInfoV1&
DeleteProjectRequest::_Internal::metainfo(const DeleteProjectRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
DeleteProjectRequest::_Internal::userverifyinfo(const DeleteProjectRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void DeleteProjectRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void DeleteProjectRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
DeleteProjectRequest::DeleteProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteProjectRequest)
}
DeleteProjectRequest::DeleteProjectRequest(const DeleteProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteProjectRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.projectname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.projectname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.projectname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_projectname().empty()) {
    _this->_impl_.projectname_.Set(from._internal_projectname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteProjectRequest)
}

inline void DeleteProjectRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.projectname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.projectname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.projectname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteProjectRequest::~DeleteProjectRequest() {
  // @@protoc_insertion_point(destructor:proto.DeleteProjectRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.projectname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void DeleteProjectRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteProjectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.projectname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteProjectRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ProjectName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_projectname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteProjectRequest.ProjectName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteProjectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteProjectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string ProjectName = 3;
  if (!this->_internal_projectname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_projectname().data(), static_cast<int>(this->_internal_projectname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteProjectRequest.ProjectName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_projectname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteProjectRequest)
  return target;
}

size_t DeleteProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteProjectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ProjectName = 3;
  if (!this->_internal_projectname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_projectname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteProjectRequest::GetClassData() const { return &_class_data_; }


void DeleteProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteProjectRequest*>(&to_msg);
  auto& from = static_cast<const DeleteProjectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteProjectRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_projectname().empty()) {
    _this->_internal_set_projectname(from._internal_projectname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteProjectRequest::CopyFrom(const DeleteProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteProjectRequest::IsInitialized() const {
  return true;
}

void DeleteProjectRequest::InternalSwap(DeleteProjectRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.projectname_, lhs_arena,
      &other->_impl_.projectname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteProjectRequest, _impl_.userverifyinfo_)
      + sizeof(DeleteProjectRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(DeleteProjectRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteProjectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[13]);
}

// ===================================================================

class UpdateProjectRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const UpdateProjectRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const UpdateProjectRequest* msg);
  static const ::proto::ProjectMetaInfoV1& projectinfo(const UpdateProjectRequest* msg);
};

const ::proto::RequestMetaInfoV1&
UpdateProjectRequest::_Internal::metainfo(const UpdateProjectRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
UpdateProjectRequest::_Internal::userverifyinfo(const UpdateProjectRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::ProjectMetaInfoV1&
UpdateProjectRequest::_Internal::projectinfo(const UpdateProjectRequest* msg) {
  return *msg->_impl_.projectinfo_;
}
void UpdateProjectRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UpdateProjectRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void UpdateProjectRequest::clear_projectinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
}
UpdateProjectRequest::UpdateProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateProjectRequest)
}
UpdateProjectRequest::UpdateProjectRequest(const UpdateProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateProjectRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.projectinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_projectinfo()) {
    _this->_impl_.projectinfo_ = new ::proto::ProjectMetaInfoV1(*from._impl_.projectinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateProjectRequest)
}

inline void UpdateProjectRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.projectinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateProjectRequest::~UpdateProjectRequest() {
  // @@protoc_insertion_point(destructor:proto.UpdateProjectRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.projectinfo_;
}

void UpdateProjectRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateProjectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateProjectRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateProjectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateProjectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  if (this->_internal_has_projectinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::projectinfo(this),
        _Internal::projectinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateProjectRequest)
  return target;
}

size_t UpdateProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateProjectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 3;
  if (this->_internal_has_projectinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateProjectRequest::GetClassData() const { return &_class_data_; }


void UpdateProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateProjectRequest*>(&to_msg);
  auto& from = static_cast<const UpdateProjectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateProjectRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_projectinfo()) {
    _this->_internal_mutable_projectinfo()->::proto::ProjectMetaInfoV1::MergeFrom(
        from._internal_projectinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateProjectRequest::CopyFrom(const UpdateProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateProjectRequest::IsInitialized() const {
  return true;
}

void UpdateProjectRequest::InternalSwap(UpdateProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateProjectRequest, _impl_.projectinfo_)
      + sizeof(UpdateProjectRequest::_impl_.projectinfo_)
      - PROTOBUF_FIELD_OFFSET(UpdateProjectRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateProjectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[14]);
}

// ===================================================================

class GetProjectRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetProjectRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetProjectRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetProjectRequest::_Internal::metainfo(const GetProjectRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetProjectRequest::_Internal::userverifyinfo(const GetProjectRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetProjectRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetProjectRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetProjectRequest::GetProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetProjectRequest)
}
GetProjectRequest::GetProjectRequest(const GetProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetProjectRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.projectname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.projectname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.projectname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_projectname().empty()) {
    _this->_impl_.projectname_.Set(from._internal_projectname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetProjectRequest)
}

inline void GetProjectRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.projectname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.projectname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.projectname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetProjectRequest::~GetProjectRequest() {
  // @@protoc_insertion_point(destructor:proto.GetProjectRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.projectname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetProjectRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetProjectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.projectname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetProjectRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ProjectName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_projectname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetProjectRequest.ProjectName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetProjectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetProjectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string ProjectName = 3;
  if (!this->_internal_projectname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_projectname().data(), static_cast<int>(this->_internal_projectname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetProjectRequest.ProjectName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_projectname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetProjectRequest)
  return target;
}

size_t GetProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetProjectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ProjectName = 3;
  if (!this->_internal_projectname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_projectname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetProjectRequest::GetClassData() const { return &_class_data_; }


void GetProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetProjectRequest*>(&to_msg);
  auto& from = static_cast<const GetProjectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetProjectRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_projectname().empty()) {
    _this->_internal_set_projectname(from._internal_projectname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetProjectRequest::CopyFrom(const GetProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProjectRequest::IsInitialized() const {
  return true;
}

void GetProjectRequest::InternalSwap(GetProjectRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.projectname_, lhs_arena,
      &other->_impl_.projectname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetProjectRequest, _impl_.userverifyinfo_)
      + sizeof(GetProjectRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetProjectRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetProjectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[15]);
}

// ===================================================================

class GetAllProjectRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetAllProjectRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetAllProjectRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetAllProjectRequest::_Internal::metainfo(const GetAllProjectRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetAllProjectRequest::_Internal::userverifyinfo(const GetAllProjectRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetAllProjectRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllProjectRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetAllProjectRequest::GetAllProjectRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllProjectRequest)
}
GetAllProjectRequest::GetAllProjectRequest(const GetAllProjectRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllProjectRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllProjectRequest)
}

inline void GetAllProjectRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllProjectRequest::~GetAllProjectRequest() {
  // @@protoc_insertion_point(destructor:proto.GetAllProjectRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllProjectRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetAllProjectRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllProjectRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllProjectRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllProjectRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllProjectRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllProjectRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllProjectRequest)
  return target;
}

size_t GetAllProjectRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllProjectRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllProjectRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllProjectRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllProjectRequest::GetClassData() const { return &_class_data_; }


void GetAllProjectRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllProjectRequest*>(&to_msg);
  auto& from = static_cast<const GetAllProjectRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllProjectRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllProjectRequest::CopyFrom(const GetAllProjectRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllProjectRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllProjectRequest::IsInitialized() const {
  return true;
}

void GetAllProjectRequest::InternalSwap(GetAllProjectRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetAllProjectRequest, _impl_.userverifyinfo_)
      + sizeof(GetAllProjectRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetAllProjectRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllProjectRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[16]);
}

// ===================================================================

class CreateSwcRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const CreateSwcRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const CreateSwcRequest* msg);
  static const ::proto::SwcMetaInfoV1& swcinfo(const CreateSwcRequest* msg);
  static const ::proto::SwcAttachmentAnoV1& swcattachmentano(const CreateSwcRequest* msg);
};

const ::proto::RequestMetaInfoV1&
CreateSwcRequest::_Internal::metainfo(const CreateSwcRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
CreateSwcRequest::_Internal::userverifyinfo(const CreateSwcRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::SwcMetaInfoV1&
CreateSwcRequest::_Internal::swcinfo(const CreateSwcRequest* msg) {
  return *msg->_impl_.swcinfo_;
}
const ::proto::SwcAttachmentAnoV1&
CreateSwcRequest::_Internal::swcattachmentano(const CreateSwcRequest* msg) {
  return *msg->_impl_.swcattachmentano_;
}
void CreateSwcRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void CreateSwcRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void CreateSwcRequest::clear_swcinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
}
void CreateSwcRequest::clear_swcattachmentano() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcattachmentano_ != nullptr) {
    delete _impl_.swcattachmentano_;
  }
  _impl_.swcattachmentano_ = nullptr;
}
void CreateSwcRequest::clear_swcattachmentapo() {
  _impl_.swcattachmentapo_.Clear();
}
CreateSwcRequest::CreateSwcRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateSwcRequest)
}
CreateSwcRequest::CreateSwcRequest(const CreateSwcRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSwcRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcattachmentapo_){from._impl_.swcattachmentapo_}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcinfo_){nullptr}
    , decltype(_impl_.swcattachmentano_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_swcinfo()) {
    _this->_impl_.swcinfo_ = new ::proto::SwcMetaInfoV1(*from._impl_.swcinfo_);
  }
  if (from._internal_has_swcattachmentano()) {
    _this->_impl_.swcattachmentano_ = new ::proto::SwcAttachmentAnoV1(*from._impl_.swcattachmentano_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateSwcRequest)
}

inline void CreateSwcRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcattachmentapo_){arena}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcinfo_){nullptr}
    , decltype(_impl_.swcattachmentano_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateSwcRequest::~CreateSwcRequest() {
  // @@protoc_insertion_point(destructor:proto.CreateSwcRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSwcRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcattachmentapo_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.swcinfo_;
  if (this != internal_default_instance()) delete _impl_.swcattachmentano_;
}

void CreateSwcRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSwcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateSwcRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcattachmentapo_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcattachmentano_ != nullptr) {
    delete _impl_.swcattachmentano_;
  }
  _impl_.swcattachmentano_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSwcRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcMetaInfoV1 SwcInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcAttachmentAnoV1 SwcAttachmentAno = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcattachmentano(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.SwcAttachmentApoV1 SwcAttachmentApo = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_swcattachmentapo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSwcRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateSwcRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 3;
  if (this->_internal_has_swcinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcinfo(this),
        _Internal::swcinfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcAttachmentAnoV1 SwcAttachmentAno = 4;
  if (this->_internal_has_swcattachmentano()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::swcattachmentano(this),
        _Internal::swcattachmentano(this).GetCachedSize(), target, stream);
  }

  // repeated .proto.SwcAttachmentApoV1 SwcAttachmentApo = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_swcattachmentapo_size()); i < n; i++) {
    const auto& repfield = this->_internal_swcattachmentapo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateSwcRequest)
  return target;
}

size_t CreateSwcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateSwcRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.SwcAttachmentApoV1 SwcAttachmentApo = 5;
  total_size += 1UL * this->_internal_swcattachmentapo_size();
  for (const auto& msg : this->_impl_.swcattachmentapo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 3;
  if (this->_internal_has_swcinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcinfo_);
  }

  // .proto.SwcAttachmentAnoV1 SwcAttachmentAno = 4;
  if (this->_internal_has_swcattachmentano()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcattachmentano_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSwcRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSwcRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSwcRequest::GetClassData() const { return &_class_data_; }


void CreateSwcRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSwcRequest*>(&to_msg);
  auto& from = static_cast<const CreateSwcRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateSwcRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swcattachmentapo_.MergeFrom(from._impl_.swcattachmentapo_);
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_swcinfo()) {
    _this->_internal_mutable_swcinfo()->::proto::SwcMetaInfoV1::MergeFrom(
        from._internal_swcinfo());
  }
  if (from._internal_has_swcattachmentano()) {
    _this->_internal_mutable_swcattachmentano()->::proto::SwcAttachmentAnoV1::MergeFrom(
        from._internal_swcattachmentano());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSwcRequest::CopyFrom(const CreateSwcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateSwcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSwcRequest::IsInitialized() const {
  return true;
}

void CreateSwcRequest::InternalSwap(CreateSwcRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swcattachmentapo_.InternalSwap(&other->_impl_.swcattachmentapo_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSwcRequest, _impl_.swcattachmentano_)
      + sizeof(CreateSwcRequest::_impl_.swcattachmentano_)
      - PROTOBUF_FIELD_OFFSET(CreateSwcRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSwcRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[17]);
}

// ===================================================================

class DeleteSwcRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const DeleteSwcRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const DeleteSwcRequest* msg);
};

const ::proto::RequestMetaInfoV1&
DeleteSwcRequest::_Internal::metainfo(const DeleteSwcRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
DeleteSwcRequest::_Internal::userverifyinfo(const DeleteSwcRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void DeleteSwcRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void DeleteSwcRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
DeleteSwcRequest::DeleteSwcRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteSwcRequest)
}
DeleteSwcRequest::DeleteSwcRequest(const DeleteSwcRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteSwcRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteSwcRequest)
}

inline void DeleteSwcRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteSwcRequest::~DeleteSwcRequest() {
  // @@protoc_insertion_point(destructor:proto.DeleteSwcRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteSwcRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void DeleteSwcRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteSwcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteSwcRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSwcRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteSwcRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSwcRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteSwcRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteSwcRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteSwcRequest)
  return target;
}

size_t DeleteSwcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteSwcRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSwcRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteSwcRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSwcRequest::GetClassData() const { return &_class_data_; }


void DeleteSwcRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteSwcRequest*>(&to_msg);
  auto& from = static_cast<const DeleteSwcRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteSwcRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSwcRequest::CopyFrom(const DeleteSwcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteSwcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSwcRequest::IsInitialized() const {
  return true;
}

void DeleteSwcRequest::InternalSwap(DeleteSwcRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteSwcRequest, _impl_.userverifyinfo_)
      + sizeof(DeleteSwcRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(DeleteSwcRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSwcRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[18]);
}

// ===================================================================

class UpdateSwcRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const UpdateSwcRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const UpdateSwcRequest* msg);
  static const ::proto::SwcMetaInfoV1& swcinfo(const UpdateSwcRequest* msg);
};

const ::proto::RequestMetaInfoV1&
UpdateSwcRequest::_Internal::metainfo(const UpdateSwcRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
UpdateSwcRequest::_Internal::userverifyinfo(const UpdateSwcRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::SwcMetaInfoV1&
UpdateSwcRequest::_Internal::swcinfo(const UpdateSwcRequest* msg) {
  return *msg->_impl_.swcinfo_;
}
void UpdateSwcRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UpdateSwcRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void UpdateSwcRequest::clear_swcinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
}
UpdateSwcRequest::UpdateSwcRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateSwcRequest)
}
UpdateSwcRequest::UpdateSwcRequest(const UpdateSwcRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateSwcRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_swcinfo()) {
    _this->_impl_.swcinfo_ = new ::proto::SwcMetaInfoV1(*from._impl_.swcinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateSwcRequest)
}

inline void UpdateSwcRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateSwcRequest::~UpdateSwcRequest() {
  // @@protoc_insertion_point(destructor:proto.UpdateSwcRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateSwcRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.swcinfo_;
}

void UpdateSwcRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateSwcRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateSwcRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSwcRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcMetaInfoV1 SwcInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSwcRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateSwcRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 3;
  if (this->_internal_has_swcinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcinfo(this),
        _Internal::swcinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateSwcRequest)
  return target;
}

size_t UpdateSwcRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateSwcRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 3;
  if (this->_internal_has_swcinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSwcRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateSwcRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSwcRequest::GetClassData() const { return &_class_data_; }


void UpdateSwcRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateSwcRequest*>(&to_msg);
  auto& from = static_cast<const UpdateSwcRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateSwcRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_swcinfo()) {
    _this->_internal_mutable_swcinfo()->::proto::SwcMetaInfoV1::MergeFrom(
        from._internal_swcinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSwcRequest::CopyFrom(const UpdateSwcRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateSwcRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSwcRequest::IsInitialized() const {
  return true;
}

void UpdateSwcRequest::InternalSwap(UpdateSwcRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSwcRequest, _impl_.swcinfo_)
      + sizeof(UpdateSwcRequest::_impl_.swcinfo_)
      - PROTOBUF_FIELD_OFFSET(UpdateSwcRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSwcRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[19]);
}

// ===================================================================

class GetSwcMetaInfoRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetSwcMetaInfoRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetSwcMetaInfoRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetSwcMetaInfoRequest::_Internal::metainfo(const GetSwcMetaInfoRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetSwcMetaInfoRequest::_Internal::userverifyinfo(const GetSwcMetaInfoRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetSwcMetaInfoRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSwcMetaInfoRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetSwcMetaInfoRequest::GetSwcMetaInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcMetaInfoRequest)
}
GetSwcMetaInfoRequest::GetSwcMetaInfoRequest(const GetSwcMetaInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcMetaInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcMetaInfoRequest)
}

inline void GetSwcMetaInfoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSwcMetaInfoRequest::~GetSwcMetaInfoRequest() {
  // @@protoc_insertion_point(destructor:proto.GetSwcMetaInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcMetaInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetSwcMetaInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcMetaInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcMetaInfoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcMetaInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcMetaInfoRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcMetaInfoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcMetaInfoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcMetaInfoRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcMetaInfoRequest)
  return target;
}

size_t GetSwcMetaInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcMetaInfoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcMetaInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcMetaInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcMetaInfoRequest::GetClassData() const { return &_class_data_; }


void GetSwcMetaInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcMetaInfoRequest*>(&to_msg);
  auto& from = static_cast<const GetSwcMetaInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcMetaInfoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcMetaInfoRequest::CopyFrom(const GetSwcMetaInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcMetaInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcMetaInfoRequest::IsInitialized() const {
  return true;
}

void GetSwcMetaInfoRequest::InternalSwap(GetSwcMetaInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcMetaInfoRequest, _impl_.userverifyinfo_)
      + sizeof(GetSwcMetaInfoRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetSwcMetaInfoRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcMetaInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[20]);
}

// ===================================================================

class GetAllSwcMetaInfoRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetAllSwcMetaInfoRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetAllSwcMetaInfoRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetAllSwcMetaInfoRequest::_Internal::metainfo(const GetAllSwcMetaInfoRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetAllSwcMetaInfoRequest::_Internal::userverifyinfo(const GetAllSwcMetaInfoRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetAllSwcMetaInfoRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllSwcMetaInfoRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetAllSwcMetaInfoRequest::GetAllSwcMetaInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllSwcMetaInfoRequest)
}
GetAllSwcMetaInfoRequest::GetAllSwcMetaInfoRequest(const GetAllSwcMetaInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllSwcMetaInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllSwcMetaInfoRequest)
}

inline void GetAllSwcMetaInfoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllSwcMetaInfoRequest::~GetAllSwcMetaInfoRequest() {
  // @@protoc_insertion_point(destructor:proto.GetAllSwcMetaInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllSwcMetaInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetAllSwcMetaInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllSwcMetaInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllSwcMetaInfoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllSwcMetaInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllSwcMetaInfoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllSwcMetaInfoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllSwcMetaInfoRequest)
  return target;
}

size_t GetAllSwcMetaInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllSwcMetaInfoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllSwcMetaInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllSwcMetaInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllSwcMetaInfoRequest::GetClassData() const { return &_class_data_; }


void GetAllSwcMetaInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllSwcMetaInfoRequest*>(&to_msg);
  auto& from = static_cast<const GetAllSwcMetaInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllSwcMetaInfoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllSwcMetaInfoRequest::CopyFrom(const GetAllSwcMetaInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllSwcMetaInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllSwcMetaInfoRequest::IsInitialized() const {
  return true;
}

void GetAllSwcMetaInfoRequest::InternalSwap(GetAllSwcMetaInfoRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetAllSwcMetaInfoRequest, _impl_.userverifyinfo_)
      + sizeof(GetAllSwcMetaInfoRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetAllSwcMetaInfoRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllSwcMetaInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[21]);
}

// ===================================================================

class CreateSwcSnapshotRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const CreateSwcSnapshotRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const CreateSwcSnapshotRequest* msg);
};

const ::proto::RequestMetaInfoV1&
CreateSwcSnapshotRequest::_Internal::metainfo(const CreateSwcSnapshotRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
CreateSwcSnapshotRequest::_Internal::userverifyinfo(const CreateSwcSnapshotRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void CreateSwcSnapshotRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void CreateSwcSnapshotRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
CreateSwcSnapshotRequest::CreateSwcSnapshotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateSwcSnapshotRequest)
}
CreateSwcSnapshotRequest::CreateSwcSnapshotRequest(const CreateSwcSnapshotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSwcSnapshotRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateSwcSnapshotRequest)
}

inline void CreateSwcSnapshotRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateSwcSnapshotRequest::~CreateSwcSnapshotRequest() {
  // @@protoc_insertion_point(destructor:proto.CreateSwcSnapshotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSwcSnapshotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void CreateSwcSnapshotRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSwcSnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateSwcSnapshotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSwcSnapshotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.CreateSwcSnapshotRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSwcSnapshotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateSwcSnapshotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.CreateSwcSnapshotRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateSwcSnapshotRequest)
  return target;
}

size_t CreateSwcSnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateSwcSnapshotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSwcSnapshotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSwcSnapshotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSwcSnapshotRequest::GetClassData() const { return &_class_data_; }


void CreateSwcSnapshotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSwcSnapshotRequest*>(&to_msg);
  auto& from = static_cast<const CreateSwcSnapshotRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateSwcSnapshotRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSwcSnapshotRequest::CopyFrom(const CreateSwcSnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateSwcSnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSwcSnapshotRequest::IsInitialized() const {
  return true;
}

void CreateSwcSnapshotRequest::InternalSwap(CreateSwcSnapshotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSwcSnapshotRequest, _impl_.userverifyinfo_)
      + sizeof(CreateSwcSnapshotRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(CreateSwcSnapshotRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSwcSnapshotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[22]);
}

// ===================================================================

class GetAllSnapshotMetaInfoRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetAllSnapshotMetaInfoRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetAllSnapshotMetaInfoRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetAllSnapshotMetaInfoRequest::_Internal::metainfo(const GetAllSnapshotMetaInfoRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetAllSnapshotMetaInfoRequest::_Internal::userverifyinfo(const GetAllSnapshotMetaInfoRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetAllSnapshotMetaInfoRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllSnapshotMetaInfoRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetAllSnapshotMetaInfoRequest::GetAllSnapshotMetaInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllSnapshotMetaInfoRequest)
}
GetAllSnapshotMetaInfoRequest::GetAllSnapshotMetaInfoRequest(const GetAllSnapshotMetaInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllSnapshotMetaInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllSnapshotMetaInfoRequest)
}

inline void GetAllSnapshotMetaInfoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetAllSnapshotMetaInfoRequest::~GetAllSnapshotMetaInfoRequest() {
  // @@protoc_insertion_point(destructor:proto.GetAllSnapshotMetaInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllSnapshotMetaInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetAllSnapshotMetaInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllSnapshotMetaInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllSnapshotMetaInfoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllSnapshotMetaInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetAllSnapshotMetaInfoRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllSnapshotMetaInfoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllSnapshotMetaInfoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetAllSnapshotMetaInfoRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllSnapshotMetaInfoRequest)
  return target;
}

size_t GetAllSnapshotMetaInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllSnapshotMetaInfoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllSnapshotMetaInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllSnapshotMetaInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllSnapshotMetaInfoRequest::GetClassData() const { return &_class_data_; }


void GetAllSnapshotMetaInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllSnapshotMetaInfoRequest*>(&to_msg);
  auto& from = static_cast<const GetAllSnapshotMetaInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllSnapshotMetaInfoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllSnapshotMetaInfoRequest::CopyFrom(const GetAllSnapshotMetaInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllSnapshotMetaInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllSnapshotMetaInfoRequest::IsInitialized() const {
  return true;
}

void GetAllSnapshotMetaInfoRequest::InternalSwap(GetAllSnapshotMetaInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetAllSnapshotMetaInfoRequest, _impl_.userverifyinfo_)
      + sizeof(GetAllSnapshotMetaInfoRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetAllSnapshotMetaInfoRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllSnapshotMetaInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[23]);
}

// ===================================================================

class GetSnapshotRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetSnapshotRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetSnapshotRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetSnapshotRequest::_Internal::metainfo(const GetSnapshotRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetSnapshotRequest::_Internal::userverifyinfo(const GetSnapshotRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetSnapshotRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSnapshotRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetSnapshotRequest::GetSnapshotRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSnapshotRequest)
}
GetSnapshotRequest::GetSnapshotRequest(const GetSnapshotRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSnapshotRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcsnapshotcollectionname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcsnapshotcollectionname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcsnapshotcollectionname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcsnapshotcollectionname().empty()) {
    _this->_impl_.swcsnapshotcollectionname_.Set(from._internal_swcsnapshotcollectionname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSnapshotRequest)
}

inline void GetSnapshotRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcsnapshotcollectionname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcsnapshotcollectionname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcsnapshotcollectionname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSnapshotRequest::~GetSnapshotRequest() {
  // @@protoc_insertion_point(destructor:proto.GetSnapshotRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSnapshotRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcsnapshotcollectionname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetSnapshotRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSnapshotRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSnapshotRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcsnapshotcollectionname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSnapshotRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcSnapshotCollectionName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcsnapshotcollectionname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSnapshotRequest.SwcSnapshotCollectionName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSnapshotRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSnapshotRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcSnapshotCollectionName = 3;
  if (!this->_internal_swcsnapshotcollectionname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcsnapshotcollectionname().data(), static_cast<int>(this->_internal_swcsnapshotcollectionname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSnapshotRequest.SwcSnapshotCollectionName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcsnapshotcollectionname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSnapshotRequest)
  return target;
}

size_t GetSnapshotRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSnapshotRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcSnapshotCollectionName = 3;
  if (!this->_internal_swcsnapshotcollectionname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcsnapshotcollectionname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSnapshotRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSnapshotRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSnapshotRequest::GetClassData() const { return &_class_data_; }


void GetSnapshotRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSnapshotRequest*>(&to_msg);
  auto& from = static_cast<const GetSnapshotRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSnapshotRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcsnapshotcollectionname().empty()) {
    _this->_internal_set_swcsnapshotcollectionname(from._internal_swcsnapshotcollectionname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSnapshotRequest::CopyFrom(const GetSnapshotRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSnapshotRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSnapshotRequest::IsInitialized() const {
  return true;
}

void GetSnapshotRequest::InternalSwap(GetSnapshotRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcsnapshotcollectionname_, lhs_arena,
      &other->_impl_.swcsnapshotcollectionname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSnapshotRequest, _impl_.userverifyinfo_)
      + sizeof(GetSnapshotRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetSnapshotRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSnapshotRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[24]);
}

// ===================================================================

class GetAllIncrementOperationMetaInfoRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetAllIncrementOperationMetaInfoRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetAllIncrementOperationMetaInfoRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetAllIncrementOperationMetaInfoRequest::_Internal::metainfo(const GetAllIncrementOperationMetaInfoRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetAllIncrementOperationMetaInfoRequest::_Internal::userverifyinfo(const GetAllIncrementOperationMetaInfoRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetAllIncrementOperationMetaInfoRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllIncrementOperationMetaInfoRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetAllIncrementOperationMetaInfoRequest::GetAllIncrementOperationMetaInfoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllIncrementOperationMetaInfoRequest)
}
GetAllIncrementOperationMetaInfoRequest::GetAllIncrementOperationMetaInfoRequest(const GetAllIncrementOperationMetaInfoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllIncrementOperationMetaInfoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllIncrementOperationMetaInfoRequest)
}

inline void GetAllIncrementOperationMetaInfoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetAllIncrementOperationMetaInfoRequest::~GetAllIncrementOperationMetaInfoRequest() {
  // @@protoc_insertion_point(destructor:proto.GetAllIncrementOperationMetaInfoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllIncrementOperationMetaInfoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetAllIncrementOperationMetaInfoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllIncrementOperationMetaInfoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllIncrementOperationMetaInfoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllIncrementOperationMetaInfoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetAllIncrementOperationMetaInfoRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllIncrementOperationMetaInfoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllIncrementOperationMetaInfoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetAllIncrementOperationMetaInfoRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllIncrementOperationMetaInfoRequest)
  return target;
}

size_t GetAllIncrementOperationMetaInfoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllIncrementOperationMetaInfoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllIncrementOperationMetaInfoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllIncrementOperationMetaInfoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllIncrementOperationMetaInfoRequest::GetClassData() const { return &_class_data_; }


void GetAllIncrementOperationMetaInfoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllIncrementOperationMetaInfoRequest*>(&to_msg);
  auto& from = static_cast<const GetAllIncrementOperationMetaInfoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllIncrementOperationMetaInfoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllIncrementOperationMetaInfoRequest::CopyFrom(const GetAllIncrementOperationMetaInfoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllIncrementOperationMetaInfoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllIncrementOperationMetaInfoRequest::IsInitialized() const {
  return true;
}

void GetAllIncrementOperationMetaInfoRequest::InternalSwap(GetAllIncrementOperationMetaInfoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetAllIncrementOperationMetaInfoRequest, _impl_.userverifyinfo_)
      + sizeof(GetAllIncrementOperationMetaInfoRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetAllIncrementOperationMetaInfoRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllIncrementOperationMetaInfoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[25]);
}

// ===================================================================

class GetIncrementOperationRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetIncrementOperationRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetIncrementOperationRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetIncrementOperationRequest::_Internal::metainfo(const GetIncrementOperationRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetIncrementOperationRequest::_Internal::userverifyinfo(const GetIncrementOperationRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetIncrementOperationRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetIncrementOperationRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetIncrementOperationRequest::GetIncrementOperationRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetIncrementOperationRequest)
}
GetIncrementOperationRequest::GetIncrementOperationRequest(const GetIncrementOperationRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetIncrementOperationRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.incrementoperationcollectionname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.incrementoperationcollectionname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.incrementoperationcollectionname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_incrementoperationcollectionname().empty()) {
    _this->_impl_.incrementoperationcollectionname_.Set(from._internal_incrementoperationcollectionname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetIncrementOperationRequest)
}

inline void GetIncrementOperationRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.incrementoperationcollectionname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.incrementoperationcollectionname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.incrementoperationcollectionname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetIncrementOperationRequest::~GetIncrementOperationRequest() {
  // @@protoc_insertion_point(destructor:proto.GetIncrementOperationRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetIncrementOperationRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.incrementoperationcollectionname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetIncrementOperationRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetIncrementOperationRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetIncrementOperationRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.incrementoperationcollectionname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIncrementOperationRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string IncrementOperationCollectionName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_incrementoperationcollectionname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetIncrementOperationRequest.IncrementOperationCollectionName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetIncrementOperationRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetIncrementOperationRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string IncrementOperationCollectionName = 3;
  if (!this->_internal_incrementoperationcollectionname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_incrementoperationcollectionname().data(), static_cast<int>(this->_internal_incrementoperationcollectionname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetIncrementOperationRequest.IncrementOperationCollectionName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_incrementoperationcollectionname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetIncrementOperationRequest)
  return target;
}

size_t GetIncrementOperationRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetIncrementOperationRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string IncrementOperationCollectionName = 3;
  if (!this->_internal_incrementoperationcollectionname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_incrementoperationcollectionname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetIncrementOperationRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetIncrementOperationRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetIncrementOperationRequest::GetClassData() const { return &_class_data_; }


void GetIncrementOperationRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetIncrementOperationRequest*>(&to_msg);
  auto& from = static_cast<const GetIncrementOperationRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetIncrementOperationRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_incrementoperationcollectionname().empty()) {
    _this->_internal_set_incrementoperationcollectionname(from._internal_incrementoperationcollectionname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetIncrementOperationRequest::CopyFrom(const GetIncrementOperationRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetIncrementOperationRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIncrementOperationRequest::IsInitialized() const {
  return true;
}

void GetIncrementOperationRequest::InternalSwap(GetIncrementOperationRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.incrementoperationcollectionname_, lhs_arena,
      &other->_impl_.incrementoperationcollectionname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIncrementOperationRequest, _impl_.userverifyinfo_)
      + sizeof(GetIncrementOperationRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetIncrementOperationRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIncrementOperationRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[26]);
}

// ===================================================================

class CreateSwcNodeDataRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const CreateSwcNodeDataRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const CreateSwcNodeDataRequest* msg);
  static const ::proto::SwcDataV1& swcdata(const CreateSwcNodeDataRequest* msg);
};

const ::proto::RequestMetaInfoV1&
CreateSwcNodeDataRequest::_Internal::metainfo(const CreateSwcNodeDataRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
CreateSwcNodeDataRequest::_Internal::userverifyinfo(const CreateSwcNodeDataRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::SwcDataV1&
CreateSwcNodeDataRequest::_Internal::swcdata(const CreateSwcNodeDataRequest* msg) {
  return *msg->_impl_.swcdata_;
}
void CreateSwcNodeDataRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void CreateSwcNodeDataRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void CreateSwcNodeDataRequest::clear_swcdata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcdata_ != nullptr) {
    delete _impl_.swcdata_;
  }
  _impl_.swcdata_ = nullptr;
}
CreateSwcNodeDataRequest::CreateSwcNodeDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateSwcNodeDataRequest)
}
CreateSwcNodeDataRequest::CreateSwcNodeDataRequest(const CreateSwcNodeDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSwcNodeDataRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcdata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_swcdata()) {
    _this->_impl_.swcdata_ = new ::proto::SwcDataV1(*from._impl_.swcdata_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateSwcNodeDataRequest)
}

inline void CreateSwcNodeDataRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcdata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateSwcNodeDataRequest::~CreateSwcNodeDataRequest() {
  // @@protoc_insertion_point(destructor:proto.CreateSwcNodeDataRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSwcNodeDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.swcdata_;
}

void CreateSwcNodeDataRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSwcNodeDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateSwcNodeDataRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcdata_ != nullptr) {
    delete _impl_.swcdata_;
  }
  _impl_.swcdata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSwcNodeDataRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.CreateSwcNodeDataRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcData = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcdata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSwcNodeDataRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateSwcNodeDataRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.CreateSwcNodeDataRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // .proto.SwcDataV1 SwcData = 4;
  if (this->_internal_has_swcdata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::swcdata(this),
        _Internal::swcdata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateSwcNodeDataRequest)
  return target;
}

size_t CreateSwcNodeDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateSwcNodeDataRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.SwcDataV1 SwcData = 4;
  if (this->_internal_has_swcdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcdata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSwcNodeDataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSwcNodeDataRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSwcNodeDataRequest::GetClassData() const { return &_class_data_; }


void CreateSwcNodeDataRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSwcNodeDataRequest*>(&to_msg);
  auto& from = static_cast<const CreateSwcNodeDataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateSwcNodeDataRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_swcdata()) {
    _this->_internal_mutable_swcdata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcdata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSwcNodeDataRequest::CopyFrom(const CreateSwcNodeDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateSwcNodeDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSwcNodeDataRequest::IsInitialized() const {
  return true;
}

void CreateSwcNodeDataRequest::InternalSwap(CreateSwcNodeDataRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSwcNodeDataRequest, _impl_.swcdata_)
      + sizeof(CreateSwcNodeDataRequest::_impl_.swcdata_)
      - PROTOBUF_FIELD_OFFSET(CreateSwcNodeDataRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSwcNodeDataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[27]);
}

// ===================================================================

class DeleteSwcNodeDataRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const DeleteSwcNodeDataRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const DeleteSwcNodeDataRequest* msg);
  static const ::proto::SwcDataV1& swcdata(const DeleteSwcNodeDataRequest* msg);
};

const ::proto::RequestMetaInfoV1&
DeleteSwcNodeDataRequest::_Internal::metainfo(const DeleteSwcNodeDataRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
DeleteSwcNodeDataRequest::_Internal::userverifyinfo(const DeleteSwcNodeDataRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::SwcDataV1&
DeleteSwcNodeDataRequest::_Internal::swcdata(const DeleteSwcNodeDataRequest* msg) {
  return *msg->_impl_.swcdata_;
}
void DeleteSwcNodeDataRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void DeleteSwcNodeDataRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void DeleteSwcNodeDataRequest::clear_swcdata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcdata_ != nullptr) {
    delete _impl_.swcdata_;
  }
  _impl_.swcdata_ = nullptr;
}
DeleteSwcNodeDataRequest::DeleteSwcNodeDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteSwcNodeDataRequest)
}
DeleteSwcNodeDataRequest::DeleteSwcNodeDataRequest(const DeleteSwcNodeDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteSwcNodeDataRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcdata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_swcdata()) {
    _this->_impl_.swcdata_ = new ::proto::SwcDataV1(*from._impl_.swcdata_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteSwcNodeDataRequest)
}

inline void DeleteSwcNodeDataRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcdata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteSwcNodeDataRequest::~DeleteSwcNodeDataRequest() {
  // @@protoc_insertion_point(destructor:proto.DeleteSwcNodeDataRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteSwcNodeDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.swcdata_;
}

void DeleteSwcNodeDataRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteSwcNodeDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteSwcNodeDataRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcdata_ != nullptr) {
    delete _impl_.swcdata_;
  }
  _impl_.swcdata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSwcNodeDataRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteSwcNodeDataRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcData = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcdata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSwcNodeDataRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteSwcNodeDataRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteSwcNodeDataRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // .proto.SwcDataV1 SwcData = 4;
  if (this->_internal_has_swcdata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::swcdata(this),
        _Internal::swcdata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteSwcNodeDataRequest)
  return target;
}

size_t DeleteSwcNodeDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteSwcNodeDataRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.SwcDataV1 SwcData = 4;
  if (this->_internal_has_swcdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcdata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSwcNodeDataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteSwcNodeDataRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSwcNodeDataRequest::GetClassData() const { return &_class_data_; }


void DeleteSwcNodeDataRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteSwcNodeDataRequest*>(&to_msg);
  auto& from = static_cast<const DeleteSwcNodeDataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteSwcNodeDataRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_swcdata()) {
    _this->_internal_mutable_swcdata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcdata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSwcNodeDataRequest::CopyFrom(const DeleteSwcNodeDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteSwcNodeDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSwcNodeDataRequest::IsInitialized() const {
  return true;
}

void DeleteSwcNodeDataRequest::InternalSwap(DeleteSwcNodeDataRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteSwcNodeDataRequest, _impl_.swcdata_)
      + sizeof(DeleteSwcNodeDataRequest::_impl_.swcdata_)
      - PROTOBUF_FIELD_OFFSET(DeleteSwcNodeDataRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSwcNodeDataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[28]);
}

// ===================================================================

class UpdateSwcNodeDataRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const UpdateSwcNodeDataRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const UpdateSwcNodeDataRequest* msg);
  static const ::proto::SwcDataV1& swcdata(const UpdateSwcNodeDataRequest* msg);
};

const ::proto::RequestMetaInfoV1&
UpdateSwcNodeDataRequest::_Internal::metainfo(const UpdateSwcNodeDataRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
UpdateSwcNodeDataRequest::_Internal::userverifyinfo(const UpdateSwcNodeDataRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::SwcDataV1&
UpdateSwcNodeDataRequest::_Internal::swcdata(const UpdateSwcNodeDataRequest* msg) {
  return *msg->_impl_.swcdata_;
}
void UpdateSwcNodeDataRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UpdateSwcNodeDataRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void UpdateSwcNodeDataRequest::clear_swcdata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcdata_ != nullptr) {
    delete _impl_.swcdata_;
  }
  _impl_.swcdata_ = nullptr;
}
UpdateSwcNodeDataRequest::UpdateSwcNodeDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateSwcNodeDataRequest)
}
UpdateSwcNodeDataRequest::UpdateSwcNodeDataRequest(const UpdateSwcNodeDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateSwcNodeDataRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcdata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_swcdata()) {
    _this->_impl_.swcdata_ = new ::proto::SwcDataV1(*from._impl_.swcdata_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateSwcNodeDataRequest)
}

inline void UpdateSwcNodeDataRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcdata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateSwcNodeDataRequest::~UpdateSwcNodeDataRequest() {
  // @@protoc_insertion_point(destructor:proto.UpdateSwcNodeDataRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateSwcNodeDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.swcdata_;
}

void UpdateSwcNodeDataRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateSwcNodeDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateSwcNodeDataRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcdata_ != nullptr) {
    delete _impl_.swcdata_;
  }
  _impl_.swcdata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSwcNodeDataRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UpdateSwcNodeDataRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcData = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcdata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSwcNodeDataRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateSwcNodeDataRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UpdateSwcNodeDataRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // .proto.SwcDataV1 SwcData = 4;
  if (this->_internal_has_swcdata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::swcdata(this),
        _Internal::swcdata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateSwcNodeDataRequest)
  return target;
}

size_t UpdateSwcNodeDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateSwcNodeDataRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.SwcDataV1 SwcData = 4;
  if (this->_internal_has_swcdata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcdata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSwcNodeDataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateSwcNodeDataRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSwcNodeDataRequest::GetClassData() const { return &_class_data_; }


void UpdateSwcNodeDataRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateSwcNodeDataRequest*>(&to_msg);
  auto& from = static_cast<const UpdateSwcNodeDataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateSwcNodeDataRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_swcdata()) {
    _this->_internal_mutable_swcdata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcdata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSwcNodeDataRequest::CopyFrom(const UpdateSwcNodeDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateSwcNodeDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSwcNodeDataRequest::IsInitialized() const {
  return true;
}

void UpdateSwcNodeDataRequest::InternalSwap(UpdateSwcNodeDataRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSwcNodeDataRequest, _impl_.swcdata_)
      + sizeof(UpdateSwcNodeDataRequest::_impl_.swcdata_)
      - PROTOBUF_FIELD_OFFSET(UpdateSwcNodeDataRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSwcNodeDataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[29]);
}

// ===================================================================

class GetSwcNodeDataRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetSwcNodeDataRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetSwcNodeDataRequest* msg);
  static const ::proto::SwcDataV1& swcnodedata(const GetSwcNodeDataRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetSwcNodeDataRequest::_Internal::metainfo(const GetSwcNodeDataRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetSwcNodeDataRequest::_Internal::userverifyinfo(const GetSwcNodeDataRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::SwcDataV1&
GetSwcNodeDataRequest::_Internal::swcnodedata(const GetSwcNodeDataRequest* msg) {
  return *msg->_impl_.swcnodedata_;
}
void GetSwcNodeDataRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSwcNodeDataRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void GetSwcNodeDataRequest::clear_swcnodedata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
}
GetSwcNodeDataRequest::GetSwcNodeDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcNodeDataRequest)
}
GetSwcNodeDataRequest::GetSwcNodeDataRequest(const GetSwcNodeDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcNodeDataRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcnodedata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_swcnodedata()) {
    _this->_impl_.swcnodedata_ = new ::proto::SwcDataV1(*from._impl_.swcnodedata_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcNodeDataRequest)
}

inline void GetSwcNodeDataRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcnodedata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSwcNodeDataRequest::~GetSwcNodeDataRequest() {
  // @@protoc_insertion_point(destructor:proto.GetSwcNodeDataRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcNodeDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.swcnodedata_;
}

void GetSwcNodeDataRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcNodeDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcNodeDataRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcNodeDataRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcNodeDataRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcNodeData = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcnodedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcNodeDataRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcNodeDataRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcNodeDataRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // .proto.SwcDataV1 SwcNodeData = 4;
  if (this->_internal_has_swcnodedata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::swcnodedata(this),
        _Internal::swcnodedata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcNodeDataRequest)
  return target;
}

size_t GetSwcNodeDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcNodeDataRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.SwcDataV1 SwcNodeData = 4;
  if (this->_internal_has_swcnodedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcnodedata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcNodeDataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcNodeDataRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcNodeDataRequest::GetClassData() const { return &_class_data_; }


void GetSwcNodeDataRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcNodeDataRequest*>(&to_msg);
  auto& from = static_cast<const GetSwcNodeDataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcNodeDataRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_internal_mutable_swcnodedata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcnodedata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcNodeDataRequest::CopyFrom(const GetSwcNodeDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcNodeDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcNodeDataRequest::IsInitialized() const {
  return true;
}

void GetSwcNodeDataRequest::InternalSwap(GetSwcNodeDataRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcNodeDataRequest, _impl_.swcnodedata_)
      + sizeof(GetSwcNodeDataRequest::_impl_.swcnodedata_)
      - PROTOBUF_FIELD_OFFSET(GetSwcNodeDataRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcNodeDataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[30]);
}

// ===================================================================

class GetSwcFullNodeDataRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetSwcFullNodeDataRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetSwcFullNodeDataRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetSwcFullNodeDataRequest::_Internal::metainfo(const GetSwcFullNodeDataRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetSwcFullNodeDataRequest::_Internal::userverifyinfo(const GetSwcFullNodeDataRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetSwcFullNodeDataRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSwcFullNodeDataRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetSwcFullNodeDataRequest::GetSwcFullNodeDataRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcFullNodeDataRequest)
}
GetSwcFullNodeDataRequest::GetSwcFullNodeDataRequest(const GetSwcFullNodeDataRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcFullNodeDataRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcFullNodeDataRequest)
}

inline void GetSwcFullNodeDataRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSwcFullNodeDataRequest::~GetSwcFullNodeDataRequest() {
  // @@protoc_insertion_point(destructor:proto.GetSwcFullNodeDataRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcFullNodeDataRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetSwcFullNodeDataRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcFullNodeDataRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcFullNodeDataRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcFullNodeDataRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcFullNodeDataRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcFullNodeDataRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcFullNodeDataRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcFullNodeDataRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcFullNodeDataRequest)
  return target;
}

size_t GetSwcFullNodeDataRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcFullNodeDataRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcFullNodeDataRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcFullNodeDataRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcFullNodeDataRequest::GetClassData() const { return &_class_data_; }


void GetSwcFullNodeDataRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcFullNodeDataRequest*>(&to_msg);
  auto& from = static_cast<const GetSwcFullNodeDataRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcFullNodeDataRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcFullNodeDataRequest::CopyFrom(const GetSwcFullNodeDataRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcFullNodeDataRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcFullNodeDataRequest::IsInitialized() const {
  return true;
}

void GetSwcFullNodeDataRequest::InternalSwap(GetSwcFullNodeDataRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcFullNodeDataRequest, _impl_.userverifyinfo_)
      + sizeof(GetSwcFullNodeDataRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetSwcFullNodeDataRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcFullNodeDataRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[31]);
}

// ===================================================================

class GetSwcNodeDataListByTimeAndUserRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetSwcNodeDataListByTimeAndUserRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetSwcNodeDataListByTimeAndUserRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& starttime(const GetSwcNodeDataListByTimeAndUserRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& endtime(const GetSwcNodeDataListByTimeAndUserRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetSwcNodeDataListByTimeAndUserRequest::_Internal::metainfo(const GetSwcNodeDataListByTimeAndUserRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetSwcNodeDataListByTimeAndUserRequest::_Internal::userverifyinfo(const GetSwcNodeDataListByTimeAndUserRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
GetSwcNodeDataListByTimeAndUserRequest::_Internal::starttime(const GetSwcNodeDataListByTimeAndUserRequest* msg) {
  return *msg->_impl_.starttime_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
GetSwcNodeDataListByTimeAndUserRequest::_Internal::endtime(const GetSwcNodeDataListByTimeAndUserRequest* msg) {
  return *msg->_impl_.endtime_;
}
void GetSwcNodeDataListByTimeAndUserRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSwcNodeDataListByTimeAndUserRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void GetSwcNodeDataListByTimeAndUserRequest::clear_starttime() {
  if (GetArenaForAllocation() == nullptr && _impl_.starttime_ != nullptr) {
    delete _impl_.starttime_;
  }
  _impl_.starttime_ = nullptr;
}
void GetSwcNodeDataListByTimeAndUserRequest::clear_endtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.endtime_ != nullptr) {
    delete _impl_.endtime_;
  }
  _impl_.endtime_ = nullptr;
}
GetSwcNodeDataListByTimeAndUserRequest::GetSwcNodeDataListByTimeAndUserRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcNodeDataListByTimeAndUserRequest)
}
GetSwcNodeDataListByTimeAndUserRequest::GetSwcNodeDataListByTimeAndUserRequest(const GetSwcNodeDataListByTimeAndUserRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcNodeDataListByTimeAndUserRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.username_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.starttime_){nullptr}
    , decltype(_impl_.endtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_username().empty()) {
    _this->_impl_.username_.Set(from._internal_username(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_starttime()) {
    _this->_impl_.starttime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.starttime_);
  }
  if (from._internal_has_endtime()) {
    _this->_impl_.endtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.endtime_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcNodeDataListByTimeAndUserRequest)
}

inline void GetSwcNodeDataListByTimeAndUserRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.username_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.starttime_){nullptr}
    , decltype(_impl_.endtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.username_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.username_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSwcNodeDataListByTimeAndUserRequest::~GetSwcNodeDataListByTimeAndUserRequest() {
  // @@protoc_insertion_point(destructor:proto.GetSwcNodeDataListByTimeAndUserRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcNodeDataListByTimeAndUserRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  _impl_.username_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.starttime_;
  if (this != internal_default_instance()) delete _impl_.endtime_;
}

void GetSwcNodeDataListByTimeAndUserRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcNodeDataListByTimeAndUserRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcNodeDataListByTimeAndUserRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  _impl_.username_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.starttime_ != nullptr) {
    delete _impl_.starttime_;
  }
  _impl_.starttime_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.endtime_ != nullptr) {
    delete _impl_.endtime_;
  }
  _impl_.endtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcNodeDataListByTimeAndUserRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcNodeDataListByTimeAndUserRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp StartTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_starttime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp EndTime = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_endtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string UserName = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 50)) {
          auto str = _internal_mutable_username();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcNodeDataListByTimeAndUserRequest.UserName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcNodeDataListByTimeAndUserRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcNodeDataListByTimeAndUserRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcNodeDataListByTimeAndUserRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // .google.protobuf.Timestamp StartTime = 4;
  if (this->_internal_has_starttime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::starttime(this),
        _Internal::starttime(this).GetCachedSize(), target, stream);
  }

  // .google.protobuf.Timestamp EndTime = 5;
  if (this->_internal_has_endtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::endtime(this),
        _Internal::endtime(this).GetCachedSize(), target, stream);
  }

  // string UserName = 6;
  if (!this->_internal_username().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_username().data(), static_cast<int>(this->_internal_username().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcNodeDataListByTimeAndUserRequest.UserName");
    target = stream->WriteStringMaybeAliased(
        6, this->_internal_username(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcNodeDataListByTimeAndUserRequest)
  return target;
}

size_t GetSwcNodeDataListByTimeAndUserRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcNodeDataListByTimeAndUserRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // string UserName = 6;
  if (!this->_internal_username().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_username());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .google.protobuf.Timestamp StartTime = 4;
  if (this->_internal_has_starttime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.starttime_);
  }

  // .google.protobuf.Timestamp EndTime = 5;
  if (this->_internal_has_endtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.endtime_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcNodeDataListByTimeAndUserRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcNodeDataListByTimeAndUserRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcNodeDataListByTimeAndUserRequest::GetClassData() const { return &_class_data_; }


void GetSwcNodeDataListByTimeAndUserRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcNodeDataListByTimeAndUserRequest*>(&to_msg);
  auto& from = static_cast<const GetSwcNodeDataListByTimeAndUserRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcNodeDataListByTimeAndUserRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (!from._internal_username().empty()) {
    _this->_internal_set_username(from._internal_username());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_starttime()) {
    _this->_internal_mutable_starttime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_starttime());
  }
  if (from._internal_has_endtime()) {
    _this->_internal_mutable_endtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_endtime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcNodeDataListByTimeAndUserRequest::CopyFrom(const GetSwcNodeDataListByTimeAndUserRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcNodeDataListByTimeAndUserRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcNodeDataListByTimeAndUserRequest::IsInitialized() const {
  return true;
}

void GetSwcNodeDataListByTimeAndUserRequest::InternalSwap(GetSwcNodeDataListByTimeAndUserRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.username_, lhs_arena,
      &other->_impl_.username_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcNodeDataListByTimeAndUserRequest, _impl_.endtime_)
      + sizeof(GetSwcNodeDataListByTimeAndUserRequest::_impl_.endtime_)
      - PROTOBUF_FIELD_OFFSET(GetSwcNodeDataListByTimeAndUserRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcNodeDataListByTimeAndUserRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[32]);
}

// ===================================================================

class CreateDailyStatisticsRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const CreateDailyStatisticsRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const CreateDailyStatisticsRequest* msg);
  static const ::proto::DailyStatisticsMetaInfoV1& dailystatisticsinfo(const CreateDailyStatisticsRequest* msg);
};

const ::proto::RequestMetaInfoV1&
CreateDailyStatisticsRequest::_Internal::metainfo(const CreateDailyStatisticsRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
CreateDailyStatisticsRequest::_Internal::userverifyinfo(const CreateDailyStatisticsRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::DailyStatisticsMetaInfoV1&
CreateDailyStatisticsRequest::_Internal::dailystatisticsinfo(const CreateDailyStatisticsRequest* msg) {
  return *msg->_impl_.dailystatisticsinfo_;
}
void CreateDailyStatisticsRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void CreateDailyStatisticsRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void CreateDailyStatisticsRequest::clear_dailystatisticsinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
}
CreateDailyStatisticsRequest::CreateDailyStatisticsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateDailyStatisticsRequest)
}
CreateDailyStatisticsRequest::CreateDailyStatisticsRequest(const CreateDailyStatisticsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateDailyStatisticsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_impl_.dailystatisticsinfo_ = new ::proto::DailyStatisticsMetaInfoV1(*from._impl_.dailystatisticsinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateDailyStatisticsRequest)
}

inline void CreateDailyStatisticsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateDailyStatisticsRequest::~CreateDailyStatisticsRequest() {
  // @@protoc_insertion_point(destructor:proto.CreateDailyStatisticsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateDailyStatisticsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.dailystatisticsinfo_;
}

void CreateDailyStatisticsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateDailyStatisticsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateDailyStatisticsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDailyStatisticsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_dailystatisticsinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateDailyStatisticsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateDailyStatisticsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
  if (this->_internal_has_dailystatisticsinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::dailystatisticsinfo(this),
        _Internal::dailystatisticsinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateDailyStatisticsRequest)
  return target;
}

size_t CreateDailyStatisticsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateDailyStatisticsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
  if (this->_internal_has_dailystatisticsinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dailystatisticsinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateDailyStatisticsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateDailyStatisticsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateDailyStatisticsRequest::GetClassData() const { return &_class_data_; }


void CreateDailyStatisticsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateDailyStatisticsRequest*>(&to_msg);
  auto& from = static_cast<const CreateDailyStatisticsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateDailyStatisticsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_internal_mutable_dailystatisticsinfo()->::proto::DailyStatisticsMetaInfoV1::MergeFrom(
        from._internal_dailystatisticsinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDailyStatisticsRequest::CopyFrom(const CreateDailyStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateDailyStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDailyStatisticsRequest::IsInitialized() const {
  return true;
}

void CreateDailyStatisticsRequest::InternalSwap(CreateDailyStatisticsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateDailyStatisticsRequest, _impl_.dailystatisticsinfo_)
      + sizeof(CreateDailyStatisticsRequest::_impl_.dailystatisticsinfo_)
      - PROTOBUF_FIELD_OFFSET(CreateDailyStatisticsRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDailyStatisticsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[33]);
}

// ===================================================================

class DeleteDailyStatisticsRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const DeleteDailyStatisticsRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const DeleteDailyStatisticsRequest* msg);
};

const ::proto::RequestMetaInfoV1&
DeleteDailyStatisticsRequest::_Internal::metainfo(const DeleteDailyStatisticsRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
DeleteDailyStatisticsRequest::_Internal::userverifyinfo(const DeleteDailyStatisticsRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void DeleteDailyStatisticsRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void DeleteDailyStatisticsRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
DeleteDailyStatisticsRequest::DeleteDailyStatisticsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteDailyStatisticsRequest)
}
DeleteDailyStatisticsRequest::DeleteDailyStatisticsRequest(const DeleteDailyStatisticsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteDailyStatisticsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dailystatisticsname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.dailystatisticsname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dailystatisticsname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dailystatisticsname().empty()) {
    _this->_impl_.dailystatisticsname_.Set(from._internal_dailystatisticsname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteDailyStatisticsRequest)
}

inline void DeleteDailyStatisticsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dailystatisticsname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.dailystatisticsname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dailystatisticsname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteDailyStatisticsRequest::~DeleteDailyStatisticsRequest() {
  // @@protoc_insertion_point(destructor:proto.DeleteDailyStatisticsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteDailyStatisticsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dailystatisticsname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void DeleteDailyStatisticsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteDailyStatisticsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteDailyStatisticsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dailystatisticsname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteDailyStatisticsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string DailyStatisticsName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_dailystatisticsname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteDailyStatisticsRequest.DailyStatisticsName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteDailyStatisticsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteDailyStatisticsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string DailyStatisticsName = 3;
  if (!this->_internal_dailystatisticsname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dailystatisticsname().data(), static_cast<int>(this->_internal_dailystatisticsname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteDailyStatisticsRequest.DailyStatisticsName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dailystatisticsname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteDailyStatisticsRequest)
  return target;
}

size_t DeleteDailyStatisticsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteDailyStatisticsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string DailyStatisticsName = 3;
  if (!this->_internal_dailystatisticsname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dailystatisticsname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteDailyStatisticsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteDailyStatisticsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteDailyStatisticsRequest::GetClassData() const { return &_class_data_; }


void DeleteDailyStatisticsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteDailyStatisticsRequest*>(&to_msg);
  auto& from = static_cast<const DeleteDailyStatisticsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteDailyStatisticsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dailystatisticsname().empty()) {
    _this->_internal_set_dailystatisticsname(from._internal_dailystatisticsname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDailyStatisticsRequest::CopyFrom(const DeleteDailyStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteDailyStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDailyStatisticsRequest::IsInitialized() const {
  return true;
}

void DeleteDailyStatisticsRequest::InternalSwap(DeleteDailyStatisticsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dailystatisticsname_, lhs_arena,
      &other->_impl_.dailystatisticsname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteDailyStatisticsRequest, _impl_.userverifyinfo_)
      + sizeof(DeleteDailyStatisticsRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(DeleteDailyStatisticsRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteDailyStatisticsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[34]);
}

// ===================================================================

class UpdateDailyStatisticsRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const UpdateDailyStatisticsRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const UpdateDailyStatisticsRequest* msg);
  static const ::proto::DailyStatisticsMetaInfoV1& dailystatisticsinfo(const UpdateDailyStatisticsRequest* msg);
};

const ::proto::RequestMetaInfoV1&
UpdateDailyStatisticsRequest::_Internal::metainfo(const UpdateDailyStatisticsRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
UpdateDailyStatisticsRequest::_Internal::userverifyinfo(const UpdateDailyStatisticsRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::DailyStatisticsMetaInfoV1&
UpdateDailyStatisticsRequest::_Internal::dailystatisticsinfo(const UpdateDailyStatisticsRequest* msg) {
  return *msg->_impl_.dailystatisticsinfo_;
}
void UpdateDailyStatisticsRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UpdateDailyStatisticsRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void UpdateDailyStatisticsRequest::clear_dailystatisticsinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
}
UpdateDailyStatisticsRequest::UpdateDailyStatisticsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateDailyStatisticsRequest)
}
UpdateDailyStatisticsRequest::UpdateDailyStatisticsRequest(const UpdateDailyStatisticsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateDailyStatisticsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_impl_.dailystatisticsinfo_ = new ::proto::DailyStatisticsMetaInfoV1(*from._impl_.dailystatisticsinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateDailyStatisticsRequest)
}

inline void UpdateDailyStatisticsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateDailyStatisticsRequest::~UpdateDailyStatisticsRequest() {
  // @@protoc_insertion_point(destructor:proto.UpdateDailyStatisticsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateDailyStatisticsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.dailystatisticsinfo_;
}

void UpdateDailyStatisticsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateDailyStatisticsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateDailyStatisticsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateDailyStatisticsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_dailystatisticsinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateDailyStatisticsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateDailyStatisticsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
  if (this->_internal_has_dailystatisticsinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::dailystatisticsinfo(this),
        _Internal::dailystatisticsinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateDailyStatisticsRequest)
  return target;
}

size_t UpdateDailyStatisticsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateDailyStatisticsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 3;
  if (this->_internal_has_dailystatisticsinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dailystatisticsinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateDailyStatisticsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateDailyStatisticsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateDailyStatisticsRequest::GetClassData() const { return &_class_data_; }


void UpdateDailyStatisticsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateDailyStatisticsRequest*>(&to_msg);
  auto& from = static_cast<const UpdateDailyStatisticsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateDailyStatisticsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_internal_mutable_dailystatisticsinfo()->::proto::DailyStatisticsMetaInfoV1::MergeFrom(
        from._internal_dailystatisticsinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDailyStatisticsRequest::CopyFrom(const UpdateDailyStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateDailyStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDailyStatisticsRequest::IsInitialized() const {
  return true;
}

void UpdateDailyStatisticsRequest::InternalSwap(UpdateDailyStatisticsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateDailyStatisticsRequest, _impl_.dailystatisticsinfo_)
      + sizeof(UpdateDailyStatisticsRequest::_impl_.dailystatisticsinfo_)
      - PROTOBUF_FIELD_OFFSET(UpdateDailyStatisticsRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateDailyStatisticsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[35]);
}

// ===================================================================

class GetDailyStatisticsRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetDailyStatisticsRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetDailyStatisticsRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetDailyStatisticsRequest::_Internal::metainfo(const GetDailyStatisticsRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetDailyStatisticsRequest::_Internal::userverifyinfo(const GetDailyStatisticsRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetDailyStatisticsRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetDailyStatisticsRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetDailyStatisticsRequest::GetDailyStatisticsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetDailyStatisticsRequest)
}
GetDailyStatisticsRequest::GetDailyStatisticsRequest(const GetDailyStatisticsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetDailyStatisticsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dailystatisticsname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.dailystatisticsname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dailystatisticsname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_dailystatisticsname().empty()) {
    _this->_impl_.dailystatisticsname_.Set(from._internal_dailystatisticsname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetDailyStatisticsRequest)
}

inline void GetDailyStatisticsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dailystatisticsname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.dailystatisticsname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.dailystatisticsname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetDailyStatisticsRequest::~GetDailyStatisticsRequest() {
  // @@protoc_insertion_point(destructor:proto.GetDailyStatisticsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDailyStatisticsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dailystatisticsname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetDailyStatisticsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetDailyStatisticsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetDailyStatisticsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dailystatisticsname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDailyStatisticsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string DailyStatisticsName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_dailystatisticsname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetDailyStatisticsRequest.DailyStatisticsName"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDailyStatisticsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetDailyStatisticsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string DailyStatisticsName = 3;
  if (!this->_internal_dailystatisticsname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_dailystatisticsname().data(), static_cast<int>(this->_internal_dailystatisticsname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetDailyStatisticsRequest.DailyStatisticsName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_dailystatisticsname(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetDailyStatisticsRequest)
  return target;
}

size_t GetDailyStatisticsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetDailyStatisticsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string DailyStatisticsName = 3;
  if (!this->_internal_dailystatisticsname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_dailystatisticsname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDailyStatisticsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetDailyStatisticsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDailyStatisticsRequest::GetClassData() const { return &_class_data_; }


void GetDailyStatisticsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetDailyStatisticsRequest*>(&to_msg);
  auto& from = static_cast<const GetDailyStatisticsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetDailyStatisticsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_dailystatisticsname().empty()) {
    _this->_internal_set_dailystatisticsname(from._internal_dailystatisticsname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDailyStatisticsRequest::CopyFrom(const GetDailyStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetDailyStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDailyStatisticsRequest::IsInitialized() const {
  return true;
}

void GetDailyStatisticsRequest::InternalSwap(GetDailyStatisticsRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.dailystatisticsname_, lhs_arena,
      &other->_impl_.dailystatisticsname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDailyStatisticsRequest, _impl_.userverifyinfo_)
      + sizeof(GetDailyStatisticsRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetDailyStatisticsRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDailyStatisticsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[36]);
}

// ===================================================================

class GetAllDailyStatisticsRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetAllDailyStatisticsRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetAllDailyStatisticsRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetAllDailyStatisticsRequest::_Internal::metainfo(const GetAllDailyStatisticsRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetAllDailyStatisticsRequest::_Internal::userverifyinfo(const GetAllDailyStatisticsRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetAllDailyStatisticsRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllDailyStatisticsRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetAllDailyStatisticsRequest::GetAllDailyStatisticsRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllDailyStatisticsRequest)
}
GetAllDailyStatisticsRequest::GetAllDailyStatisticsRequest(const GetAllDailyStatisticsRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllDailyStatisticsRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllDailyStatisticsRequest)
}

inline void GetAllDailyStatisticsRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllDailyStatisticsRequest::~GetAllDailyStatisticsRequest() {
  // @@protoc_insertion_point(destructor:proto.GetAllDailyStatisticsRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllDailyStatisticsRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetAllDailyStatisticsRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllDailyStatisticsRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllDailyStatisticsRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllDailyStatisticsRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllDailyStatisticsRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllDailyStatisticsRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllDailyStatisticsRequest)
  return target;
}

size_t GetAllDailyStatisticsRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllDailyStatisticsRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllDailyStatisticsRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllDailyStatisticsRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllDailyStatisticsRequest::GetClassData() const { return &_class_data_; }


void GetAllDailyStatisticsRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllDailyStatisticsRequest*>(&to_msg);
  auto& from = static_cast<const GetAllDailyStatisticsRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllDailyStatisticsRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllDailyStatisticsRequest::CopyFrom(const GetAllDailyStatisticsRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllDailyStatisticsRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllDailyStatisticsRequest::IsInitialized() const {
  return true;
}

void GetAllDailyStatisticsRequest::InternalSwap(GetAllDailyStatisticsRequest* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetAllDailyStatisticsRequest, _impl_.userverifyinfo_)
      + sizeof(GetAllDailyStatisticsRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetAllDailyStatisticsRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllDailyStatisticsRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[37]);
}

// ===================================================================

class CreateSwcAttachmentAnoRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const CreateSwcAttachmentAnoRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const CreateSwcAttachmentAnoRequest* msg);
  static const ::proto::SwcAttachmentAnoV1& swcattachmentano(const CreateSwcAttachmentAnoRequest* msg);
};

const ::proto::RequestMetaInfoV1&
CreateSwcAttachmentAnoRequest::_Internal::metainfo(const CreateSwcAttachmentAnoRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
CreateSwcAttachmentAnoRequest::_Internal::userverifyinfo(const CreateSwcAttachmentAnoRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::SwcAttachmentAnoV1&
CreateSwcAttachmentAnoRequest::_Internal::swcattachmentano(const CreateSwcAttachmentAnoRequest* msg) {
  return *msg->_impl_.swcattachmentano_;
}
void CreateSwcAttachmentAnoRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void CreateSwcAttachmentAnoRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void CreateSwcAttachmentAnoRequest::clear_swcattachmentano() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcattachmentano_ != nullptr) {
    delete _impl_.swcattachmentano_;
  }
  _impl_.swcattachmentano_ = nullptr;
}
CreateSwcAttachmentAnoRequest::CreateSwcAttachmentAnoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateSwcAttachmentAnoRequest)
}
CreateSwcAttachmentAnoRequest::CreateSwcAttachmentAnoRequest(const CreateSwcAttachmentAnoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSwcAttachmentAnoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcattachmentano_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_swcattachmentano()) {
    _this->_impl_.swcattachmentano_ = new ::proto::SwcAttachmentAnoV1(*from._impl_.swcattachmentano_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateSwcAttachmentAnoRequest)
}

inline void CreateSwcAttachmentAnoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.swcattachmentano_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateSwcAttachmentAnoRequest::~CreateSwcAttachmentAnoRequest() {
  // @@protoc_insertion_point(destructor:proto.CreateSwcAttachmentAnoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSwcAttachmentAnoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.swcattachmentano_;
}

void CreateSwcAttachmentAnoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSwcAttachmentAnoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateSwcAttachmentAnoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcattachmentano_ != nullptr) {
    delete _impl_.swcattachmentano_;
  }
  _impl_.swcattachmentano_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSwcAttachmentAnoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.CreateSwcAttachmentAnoRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcAttachmentAnoV1 SwcAttachmentAno = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcattachmentano(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSwcAttachmentAnoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateSwcAttachmentAnoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.CreateSwcAttachmentAnoRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // .proto.SwcAttachmentAnoV1 SwcAttachmentAno = 4;
  if (this->_internal_has_swcattachmentano()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::swcattachmentano(this),
        _Internal::swcattachmentano(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateSwcAttachmentAnoRequest)
  return target;
}

size_t CreateSwcAttachmentAnoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateSwcAttachmentAnoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.SwcAttachmentAnoV1 SwcAttachmentAno = 4;
  if (this->_internal_has_swcattachmentano()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcattachmentano_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSwcAttachmentAnoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSwcAttachmentAnoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSwcAttachmentAnoRequest::GetClassData() const { return &_class_data_; }


void CreateSwcAttachmentAnoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSwcAttachmentAnoRequest*>(&to_msg);
  auto& from = static_cast<const CreateSwcAttachmentAnoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateSwcAttachmentAnoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_swcattachmentano()) {
    _this->_internal_mutable_swcattachmentano()->::proto::SwcAttachmentAnoV1::MergeFrom(
        from._internal_swcattachmentano());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSwcAttachmentAnoRequest::CopyFrom(const CreateSwcAttachmentAnoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateSwcAttachmentAnoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSwcAttachmentAnoRequest::IsInitialized() const {
  return true;
}

void CreateSwcAttachmentAnoRequest::InternalSwap(CreateSwcAttachmentAnoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSwcAttachmentAnoRequest, _impl_.swcattachmentano_)
      + sizeof(CreateSwcAttachmentAnoRequest::_impl_.swcattachmentano_)
      - PROTOBUF_FIELD_OFFSET(CreateSwcAttachmentAnoRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSwcAttachmentAnoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[38]);
}

// ===================================================================

class DeleteSwcAttachmentAnoRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const DeleteSwcAttachmentAnoRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const DeleteSwcAttachmentAnoRequest* msg);
};

const ::proto::RequestMetaInfoV1&
DeleteSwcAttachmentAnoRequest::_Internal::metainfo(const DeleteSwcAttachmentAnoRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
DeleteSwcAttachmentAnoRequest::_Internal::userverifyinfo(const DeleteSwcAttachmentAnoRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void DeleteSwcAttachmentAnoRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void DeleteSwcAttachmentAnoRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
DeleteSwcAttachmentAnoRequest::DeleteSwcAttachmentAnoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteSwcAttachmentAnoRequest)
}
DeleteSwcAttachmentAnoRequest::DeleteSwcAttachmentAnoRequest(const DeleteSwcAttachmentAnoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteSwcAttachmentAnoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.anoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.anoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.anoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_anoattachmentuuid().empty()) {
    _this->_impl_.anoattachmentuuid_.Set(from._internal_anoattachmentuuid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteSwcAttachmentAnoRequest)
}

inline void DeleteSwcAttachmentAnoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.anoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.anoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.anoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteSwcAttachmentAnoRequest::~DeleteSwcAttachmentAnoRequest() {
  // @@protoc_insertion_point(destructor:proto.DeleteSwcAttachmentAnoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteSwcAttachmentAnoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  _impl_.anoattachmentuuid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void DeleteSwcAttachmentAnoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteSwcAttachmentAnoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteSwcAttachmentAnoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  _impl_.anoattachmentuuid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSwcAttachmentAnoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteSwcAttachmentAnoRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // string AnoAttachmentUuid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_anoattachmentuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteSwcAttachmentAnoRequest.AnoAttachmentUuid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSwcAttachmentAnoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteSwcAttachmentAnoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteSwcAttachmentAnoRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // string AnoAttachmentUuid = 4;
  if (!this->_internal_anoattachmentuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_anoattachmentuuid().data(), static_cast<int>(this->_internal_anoattachmentuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteSwcAttachmentAnoRequest.AnoAttachmentUuid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_anoattachmentuuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteSwcAttachmentAnoRequest)
  return target;
}

size_t DeleteSwcAttachmentAnoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteSwcAttachmentAnoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // string AnoAttachmentUuid = 4;
  if (!this->_internal_anoattachmentuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_anoattachmentuuid());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSwcAttachmentAnoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteSwcAttachmentAnoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSwcAttachmentAnoRequest::GetClassData() const { return &_class_data_; }


void DeleteSwcAttachmentAnoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteSwcAttachmentAnoRequest*>(&to_msg);
  auto& from = static_cast<const DeleteSwcAttachmentAnoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteSwcAttachmentAnoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (!from._internal_anoattachmentuuid().empty()) {
    _this->_internal_set_anoattachmentuuid(from._internal_anoattachmentuuid());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSwcAttachmentAnoRequest::CopyFrom(const DeleteSwcAttachmentAnoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteSwcAttachmentAnoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSwcAttachmentAnoRequest::IsInitialized() const {
  return true;
}

void DeleteSwcAttachmentAnoRequest::InternalSwap(DeleteSwcAttachmentAnoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.anoattachmentuuid_, lhs_arena,
      &other->_impl_.anoattachmentuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteSwcAttachmentAnoRequest, _impl_.userverifyinfo_)
      + sizeof(DeleteSwcAttachmentAnoRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(DeleteSwcAttachmentAnoRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSwcAttachmentAnoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[39]);
}

// ===================================================================

class UpdateSwcAttachmentAnoRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const UpdateSwcAttachmentAnoRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const UpdateSwcAttachmentAnoRequest* msg);
  static const ::proto::SwcAttachmentAnoV1& newswcattachmentano(const UpdateSwcAttachmentAnoRequest* msg);
};

const ::proto::RequestMetaInfoV1&
UpdateSwcAttachmentAnoRequest::_Internal::metainfo(const UpdateSwcAttachmentAnoRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
UpdateSwcAttachmentAnoRequest::_Internal::userverifyinfo(const UpdateSwcAttachmentAnoRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::proto::SwcAttachmentAnoV1&
UpdateSwcAttachmentAnoRequest::_Internal::newswcattachmentano(const UpdateSwcAttachmentAnoRequest* msg) {
  return *msg->_impl_.newswcattachmentano_;
}
void UpdateSwcAttachmentAnoRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UpdateSwcAttachmentAnoRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void UpdateSwcAttachmentAnoRequest::clear_newswcattachmentano() {
  if (GetArenaForAllocation() == nullptr && _impl_.newswcattachmentano_ != nullptr) {
    delete _impl_.newswcattachmentano_;
  }
  _impl_.newswcattachmentano_ = nullptr;
}
UpdateSwcAttachmentAnoRequest::UpdateSwcAttachmentAnoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateSwcAttachmentAnoRequest)
}
UpdateSwcAttachmentAnoRequest::UpdateSwcAttachmentAnoRequest(const UpdateSwcAttachmentAnoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateSwcAttachmentAnoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.anoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.newswcattachmentano_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.anoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.anoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_anoattachmentuuid().empty()) {
    _this->_impl_.anoattachmentuuid_.Set(from._internal_anoattachmentuuid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_newswcattachmentano()) {
    _this->_impl_.newswcattachmentano_ = new ::proto::SwcAttachmentAnoV1(*from._impl_.newswcattachmentano_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateSwcAttachmentAnoRequest)
}

inline void UpdateSwcAttachmentAnoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.anoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.newswcattachmentano_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.anoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.anoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateSwcAttachmentAnoRequest::~UpdateSwcAttachmentAnoRequest() {
  // @@protoc_insertion_point(destructor:proto.UpdateSwcAttachmentAnoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateSwcAttachmentAnoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  _impl_.anoattachmentuuid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.newswcattachmentano_;
}

void UpdateSwcAttachmentAnoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateSwcAttachmentAnoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateSwcAttachmentAnoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  _impl_.anoattachmentuuid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.newswcattachmentano_ != nullptr) {
    delete _impl_.newswcattachmentano_;
  }
  _impl_.newswcattachmentano_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSwcAttachmentAnoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UpdateSwcAttachmentAnoRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // string AnoAttachmentUuid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_anoattachmentuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UpdateSwcAttachmentAnoRequest.AnoAttachmentUuid"));
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcAttachmentAnoV1 NewSwcAttachmentAno = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr = ctx->ParseMessage(_internal_mutable_newswcattachmentano(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSwcAttachmentAnoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateSwcAttachmentAnoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UpdateSwcAttachmentAnoRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // string AnoAttachmentUuid = 4;
  if (!this->_internal_anoattachmentuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_anoattachmentuuid().data(), static_cast<int>(this->_internal_anoattachmentuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UpdateSwcAttachmentAnoRequest.AnoAttachmentUuid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_anoattachmentuuid(), target);
  }

  // .proto.SwcAttachmentAnoV1 NewSwcAttachmentAno = 5;
  if (this->_internal_has_newswcattachmentano()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(5, _Internal::newswcattachmentano(this),
        _Internal::newswcattachmentano(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateSwcAttachmentAnoRequest)
  return target;
}

size_t UpdateSwcAttachmentAnoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateSwcAttachmentAnoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // string AnoAttachmentUuid = 4;
  if (!this->_internal_anoattachmentuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_anoattachmentuuid());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .proto.SwcAttachmentAnoV1 NewSwcAttachmentAno = 5;
  if (this->_internal_has_newswcattachmentano()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.newswcattachmentano_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSwcAttachmentAnoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateSwcAttachmentAnoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSwcAttachmentAnoRequest::GetClassData() const { return &_class_data_; }


void UpdateSwcAttachmentAnoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateSwcAttachmentAnoRequest*>(&to_msg);
  auto& from = static_cast<const UpdateSwcAttachmentAnoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateSwcAttachmentAnoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (!from._internal_anoattachmentuuid().empty()) {
    _this->_internal_set_anoattachmentuuid(from._internal_anoattachmentuuid());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_newswcattachmentano()) {
    _this->_internal_mutable_newswcattachmentano()->::proto::SwcAttachmentAnoV1::MergeFrom(
        from._internal_newswcattachmentano());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSwcAttachmentAnoRequest::CopyFrom(const UpdateSwcAttachmentAnoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateSwcAttachmentAnoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSwcAttachmentAnoRequest::IsInitialized() const {
  return true;
}

void UpdateSwcAttachmentAnoRequest::InternalSwap(UpdateSwcAttachmentAnoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.anoattachmentuuid_, lhs_arena,
      &other->_impl_.anoattachmentuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSwcAttachmentAnoRequest, _impl_.newswcattachmentano_)
      + sizeof(UpdateSwcAttachmentAnoRequest::_impl_.newswcattachmentano_)
      - PROTOBUF_FIELD_OFFSET(UpdateSwcAttachmentAnoRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSwcAttachmentAnoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[40]);
}

// ===================================================================

class GetSwcAttachmentAnoRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetSwcAttachmentAnoRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetSwcAttachmentAnoRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetSwcAttachmentAnoRequest::_Internal::metainfo(const GetSwcAttachmentAnoRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetSwcAttachmentAnoRequest::_Internal::userverifyinfo(const GetSwcAttachmentAnoRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetSwcAttachmentAnoRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSwcAttachmentAnoRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetSwcAttachmentAnoRequest::GetSwcAttachmentAnoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcAttachmentAnoRequest)
}
GetSwcAttachmentAnoRequest::GetSwcAttachmentAnoRequest(const GetSwcAttachmentAnoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcAttachmentAnoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.anoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.anoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.anoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_anoattachmentuuid().empty()) {
    _this->_impl_.anoattachmentuuid_.Set(from._internal_anoattachmentuuid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcAttachmentAnoRequest)
}

inline void GetSwcAttachmentAnoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.anoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.anoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.anoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSwcAttachmentAnoRequest::~GetSwcAttachmentAnoRequest() {
  // @@protoc_insertion_point(destructor:proto.GetSwcAttachmentAnoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcAttachmentAnoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  _impl_.anoattachmentuuid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetSwcAttachmentAnoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcAttachmentAnoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcAttachmentAnoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  _impl_.anoattachmentuuid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcAttachmentAnoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcAttachmentAnoRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // string AnoAttachmentUuid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_anoattachmentuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcAttachmentAnoRequest.AnoAttachmentUuid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcAttachmentAnoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcAttachmentAnoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcAttachmentAnoRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // string AnoAttachmentUuid = 4;
  if (!this->_internal_anoattachmentuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_anoattachmentuuid().data(), static_cast<int>(this->_internal_anoattachmentuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcAttachmentAnoRequest.AnoAttachmentUuid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_anoattachmentuuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcAttachmentAnoRequest)
  return target;
}

size_t GetSwcAttachmentAnoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcAttachmentAnoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // string AnoAttachmentUuid = 4;
  if (!this->_internal_anoattachmentuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_anoattachmentuuid());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcAttachmentAnoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcAttachmentAnoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcAttachmentAnoRequest::GetClassData() const { return &_class_data_; }


void GetSwcAttachmentAnoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcAttachmentAnoRequest*>(&to_msg);
  auto& from = static_cast<const GetSwcAttachmentAnoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcAttachmentAnoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (!from._internal_anoattachmentuuid().empty()) {
    _this->_internal_set_anoattachmentuuid(from._internal_anoattachmentuuid());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcAttachmentAnoRequest::CopyFrom(const GetSwcAttachmentAnoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcAttachmentAnoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcAttachmentAnoRequest::IsInitialized() const {
  return true;
}

void GetSwcAttachmentAnoRequest::InternalSwap(GetSwcAttachmentAnoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.anoattachmentuuid_, lhs_arena,
      &other->_impl_.anoattachmentuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcAttachmentAnoRequest, _impl_.userverifyinfo_)
      + sizeof(GetSwcAttachmentAnoRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetSwcAttachmentAnoRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcAttachmentAnoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[41]);
}

// ===================================================================

class CreateSwcAttachmentApoRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const CreateSwcAttachmentApoRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const CreateSwcAttachmentApoRequest* msg);
};

const ::proto::RequestMetaInfoV1&
CreateSwcAttachmentApoRequest::_Internal::metainfo(const CreateSwcAttachmentApoRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
CreateSwcAttachmentApoRequest::_Internal::userverifyinfo(const CreateSwcAttachmentApoRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void CreateSwcAttachmentApoRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void CreateSwcAttachmentApoRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void CreateSwcAttachmentApoRequest::clear_swcattachmentapo() {
  _impl_.swcattachmentapo_.Clear();
}
CreateSwcAttachmentApoRequest::CreateSwcAttachmentApoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateSwcAttachmentApoRequest)
}
CreateSwcAttachmentApoRequest::CreateSwcAttachmentApoRequest(const CreateSwcAttachmentApoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSwcAttachmentApoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcattachmentapo_){from._impl_.swcattachmentapo_}
    , decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateSwcAttachmentApoRequest)
}

inline void CreateSwcAttachmentApoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcattachmentapo_){arena}
    , decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateSwcAttachmentApoRequest::~CreateSwcAttachmentApoRequest() {
  // @@protoc_insertion_point(destructor:proto.CreateSwcAttachmentApoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSwcAttachmentApoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcattachmentapo_.~RepeatedPtrField();
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void CreateSwcAttachmentApoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSwcAttachmentApoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateSwcAttachmentApoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcattachmentapo_.Clear();
  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSwcAttachmentApoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.CreateSwcAttachmentApoRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.SwcAttachmentApoV1 SwcAttachmentApo = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_swcattachmentapo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<34>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSwcAttachmentApoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateSwcAttachmentApoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.CreateSwcAttachmentApoRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // repeated .proto.SwcAttachmentApoV1 SwcAttachmentApo = 4;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_swcattachmentapo_size()); i < n; i++) {
    const auto& repfield = this->_internal_swcattachmentapo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(4, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateSwcAttachmentApoRequest)
  return target;
}

size_t CreateSwcAttachmentApoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateSwcAttachmentApoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.SwcAttachmentApoV1 SwcAttachmentApo = 4;
  total_size += 1UL * this->_internal_swcattachmentapo_size();
  for (const auto& msg : this->_impl_.swcattachmentapo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSwcAttachmentApoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSwcAttachmentApoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSwcAttachmentApoRequest::GetClassData() const { return &_class_data_; }


void CreateSwcAttachmentApoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSwcAttachmentApoRequest*>(&to_msg);
  auto& from = static_cast<const CreateSwcAttachmentApoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateSwcAttachmentApoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swcattachmentapo_.MergeFrom(from._impl_.swcattachmentapo_);
  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSwcAttachmentApoRequest::CopyFrom(const CreateSwcAttachmentApoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateSwcAttachmentApoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSwcAttachmentApoRequest::IsInitialized() const {
  return true;
}

void CreateSwcAttachmentApoRequest::InternalSwap(CreateSwcAttachmentApoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swcattachmentapo_.InternalSwap(&other->_impl_.swcattachmentapo_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSwcAttachmentApoRequest, _impl_.userverifyinfo_)
      + sizeof(CreateSwcAttachmentApoRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(CreateSwcAttachmentApoRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSwcAttachmentApoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[42]);
}

// ===================================================================

class DeleteSwcAttachmentApoRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const DeleteSwcAttachmentApoRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const DeleteSwcAttachmentApoRequest* msg);
};

const ::proto::RequestMetaInfoV1&
DeleteSwcAttachmentApoRequest::_Internal::metainfo(const DeleteSwcAttachmentApoRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
DeleteSwcAttachmentApoRequest::_Internal::userverifyinfo(const DeleteSwcAttachmentApoRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void DeleteSwcAttachmentApoRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void DeleteSwcAttachmentApoRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
DeleteSwcAttachmentApoRequest::DeleteSwcAttachmentApoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteSwcAttachmentApoRequest)
}
DeleteSwcAttachmentApoRequest::DeleteSwcAttachmentApoRequest(const DeleteSwcAttachmentApoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteSwcAttachmentApoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.apoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.apoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_apoattachmentuuid().empty()) {
    _this->_impl_.apoattachmentuuid_.Set(from._internal_apoattachmentuuid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteSwcAttachmentApoRequest)
}

inline void DeleteSwcAttachmentApoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.apoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.apoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

DeleteSwcAttachmentApoRequest::~DeleteSwcAttachmentApoRequest() {
  // @@protoc_insertion_point(destructor:proto.DeleteSwcAttachmentApoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteSwcAttachmentApoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  _impl_.apoattachmentuuid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void DeleteSwcAttachmentApoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteSwcAttachmentApoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteSwcAttachmentApoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  _impl_.apoattachmentuuid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSwcAttachmentApoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteSwcAttachmentApoRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // string ApoAttachmentUuid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_apoattachmentuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.DeleteSwcAttachmentApoRequest.ApoAttachmentUuid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSwcAttachmentApoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteSwcAttachmentApoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteSwcAttachmentApoRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // string ApoAttachmentUuid = 4;
  if (!this->_internal_apoattachmentuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_apoattachmentuuid().data(), static_cast<int>(this->_internal_apoattachmentuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.DeleteSwcAttachmentApoRequest.ApoAttachmentUuid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_apoattachmentuuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteSwcAttachmentApoRequest)
  return target;
}

size_t DeleteSwcAttachmentApoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteSwcAttachmentApoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // string ApoAttachmentUuid = 4;
  if (!this->_internal_apoattachmentuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_apoattachmentuuid());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSwcAttachmentApoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteSwcAttachmentApoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSwcAttachmentApoRequest::GetClassData() const { return &_class_data_; }


void DeleteSwcAttachmentApoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteSwcAttachmentApoRequest*>(&to_msg);
  auto& from = static_cast<const DeleteSwcAttachmentApoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteSwcAttachmentApoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (!from._internal_apoattachmentuuid().empty()) {
    _this->_internal_set_apoattachmentuuid(from._internal_apoattachmentuuid());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSwcAttachmentApoRequest::CopyFrom(const DeleteSwcAttachmentApoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteSwcAttachmentApoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSwcAttachmentApoRequest::IsInitialized() const {
  return true;
}

void DeleteSwcAttachmentApoRequest::InternalSwap(DeleteSwcAttachmentApoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.apoattachmentuuid_, lhs_arena,
      &other->_impl_.apoattachmentuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteSwcAttachmentApoRequest, _impl_.userverifyinfo_)
      + sizeof(DeleteSwcAttachmentApoRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(DeleteSwcAttachmentApoRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSwcAttachmentApoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[43]);
}

// ===================================================================

class UpdateSwcAttachmentApoRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const UpdateSwcAttachmentApoRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const UpdateSwcAttachmentApoRequest* msg);
};

const ::proto::RequestMetaInfoV1&
UpdateSwcAttachmentApoRequest::_Internal::metainfo(const UpdateSwcAttachmentApoRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
UpdateSwcAttachmentApoRequest::_Internal::userverifyinfo(const UpdateSwcAttachmentApoRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void UpdateSwcAttachmentApoRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UpdateSwcAttachmentApoRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void UpdateSwcAttachmentApoRequest::clear_newswcattachmentapo() {
  _impl_.newswcattachmentapo_.Clear();
}
UpdateSwcAttachmentApoRequest::UpdateSwcAttachmentApoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateSwcAttachmentApoRequest)
}
UpdateSwcAttachmentApoRequest::UpdateSwcAttachmentApoRequest(const UpdateSwcAttachmentApoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateSwcAttachmentApoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.newswcattachmentapo_){from._impl_.newswcattachmentapo_}
    , decltype(_impl_.swcname_){}
    , decltype(_impl_.apoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.apoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_apoattachmentuuid().empty()) {
    _this->_impl_.apoattachmentuuid_.Set(from._internal_apoattachmentuuid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateSwcAttachmentApoRequest)
}

inline void UpdateSwcAttachmentApoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.newswcattachmentapo_){arena}
    , decltype(_impl_.swcname_){}
    , decltype(_impl_.apoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.apoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

UpdateSwcAttachmentApoRequest::~UpdateSwcAttachmentApoRequest() {
  // @@protoc_insertion_point(destructor:proto.UpdateSwcAttachmentApoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateSwcAttachmentApoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.newswcattachmentapo_.~RepeatedPtrField();
  _impl_.swcname_.Destroy();
  _impl_.apoattachmentuuid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void UpdateSwcAttachmentApoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateSwcAttachmentApoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateSwcAttachmentApoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.newswcattachmentapo_.Clear();
  _impl_.swcname_.ClearToEmpty();
  _impl_.apoattachmentuuid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSwcAttachmentApoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UpdateSwcAttachmentApoRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // string ApoAttachmentUuid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_apoattachmentuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.UpdateSwcAttachmentApoRequest.ApoAttachmentUuid"));
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.SwcAttachmentApoV1 NewSwcAttachmentApo = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 42)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_newswcattachmentapo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<42>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSwcAttachmentApoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateSwcAttachmentApoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UpdateSwcAttachmentApoRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // string ApoAttachmentUuid = 4;
  if (!this->_internal_apoattachmentuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_apoattachmentuuid().data(), static_cast<int>(this->_internal_apoattachmentuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.UpdateSwcAttachmentApoRequest.ApoAttachmentUuid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_apoattachmentuuid(), target);
  }

  // repeated .proto.SwcAttachmentApoV1 NewSwcAttachmentApo = 5;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_newswcattachmentapo_size()); i < n; i++) {
    const auto& repfield = this->_internal_newswcattachmentapo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(5, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateSwcAttachmentApoRequest)
  return target;
}

size_t UpdateSwcAttachmentApoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateSwcAttachmentApoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.SwcAttachmentApoV1 NewSwcAttachmentApo = 5;
  total_size += 1UL * this->_internal_newswcattachmentapo_size();
  for (const auto& msg : this->_impl_.newswcattachmentapo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // string ApoAttachmentUuid = 4;
  if (!this->_internal_apoattachmentuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_apoattachmentuuid());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSwcAttachmentApoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateSwcAttachmentApoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSwcAttachmentApoRequest::GetClassData() const { return &_class_data_; }


void UpdateSwcAttachmentApoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateSwcAttachmentApoRequest*>(&to_msg);
  auto& from = static_cast<const UpdateSwcAttachmentApoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateSwcAttachmentApoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.newswcattachmentapo_.MergeFrom(from._impl_.newswcattachmentapo_);
  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (!from._internal_apoattachmentuuid().empty()) {
    _this->_internal_set_apoattachmentuuid(from._internal_apoattachmentuuid());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSwcAttachmentApoRequest::CopyFrom(const UpdateSwcAttachmentApoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateSwcAttachmentApoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSwcAttachmentApoRequest::IsInitialized() const {
  return true;
}

void UpdateSwcAttachmentApoRequest::InternalSwap(UpdateSwcAttachmentApoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.newswcattachmentapo_.InternalSwap(&other->_impl_.newswcattachmentapo_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.apoattachmentuuid_, lhs_arena,
      &other->_impl_.apoattachmentuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSwcAttachmentApoRequest, _impl_.userverifyinfo_)
      + sizeof(UpdateSwcAttachmentApoRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(UpdateSwcAttachmentApoRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSwcAttachmentApoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[44]);
}

// ===================================================================

class GetSwcAttachmentApoRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const GetSwcAttachmentApoRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const GetSwcAttachmentApoRequest* msg);
};

const ::proto::RequestMetaInfoV1&
GetSwcAttachmentApoRequest::_Internal::metainfo(const GetSwcAttachmentApoRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
GetSwcAttachmentApoRequest::_Internal::userverifyinfo(const GetSwcAttachmentApoRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void GetSwcAttachmentApoRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSwcAttachmentApoRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
GetSwcAttachmentApoRequest::GetSwcAttachmentApoRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcAttachmentApoRequest)
}
GetSwcAttachmentApoRequest::GetSwcAttachmentApoRequest(const GetSwcAttachmentApoRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcAttachmentApoRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.apoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  _impl_.apoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_apoattachmentuuid().empty()) {
    _this->_impl_.apoattachmentuuid_.Set(from._internal_apoattachmentuuid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcAttachmentApoRequest)
}

inline void GetSwcAttachmentApoRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.apoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  _impl_.apoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

GetSwcAttachmentApoRequest::~GetSwcAttachmentApoRequest() {
  // @@protoc_insertion_point(destructor:proto.GetSwcAttachmentApoRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcAttachmentApoRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  _impl_.apoattachmentuuid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void GetSwcAttachmentApoRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcAttachmentApoRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcAttachmentApoRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  _impl_.apoattachmentuuid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcAttachmentApoRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcAttachmentApoRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // string ApoAttachmentUuid = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          auto str = _internal_mutable_apoattachmentuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.GetSwcAttachmentApoRequest.ApoAttachmentUuid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcAttachmentApoRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcAttachmentApoRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcAttachmentApoRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // string ApoAttachmentUuid = 4;
  if (!this->_internal_apoattachmentuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_apoattachmentuuid().data(), static_cast<int>(this->_internal_apoattachmentuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.GetSwcAttachmentApoRequest.ApoAttachmentUuid");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_apoattachmentuuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcAttachmentApoRequest)
  return target;
}

size_t GetSwcAttachmentApoRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcAttachmentApoRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // string ApoAttachmentUuid = 4;
  if (!this->_internal_apoattachmentuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_apoattachmentuuid());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcAttachmentApoRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcAttachmentApoRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcAttachmentApoRequest::GetClassData() const { return &_class_data_; }


void GetSwcAttachmentApoRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcAttachmentApoRequest*>(&to_msg);
  auto& from = static_cast<const GetSwcAttachmentApoRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcAttachmentApoRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (!from._internal_apoattachmentuuid().empty()) {
    _this->_internal_set_apoattachmentuuid(from._internal_apoattachmentuuid());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcAttachmentApoRequest::CopyFrom(const GetSwcAttachmentApoRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcAttachmentApoRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcAttachmentApoRequest::IsInitialized() const {
  return true;
}

void GetSwcAttachmentApoRequest::InternalSwap(GetSwcAttachmentApoRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.apoattachmentuuid_, lhs_arena,
      &other->_impl_.apoattachmentuuid_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcAttachmentApoRequest, _impl_.userverifyinfo_)
      + sizeof(GetSwcAttachmentApoRequest::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(GetSwcAttachmentApoRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcAttachmentApoRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[45]);
}

// ===================================================================

class RevertSwcVersionRequest::_Internal {
 public:
  static const ::proto::RequestMetaInfoV1& metainfo(const RevertSwcVersionRequest* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const RevertSwcVersionRequest* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& versionendtime(const RevertSwcVersionRequest* msg);
};

const ::proto::RequestMetaInfoV1&
RevertSwcVersionRequest::_Internal::metainfo(const RevertSwcVersionRequest* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
RevertSwcVersionRequest::_Internal::userverifyinfo(const RevertSwcVersionRequest* msg) {
  return *msg->_impl_.userverifyinfo_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
RevertSwcVersionRequest::_Internal::versionendtime(const RevertSwcVersionRequest* msg) {
  return *msg->_impl_.versionendtime_;
}
void RevertSwcVersionRequest::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void RevertSwcVersionRequest::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
void RevertSwcVersionRequest::clear_versionendtime() {
  if (GetArenaForAllocation() == nullptr && _impl_.versionendtime_ != nullptr) {
    delete _impl_.versionendtime_;
  }
  _impl_.versionendtime_ = nullptr;
}
RevertSwcVersionRequest::RevertSwcVersionRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.RevertSwcVersionRequest)
}
RevertSwcVersionRequest::RevertSwcVersionRequest(const RevertSwcVersionRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RevertSwcVersionRequest* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.versionendtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_swcname().empty()) {
    _this->_impl_.swcname_.Set(from._internal_swcname(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::RequestMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  if (from._internal_has_versionendtime()) {
    _this->_impl_.versionendtime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.versionendtime_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.RevertSwcVersionRequest)
}

inline void RevertSwcVersionRequest::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcname_){}
    , decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , decltype(_impl_.versionendtime_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.swcname_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.swcname_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

RevertSwcVersionRequest::~RevertSwcVersionRequest() {
  // @@protoc_insertion_point(destructor:proto.RevertSwcVersionRequest)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RevertSwcVersionRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcname_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
  if (this != internal_default_instance()) delete _impl_.versionendtime_;
}

void RevertSwcVersionRequest::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RevertSwcVersionRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RevertSwcVersionRequest)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcname_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.versionendtime_ != nullptr) {
    delete _impl_.versionendtime_;
  }
  _impl_.versionendtime_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RevertSwcVersionRequest::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.RequestMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string SwcName = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          auto str = _internal_mutable_swcname();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.RevertSwcVersionRequest.SwcName"));
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp VersionEndTime = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_versionendtime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RevertSwcVersionRequest::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.RevertSwcVersionRequest)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_swcname().data(), static_cast<int>(this->_internal_swcname().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.RevertSwcVersionRequest.SwcName");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_swcname(), target);
  }

  // .google.protobuf.Timestamp VersionEndTime = 4;
  if (this->_internal_has_versionendtime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(4, _Internal::versionendtime(this),
        _Internal::versionendtime(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RevertSwcVersionRequest)
  return target;
}

size_t RevertSwcVersionRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RevertSwcVersionRequest)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string SwcName = 3;
  if (!this->_internal_swcname().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_swcname());
  }

  // .proto.RequestMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  // .google.protobuf.Timestamp VersionEndTime = 4;
  if (this->_internal_has_versionendtime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.versionendtime_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RevertSwcVersionRequest::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RevertSwcVersionRequest::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RevertSwcVersionRequest::GetClassData() const { return &_class_data_; }


void RevertSwcVersionRequest::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RevertSwcVersionRequest*>(&to_msg);
  auto& from = static_cast<const RevertSwcVersionRequest&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.RevertSwcVersionRequest)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_swcname().empty()) {
    _this->_internal_set_swcname(from._internal_swcname());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::RequestMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  if (from._internal_has_versionendtime()) {
    _this->_internal_mutable_versionendtime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_versionendtime());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RevertSwcVersionRequest::CopyFrom(const RevertSwcVersionRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RevertSwcVersionRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RevertSwcVersionRequest::IsInitialized() const {
  return true;
}

void RevertSwcVersionRequest::InternalSwap(RevertSwcVersionRequest* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.swcname_, lhs_arena,
      &other->_impl_.swcname_, rhs_arena
  );
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(RevertSwcVersionRequest, _impl_.versionendtime_)
      + sizeof(RevertSwcVersionRequest::_impl_.versionendtime_)
      - PROTOBUF_FIELD_OFFSET(RevertSwcVersionRequest, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata RevertSwcVersionRequest::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fRequest_2eproto_getter, &descriptor_table_Message_2fRequest_2eproto_once,
      file_level_metadata_Message_2fRequest_2eproto[46]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::CreateUserRequest*
Arena::CreateMaybeMessage< ::proto::CreateUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteUserRequest*
Arena::CreateMaybeMessage< ::proto::DeleteUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateUserRequest*
Arena::CreateMaybeMessage< ::proto::UpdateUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetUserRequest*
Arena::CreateMaybeMessage< ::proto::GetUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllUserRequest*
Arena::CreateMaybeMessage< ::proto::GetAllUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserLoginRequest*
Arena::CreateMaybeMessage< ::proto::UserLoginRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserLoginRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserLogoutRequest*
Arena::CreateMaybeMessage< ::proto::UserLogoutRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserLogoutRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserOnlineHeartBeatNotification*
Arena::CreateMaybeMessage< ::proto::UserOnlineHeartBeatNotification >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserOnlineHeartBeatNotification >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetUserPermissionGroupRequest*
Arena::CreateMaybeMessage< ::proto::GetUserPermissionGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetUserPermissionGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetPermissionGroupRequest*
Arena::CreateMaybeMessage< ::proto::GetPermissionGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetPermissionGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllPermissionGroupRequest*
Arena::CreateMaybeMessage< ::proto::GetAllPermissionGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllPermissionGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ChangeUserPermissionGroupRequest*
Arena::CreateMaybeMessage< ::proto::ChangeUserPermissionGroupRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ChangeUserPermissionGroupRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateProjectRequest*
Arena::CreateMaybeMessage< ::proto::CreateProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteProjectRequest*
Arena::CreateMaybeMessage< ::proto::DeleteProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateProjectRequest*
Arena::CreateMaybeMessage< ::proto::UpdateProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetProjectRequest*
Arena::CreateMaybeMessage< ::proto::GetProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllProjectRequest*
Arena::CreateMaybeMessage< ::proto::GetAllProjectRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllProjectRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateSwcRequest*
Arena::CreateMaybeMessage< ::proto::CreateSwcRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateSwcRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteSwcRequest*
Arena::CreateMaybeMessage< ::proto::DeleteSwcRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteSwcRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateSwcRequest*
Arena::CreateMaybeMessage< ::proto::UpdateSwcRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateSwcRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcMetaInfoRequest*
Arena::CreateMaybeMessage< ::proto::GetSwcMetaInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcMetaInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllSwcMetaInfoRequest*
Arena::CreateMaybeMessage< ::proto::GetAllSwcMetaInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllSwcMetaInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateSwcSnapshotRequest*
Arena::CreateMaybeMessage< ::proto::CreateSwcSnapshotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateSwcSnapshotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllSnapshotMetaInfoRequest*
Arena::CreateMaybeMessage< ::proto::GetAllSnapshotMetaInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllSnapshotMetaInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSnapshotRequest*
Arena::CreateMaybeMessage< ::proto::GetSnapshotRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSnapshotRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllIncrementOperationMetaInfoRequest*
Arena::CreateMaybeMessage< ::proto::GetAllIncrementOperationMetaInfoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllIncrementOperationMetaInfoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetIncrementOperationRequest*
Arena::CreateMaybeMessage< ::proto::GetIncrementOperationRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetIncrementOperationRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateSwcNodeDataRequest*
Arena::CreateMaybeMessage< ::proto::CreateSwcNodeDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateSwcNodeDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteSwcNodeDataRequest*
Arena::CreateMaybeMessage< ::proto::DeleteSwcNodeDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteSwcNodeDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateSwcNodeDataRequest*
Arena::CreateMaybeMessage< ::proto::UpdateSwcNodeDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateSwcNodeDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcNodeDataRequest*
Arena::CreateMaybeMessage< ::proto::GetSwcNodeDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcNodeDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcFullNodeDataRequest*
Arena::CreateMaybeMessage< ::proto::GetSwcFullNodeDataRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcFullNodeDataRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcNodeDataListByTimeAndUserRequest*
Arena::CreateMaybeMessage< ::proto::GetSwcNodeDataListByTimeAndUserRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcNodeDataListByTimeAndUserRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateDailyStatisticsRequest*
Arena::CreateMaybeMessage< ::proto::CreateDailyStatisticsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateDailyStatisticsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteDailyStatisticsRequest*
Arena::CreateMaybeMessage< ::proto::DeleteDailyStatisticsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteDailyStatisticsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateDailyStatisticsRequest*
Arena::CreateMaybeMessage< ::proto::UpdateDailyStatisticsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateDailyStatisticsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetDailyStatisticsRequest*
Arena::CreateMaybeMessage< ::proto::GetDailyStatisticsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetDailyStatisticsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllDailyStatisticsRequest*
Arena::CreateMaybeMessage< ::proto::GetAllDailyStatisticsRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllDailyStatisticsRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateSwcAttachmentAnoRequest*
Arena::CreateMaybeMessage< ::proto::CreateSwcAttachmentAnoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateSwcAttachmentAnoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteSwcAttachmentAnoRequest*
Arena::CreateMaybeMessage< ::proto::DeleteSwcAttachmentAnoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteSwcAttachmentAnoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateSwcAttachmentAnoRequest*
Arena::CreateMaybeMessage< ::proto::UpdateSwcAttachmentAnoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateSwcAttachmentAnoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcAttachmentAnoRequest*
Arena::CreateMaybeMessage< ::proto::GetSwcAttachmentAnoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcAttachmentAnoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateSwcAttachmentApoRequest*
Arena::CreateMaybeMessage< ::proto::CreateSwcAttachmentApoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateSwcAttachmentApoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteSwcAttachmentApoRequest*
Arena::CreateMaybeMessage< ::proto::DeleteSwcAttachmentApoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteSwcAttachmentApoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateSwcAttachmentApoRequest*
Arena::CreateMaybeMessage< ::proto::UpdateSwcAttachmentApoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateSwcAttachmentApoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcAttachmentApoRequest*
Arena::CreateMaybeMessage< ::proto::GetSwcAttachmentApoRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcAttachmentApoRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::RevertSwcVersionRequest*
Arena::CreateMaybeMessage< ::proto::RevertSwcVersionRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::RevertSwcVersionRequest >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
