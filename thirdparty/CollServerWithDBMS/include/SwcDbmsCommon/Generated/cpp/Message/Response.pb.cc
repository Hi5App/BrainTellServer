// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Message/Response.proto

#include "Message/Response.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>

PROTOBUF_PRAGMA_INIT_SEG

namespace _pb = ::PROTOBUF_NAMESPACE_ID;
namespace _pbi = _pb::internal;

namespace proto {
PROTOBUF_CONSTEXPR CreateUserResponse::CreateUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateUserResponseDefaultTypeInternal() {}
  union {
    CreateUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateUserResponseDefaultTypeInternal _CreateUserResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteUserResponse::DeleteUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteUserResponseDefaultTypeInternal() {}
  union {
    DeleteUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteUserResponseDefaultTypeInternal _DeleteUserResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateUserResponse::UpdateUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateUserResponseDefaultTypeInternal() {}
  union {
    UpdateUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateUserResponseDefaultTypeInternal _UpdateUserResponse_default_instance_;
PROTOBUF_CONSTEXPR GetUserResponse::GetUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserResponseDefaultTypeInternal() {}
  union {
    GetUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserResponseDefaultTypeInternal _GetUserResponse_default_instance_;
PROTOBUF_CONSTEXPR GetAllUserResponse::GetAllUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.userinfo_)*/{}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllUserResponseDefaultTypeInternal() {}
  union {
    GetAllUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllUserResponseDefaultTypeInternal _GetAllUserResponse_default_instance_;
PROTOBUF_CONSTEXPR UserLoginResponse::UserLoginResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userinfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserLoginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserLoginResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserLoginResponseDefaultTypeInternal() {}
  union {
    UserLoginResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserLoginResponseDefaultTypeInternal _UserLoginResponse_default_instance_;
PROTOBUF_CONSTEXPR UserLogoutResponse::UserLogoutResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserLogoutResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserLogoutResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserLogoutResponseDefaultTypeInternal() {}
  union {
    UserLogoutResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserLogoutResponseDefaultTypeInternal _UserLogoutResponse_default_instance_;
PROTOBUF_CONSTEXPR UserOnlineHeartBeatResponse::UserOnlineHeartBeatResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.userverifyinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UserOnlineHeartBeatResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UserOnlineHeartBeatResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UserOnlineHeartBeatResponseDefaultTypeInternal() {}
  union {
    UserOnlineHeartBeatResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UserOnlineHeartBeatResponseDefaultTypeInternal _UserOnlineHeartBeatResponse_default_instance_;
PROTOBUF_CONSTEXPR GetUserPermissionGroupResponse::GetUserPermissionGroupResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.permissiongroup_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetUserPermissionGroupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetUserPermissionGroupResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetUserPermissionGroupResponseDefaultTypeInternal() {}
  union {
    GetUserPermissionGroupResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetUserPermissionGroupResponseDefaultTypeInternal _GetUserPermissionGroupResponse_default_instance_;
PROTOBUF_CONSTEXPR GetPermissionGroupResponse::GetPermissionGroupResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.permissiongroup_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetPermissionGroupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetPermissionGroupResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetPermissionGroupResponseDefaultTypeInternal() {}
  union {
    GetPermissionGroupResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetPermissionGroupResponseDefaultTypeInternal _GetPermissionGroupResponse_default_instance_;
PROTOBUF_CONSTEXPR GetAllPermissionGroupResponse::GetAllPermissionGroupResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.permissiongrouplist_)*/{}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllPermissionGroupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllPermissionGroupResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllPermissionGroupResponseDefaultTypeInternal() {}
  union {
    GetAllPermissionGroupResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllPermissionGroupResponseDefaultTypeInternal _GetAllPermissionGroupResponse_default_instance_;
PROTOBUF_CONSTEXPR ChangeUserPermissionGroupResponse::ChangeUserPermissionGroupResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct ChangeUserPermissionGroupResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ChangeUserPermissionGroupResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~ChangeUserPermissionGroupResponseDefaultTypeInternal() {}
  union {
    ChangeUserPermissionGroupResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ChangeUserPermissionGroupResponseDefaultTypeInternal _ChangeUserPermissionGroupResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateProjectResponse::CreateProjectResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.projectinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateProjectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateProjectResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateProjectResponseDefaultTypeInternal() {}
  union {
    CreateProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateProjectResponseDefaultTypeInternal _CreateProjectResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteProjectResponse::DeleteProjectResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.projectinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteProjectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteProjectResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteProjectResponseDefaultTypeInternal() {}
  union {
    DeleteProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteProjectResponseDefaultTypeInternal _DeleteProjectResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateProjectResponse::UpdateProjectResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.projectinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateProjectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateProjectResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateProjectResponseDefaultTypeInternal() {}
  union {
    UpdateProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateProjectResponseDefaultTypeInternal _UpdateProjectResponse_default_instance_;
PROTOBUF_CONSTEXPR GetProjectResponse::GetProjectResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.projectinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetProjectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetProjectResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetProjectResponseDefaultTypeInternal() {}
  union {
    GetProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetProjectResponseDefaultTypeInternal _GetProjectResponse_default_instance_;
PROTOBUF_CONSTEXPR GetAllProjectResponse::GetAllProjectResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.projectinfo_)*/{}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllProjectResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllProjectResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllProjectResponseDefaultTypeInternal() {}
  union {
    GetAllProjectResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllProjectResponseDefaultTypeInternal _GetAllProjectResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateSwcResponse::CreateSwcResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.swcinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSwcResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSwcResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSwcResponseDefaultTypeInternal() {}
  union {
    CreateSwcResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSwcResponseDefaultTypeInternal _CreateSwcResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteSwcResponse::DeleteSwcResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.swcinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteSwcResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSwcResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSwcResponseDefaultTypeInternal() {}
  union {
    DeleteSwcResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSwcResponseDefaultTypeInternal _DeleteSwcResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateSwcResponse::UpdateSwcResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.swcinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateSwcResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSwcResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSwcResponseDefaultTypeInternal() {}
  union {
    UpdateSwcResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSwcResponseDefaultTypeInternal _UpdateSwcResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSwcMetaInfoResponse::GetSwcMetaInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.swcinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcMetaInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcMetaInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcMetaInfoResponseDefaultTypeInternal() {}
  union {
    GetSwcMetaInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcMetaInfoResponseDefaultTypeInternal _GetSwcMetaInfoResponse_default_instance_;
PROTOBUF_CONSTEXPR GetAllSwcMetaInfoResponse::GetAllSwcMetaInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcinfo_)*/{}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllSwcMetaInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllSwcMetaInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllSwcMetaInfoResponseDefaultTypeInternal() {}
  union {
    GetAllSwcMetaInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllSwcMetaInfoResponseDefaultTypeInternal _GetAllSwcMetaInfoResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateSwcSnapshotResponse::CreateSwcSnapshotResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSwcSnapshotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSwcSnapshotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSwcSnapshotResponseDefaultTypeInternal() {}
  union {
    CreateSwcSnapshotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSwcSnapshotResponseDefaultTypeInternal _CreateSwcSnapshotResponse_default_instance_;
PROTOBUF_CONSTEXPR GetAllSnapshotMetaInfoResponse::GetAllSnapshotMetaInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcsnapshotlist_)*/{}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllSnapshotMetaInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllSnapshotMetaInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllSnapshotMetaInfoResponseDefaultTypeInternal() {}
  union {
    GetAllSnapshotMetaInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllSnapshotMetaInfoResponseDefaultTypeInternal _GetAllSnapshotMetaInfoResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSnapshotResponse::GetSnapshotResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.swcnodedata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSnapshotResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSnapshotResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSnapshotResponseDefaultTypeInternal() {}
  union {
    GetSnapshotResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSnapshotResponseDefaultTypeInternal _GetSnapshotResponse_default_instance_;
PROTOBUF_CONSTEXPR GetAllIncrementOperationMetaInfoResponse::GetAllIncrementOperationMetaInfoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcincrementoperationmetainfo_)*/{}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllIncrementOperationMetaInfoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllIncrementOperationMetaInfoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllIncrementOperationMetaInfoResponseDefaultTypeInternal() {}
  union {
    GetAllIncrementOperationMetaInfoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllIncrementOperationMetaInfoResponseDefaultTypeInternal _GetAllIncrementOperationMetaInfoResponse_default_instance_;
PROTOBUF_CONSTEXPR GetIncrementOperationResponse::GetIncrementOperationResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.swcincrementoperationlist_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetIncrementOperationResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetIncrementOperationResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetIncrementOperationResponseDefaultTypeInternal() {}
  union {
    GetIncrementOperationResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetIncrementOperationResponseDefaultTypeInternal _GetIncrementOperationResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateSwcNodeDataResponse::CreateSwcNodeDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.creatednodesuuid_)*/{}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSwcNodeDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSwcNodeDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSwcNodeDataResponseDefaultTypeInternal() {}
  union {
    CreateSwcNodeDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSwcNodeDataResponseDefaultTypeInternal _CreateSwcNodeDataResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteSwcNodeDataResponse::DeleteSwcNodeDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteSwcNodeDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSwcNodeDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSwcNodeDataResponseDefaultTypeInternal() {}
  union {
    DeleteSwcNodeDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSwcNodeDataResponseDefaultTypeInternal _DeleteSwcNodeDataResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateSwcNodeDataResponse::UpdateSwcNodeDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateSwcNodeDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSwcNodeDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSwcNodeDataResponseDefaultTypeInternal() {}
  union {
    UpdateSwcNodeDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSwcNodeDataResponseDefaultTypeInternal _UpdateSwcNodeDataResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSwcNodeDataResponse::GetSwcNodeDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.swcnodedata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcNodeDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcNodeDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcNodeDataResponseDefaultTypeInternal() {}
  union {
    GetSwcNodeDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcNodeDataResponseDefaultTypeInternal _GetSwcNodeDataResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSwcFullNodeDataResponse::GetSwcFullNodeDataResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.swcnodedata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcFullNodeDataResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcFullNodeDataResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcFullNodeDataResponseDefaultTypeInternal() {}
  union {
    GetSwcFullNodeDataResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcFullNodeDataResponseDefaultTypeInternal _GetSwcFullNodeDataResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSwcNodeDataListByTimeAndUserResponse::GetSwcNodeDataListByTimeAndUserResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.swcnodedata_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcNodeDataListByTimeAndUserResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcNodeDataListByTimeAndUserResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcNodeDataListByTimeAndUserResponseDefaultTypeInternal() {}
  union {
    GetSwcNodeDataListByTimeAndUserResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcNodeDataListByTimeAndUserResponseDefaultTypeInternal _GetSwcNodeDataListByTimeAndUserResponse_default_instance_;
PROTOBUF_CONSTEXPR BackupFullDatabaseResponse::BackupFullDatabaseResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.delaybackuptime_)*/nullptr
  , /*decltype(_impl_.instantbackup_)*/false
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct BackupFullDatabaseResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR BackupFullDatabaseResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~BackupFullDatabaseResponseDefaultTypeInternal() {}
  union {
    BackupFullDatabaseResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 BackupFullDatabaseResponseDefaultTypeInternal _BackupFullDatabaseResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateDailyStatisticsResponse::CreateDailyStatisticsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.dailystatisticsinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateDailyStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateDailyStatisticsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateDailyStatisticsResponseDefaultTypeInternal() {}
  union {
    CreateDailyStatisticsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateDailyStatisticsResponseDefaultTypeInternal _CreateDailyStatisticsResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteDailyStatisticsResponse::DeleteDailyStatisticsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.dailystatisticsinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteDailyStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteDailyStatisticsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteDailyStatisticsResponseDefaultTypeInternal() {}
  union {
    DeleteDailyStatisticsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteDailyStatisticsResponseDefaultTypeInternal _DeleteDailyStatisticsResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateDailyStatisticsResponse::UpdateDailyStatisticsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.dailystatisticsinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateDailyStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateDailyStatisticsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateDailyStatisticsResponseDefaultTypeInternal() {}
  union {
    UpdateDailyStatisticsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateDailyStatisticsResponseDefaultTypeInternal _UpdateDailyStatisticsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetDailyStatisticsResponse::GetDailyStatisticsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.dailystatisticsinfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetDailyStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetDailyStatisticsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetDailyStatisticsResponseDefaultTypeInternal() {}
  union {
    GetDailyStatisticsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetDailyStatisticsResponseDefaultTypeInternal _GetDailyStatisticsResponse_default_instance_;
PROTOBUF_CONSTEXPR GetAllDailyStatisticsResponse::GetAllDailyStatisticsResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.dailystatisticsinfo_)*/{}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetAllDailyStatisticsResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetAllDailyStatisticsResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetAllDailyStatisticsResponseDefaultTypeInternal() {}
  union {
    GetAllDailyStatisticsResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetAllDailyStatisticsResponseDefaultTypeInternal _GetAllDailyStatisticsResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateSwcAttachmentAnoResponse::CreateSwcAttachmentAnoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.anoattachmentuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSwcAttachmentAnoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSwcAttachmentAnoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSwcAttachmentAnoResponseDefaultTypeInternal() {}
  union {
    CreateSwcAttachmentAnoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSwcAttachmentAnoResponseDefaultTypeInternal _CreateSwcAttachmentAnoResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteSwcAttachmentAnoResponse::DeleteSwcAttachmentAnoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteSwcAttachmentAnoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSwcAttachmentAnoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSwcAttachmentAnoResponseDefaultTypeInternal() {}
  union {
    DeleteSwcAttachmentAnoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSwcAttachmentAnoResponseDefaultTypeInternal _DeleteSwcAttachmentAnoResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateSwcAttachmentAnoResponse::UpdateSwcAttachmentAnoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateSwcAttachmentAnoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSwcAttachmentAnoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSwcAttachmentAnoResponseDefaultTypeInternal() {}
  union {
    UpdateSwcAttachmentAnoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSwcAttachmentAnoResponseDefaultTypeInternal _UpdateSwcAttachmentAnoResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSwcAttachmentAnoResponse::GetSwcAttachmentAnoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_.swcattachmentano_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcAttachmentAnoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcAttachmentAnoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcAttachmentAnoResponseDefaultTypeInternal() {}
  union {
    GetSwcAttachmentAnoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcAttachmentAnoResponseDefaultTypeInternal _GetSwcAttachmentAnoResponse_default_instance_;
PROTOBUF_CONSTEXPR CreateSwcAttachmentApoResponse::CreateSwcAttachmentApoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.apoattachmentuuid_)*/{&::_pbi::fixed_address_empty_string, ::_pbi::ConstantInitialized{}}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct CreateSwcAttachmentApoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR CreateSwcAttachmentApoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~CreateSwcAttachmentApoResponseDefaultTypeInternal() {}
  union {
    CreateSwcAttachmentApoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 CreateSwcAttachmentApoResponseDefaultTypeInternal _CreateSwcAttachmentApoResponse_default_instance_;
PROTOBUF_CONSTEXPR DeleteSwcAttachmentApoResponse::DeleteSwcAttachmentApoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct DeleteSwcAttachmentApoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR DeleteSwcAttachmentApoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~DeleteSwcAttachmentApoResponseDefaultTypeInternal() {}
  union {
    DeleteSwcAttachmentApoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 DeleteSwcAttachmentApoResponseDefaultTypeInternal _DeleteSwcAttachmentApoResponse_default_instance_;
PROTOBUF_CONSTEXPR UpdateSwcAttachmentApoResponse::UpdateSwcAttachmentApoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct UpdateSwcAttachmentApoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR UpdateSwcAttachmentApoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~UpdateSwcAttachmentApoResponseDefaultTypeInternal() {}
  union {
    UpdateSwcAttachmentApoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 UpdateSwcAttachmentApoResponseDefaultTypeInternal _UpdateSwcAttachmentApoResponse_default_instance_;
PROTOBUF_CONSTEXPR GetSwcAttachmentApoResponse::GetSwcAttachmentApoResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.swcattachmentapo_)*/{}
  , /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct GetSwcAttachmentApoResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GetSwcAttachmentApoResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~GetSwcAttachmentApoResponseDefaultTypeInternal() {}
  union {
    GetSwcAttachmentApoResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GetSwcAttachmentApoResponseDefaultTypeInternal _GetSwcAttachmentApoResponse_default_instance_;
PROTOBUF_CONSTEXPR RevertSwcVersionResponse::RevertSwcVersionResponse(
    ::_pbi::ConstantInitialized): _impl_{
    /*decltype(_impl_.metainfo_)*/nullptr
  , /*decltype(_impl_._cached_size_)*/{}} {}
struct RevertSwcVersionResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RevertSwcVersionResponseDefaultTypeInternal()
      : _instance(::_pbi::ConstantInitialized{}) {}
  ~RevertSwcVersionResponseDefaultTypeInternal() {}
  union {
    RevertSwcVersionResponse _instance;
  };
};
PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RevertSwcVersionResponseDefaultTypeInternal _RevertSwcVersionResponse_default_instance_;
}  // namespace proto
static ::_pb::Metadata file_level_metadata_Message_2fResponse_2eproto[48];
static constexpr ::_pb::EnumDescriptor const** file_level_enum_descriptors_Message_2fResponse_2eproto = nullptr;
static constexpr ::_pb::ServiceDescriptor const** file_level_service_descriptors_Message_2fResponse_2eproto = nullptr;

const uint32_t TableStruct_Message_2fResponse_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateUserResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateUserResponse, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteUserResponse, _impl_.metainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateUserResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateUserResponse, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetUserResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetUserResponse, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllUserResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllUserResponse, _impl_.userinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserLoginResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserLoginResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UserLoginResponse, _impl_.userinfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UserLoginResponse, _impl_.userverifyinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserLogoutResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserLogoutResponse, _impl_.metainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UserOnlineHeartBeatResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UserOnlineHeartBeatResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UserOnlineHeartBeatResponse, _impl_.userverifyinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetUserPermissionGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetUserPermissionGroupResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetUserPermissionGroupResponse, _impl_.permissiongroup_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetPermissionGroupResponse, _impl_.permissiongroup_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllPermissionGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllPermissionGroupResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllPermissionGroupResponse, _impl_.permissiongrouplist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::ChangeUserPermissionGroupResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::ChangeUserPermissionGroupResponse, _impl_.metainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateProjectResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateProjectResponse, _impl_.projectinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteProjectResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteProjectResponse, _impl_.projectinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateProjectResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateProjectResponse, _impl_.projectinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetProjectResponse, _impl_.projectinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllProjectResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllProjectResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllProjectResponse, _impl_.projectinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcResponse, _impl_.swcinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcResponse, _impl_.swcinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcResponse, _impl_.swcinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcMetaInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcMetaInfoResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcMetaInfoResponse, _impl_.swcinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSwcMetaInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSwcMetaInfoResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSwcMetaInfoResponse, _impl_.swcinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcSnapshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcSnapshotResponse, _impl_.metainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSnapshotMetaInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSnapshotMetaInfoResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllSnapshotMetaInfoResponse, _impl_.swcsnapshotlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSnapshotResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSnapshotResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSnapshotResponse, _impl_.swcnodedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllIncrementOperationMetaInfoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllIncrementOperationMetaInfoResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllIncrementOperationMetaInfoResponse, _impl_.swcincrementoperationmetainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetIncrementOperationResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetIncrementOperationResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetIncrementOperationResponse, _impl_.swcincrementoperationlist_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcNodeDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcNodeDataResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcNodeDataResponse, _impl_.creatednodesuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcNodeDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcNodeDataResponse, _impl_.metainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcNodeDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcNodeDataResponse, _impl_.metainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataResponse, _impl_.swcnodedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcFullNodeDataResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcFullNodeDataResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcFullNodeDataResponse, _impl_.swcnodedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataListByTimeAndUserResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataListByTimeAndUserResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcNodeDataListByTimeAndUserResponse, _impl_.swcnodedata_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::BackupFullDatabaseResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::BackupFullDatabaseResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::BackupFullDatabaseResponse, _impl_.instantbackup_),
  PROTOBUF_FIELD_OFFSET(::proto::BackupFullDatabaseResponse, _impl_.delaybackuptime_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateDailyStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateDailyStatisticsResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateDailyStatisticsResponse, _impl_.dailystatisticsinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteDailyStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteDailyStatisticsResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::DeleteDailyStatisticsResponse, _impl_.dailystatisticsinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateDailyStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateDailyStatisticsResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::UpdateDailyStatisticsResponse, _impl_.dailystatisticsinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetDailyStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetDailyStatisticsResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetDailyStatisticsResponse, _impl_.dailystatisticsinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllDailyStatisticsResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetAllDailyStatisticsResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetAllDailyStatisticsResponse, _impl_.dailystatisticsinfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentAnoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentAnoResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentAnoResponse, _impl_.anoattachmentuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentAnoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentAnoResponse, _impl_.metainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentAnoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentAnoResponse, _impl_.metainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentAnoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentAnoResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentAnoResponse, _impl_.swcattachmentano_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentApoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentApoResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::CreateSwcAttachmentApoResponse, _impl_.apoattachmentuuid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentApoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::DeleteSwcAttachmentApoResponse, _impl_.metainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentApoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::UpdateSwcAttachmentApoResponse, _impl_.metainfo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentApoResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentApoResponse, _impl_.metainfo_),
  PROTOBUF_FIELD_OFFSET(::proto::GetSwcAttachmentApoResponse, _impl_.swcattachmentapo_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::proto::RevertSwcVersionResponse, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _inlined_string_donated_
  PROTOBUF_FIELD_OFFSET(::proto::RevertSwcVersionResponse, _impl_.metainfo_),
};
static const ::_pbi::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, -1, sizeof(::proto::CreateUserResponse)},
  { 8, -1, -1, sizeof(::proto::DeleteUserResponse)},
  { 15, -1, -1, sizeof(::proto::UpdateUserResponse)},
  { 23, -1, -1, sizeof(::proto::GetUserResponse)},
  { 31, -1, -1, sizeof(::proto::GetAllUserResponse)},
  { 39, -1, -1, sizeof(::proto::UserLoginResponse)},
  { 48, -1, -1, sizeof(::proto::UserLogoutResponse)},
  { 55, -1, -1, sizeof(::proto::UserOnlineHeartBeatResponse)},
  { 63, -1, -1, sizeof(::proto::GetUserPermissionGroupResponse)},
  { 71, -1, -1, sizeof(::proto::GetPermissionGroupResponse)},
  { 79, -1, -1, sizeof(::proto::GetAllPermissionGroupResponse)},
  { 87, -1, -1, sizeof(::proto::ChangeUserPermissionGroupResponse)},
  { 94, -1, -1, sizeof(::proto::CreateProjectResponse)},
  { 102, -1, -1, sizeof(::proto::DeleteProjectResponse)},
  { 110, -1, -1, sizeof(::proto::UpdateProjectResponse)},
  { 118, -1, -1, sizeof(::proto::GetProjectResponse)},
  { 126, -1, -1, sizeof(::proto::GetAllProjectResponse)},
  { 134, -1, -1, sizeof(::proto::CreateSwcResponse)},
  { 142, -1, -1, sizeof(::proto::DeleteSwcResponse)},
  { 150, -1, -1, sizeof(::proto::UpdateSwcResponse)},
  { 158, -1, -1, sizeof(::proto::GetSwcMetaInfoResponse)},
  { 166, -1, -1, sizeof(::proto::GetAllSwcMetaInfoResponse)},
  { 174, -1, -1, sizeof(::proto::CreateSwcSnapshotResponse)},
  { 181, -1, -1, sizeof(::proto::GetAllSnapshotMetaInfoResponse)},
  { 189, -1, -1, sizeof(::proto::GetSnapshotResponse)},
  { 197, -1, -1, sizeof(::proto::GetAllIncrementOperationMetaInfoResponse)},
  { 205, -1, -1, sizeof(::proto::GetIncrementOperationResponse)},
  { 213, -1, -1, sizeof(::proto::CreateSwcNodeDataResponse)},
  { 221, -1, -1, sizeof(::proto::DeleteSwcNodeDataResponse)},
  { 228, -1, -1, sizeof(::proto::UpdateSwcNodeDataResponse)},
  { 235, -1, -1, sizeof(::proto::GetSwcNodeDataResponse)},
  { 243, -1, -1, sizeof(::proto::GetSwcFullNodeDataResponse)},
  { 251, -1, -1, sizeof(::proto::GetSwcNodeDataListByTimeAndUserResponse)},
  { 259, -1, -1, sizeof(::proto::BackupFullDatabaseResponse)},
  { 268, -1, -1, sizeof(::proto::CreateDailyStatisticsResponse)},
  { 276, -1, -1, sizeof(::proto::DeleteDailyStatisticsResponse)},
  { 284, -1, -1, sizeof(::proto::UpdateDailyStatisticsResponse)},
  { 292, -1, -1, sizeof(::proto::GetDailyStatisticsResponse)},
  { 300, -1, -1, sizeof(::proto::GetAllDailyStatisticsResponse)},
  { 308, -1, -1, sizeof(::proto::CreateSwcAttachmentAnoResponse)},
  { 316, -1, -1, sizeof(::proto::DeleteSwcAttachmentAnoResponse)},
  { 323, -1, -1, sizeof(::proto::UpdateSwcAttachmentAnoResponse)},
  { 330, -1, -1, sizeof(::proto::GetSwcAttachmentAnoResponse)},
  { 338, -1, -1, sizeof(::proto::CreateSwcAttachmentApoResponse)},
  { 346, -1, -1, sizeof(::proto::DeleteSwcAttachmentApoResponse)},
  { 353, -1, -1, sizeof(::proto::UpdateSwcAttachmentApoResponse)},
  { 360, -1, -1, sizeof(::proto::GetSwcAttachmentApoResponse)},
  { 368, -1, -1, sizeof(::proto::RevertSwcVersionResponse)},
};

static const ::_pb::Message* const file_default_instances[] = {
  &::proto::_CreateUserResponse_default_instance_._instance,
  &::proto::_DeleteUserResponse_default_instance_._instance,
  &::proto::_UpdateUserResponse_default_instance_._instance,
  &::proto::_GetUserResponse_default_instance_._instance,
  &::proto::_GetAllUserResponse_default_instance_._instance,
  &::proto::_UserLoginResponse_default_instance_._instance,
  &::proto::_UserLogoutResponse_default_instance_._instance,
  &::proto::_UserOnlineHeartBeatResponse_default_instance_._instance,
  &::proto::_GetUserPermissionGroupResponse_default_instance_._instance,
  &::proto::_GetPermissionGroupResponse_default_instance_._instance,
  &::proto::_GetAllPermissionGroupResponse_default_instance_._instance,
  &::proto::_ChangeUserPermissionGroupResponse_default_instance_._instance,
  &::proto::_CreateProjectResponse_default_instance_._instance,
  &::proto::_DeleteProjectResponse_default_instance_._instance,
  &::proto::_UpdateProjectResponse_default_instance_._instance,
  &::proto::_GetProjectResponse_default_instance_._instance,
  &::proto::_GetAllProjectResponse_default_instance_._instance,
  &::proto::_CreateSwcResponse_default_instance_._instance,
  &::proto::_DeleteSwcResponse_default_instance_._instance,
  &::proto::_UpdateSwcResponse_default_instance_._instance,
  &::proto::_GetSwcMetaInfoResponse_default_instance_._instance,
  &::proto::_GetAllSwcMetaInfoResponse_default_instance_._instance,
  &::proto::_CreateSwcSnapshotResponse_default_instance_._instance,
  &::proto::_GetAllSnapshotMetaInfoResponse_default_instance_._instance,
  &::proto::_GetSnapshotResponse_default_instance_._instance,
  &::proto::_GetAllIncrementOperationMetaInfoResponse_default_instance_._instance,
  &::proto::_GetIncrementOperationResponse_default_instance_._instance,
  &::proto::_CreateSwcNodeDataResponse_default_instance_._instance,
  &::proto::_DeleteSwcNodeDataResponse_default_instance_._instance,
  &::proto::_UpdateSwcNodeDataResponse_default_instance_._instance,
  &::proto::_GetSwcNodeDataResponse_default_instance_._instance,
  &::proto::_GetSwcFullNodeDataResponse_default_instance_._instance,
  &::proto::_GetSwcNodeDataListByTimeAndUserResponse_default_instance_._instance,
  &::proto::_BackupFullDatabaseResponse_default_instance_._instance,
  &::proto::_CreateDailyStatisticsResponse_default_instance_._instance,
  &::proto::_DeleteDailyStatisticsResponse_default_instance_._instance,
  &::proto::_UpdateDailyStatisticsResponse_default_instance_._instance,
  &::proto::_GetDailyStatisticsResponse_default_instance_._instance,
  &::proto::_GetAllDailyStatisticsResponse_default_instance_._instance,
  &::proto::_CreateSwcAttachmentAnoResponse_default_instance_._instance,
  &::proto::_DeleteSwcAttachmentAnoResponse_default_instance_._instance,
  &::proto::_UpdateSwcAttachmentAnoResponse_default_instance_._instance,
  &::proto::_GetSwcAttachmentAnoResponse_default_instance_._instance,
  &::proto::_CreateSwcAttachmentApoResponse_default_instance_._instance,
  &::proto::_DeleteSwcAttachmentApoResponse_default_instance_._instance,
  &::proto::_UpdateSwcAttachmentApoResponse_default_instance_._instance,
  &::proto::_GetSwcAttachmentApoResponse_default_instance_._instance,
  &::proto::_RevertSwcVersionResponse_default_instance_._instance,
};

const char descriptor_table_protodef_Message_2fResponse_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026Message/Response.proto\022\005proto\032\037google/"
  "protobuf/timestamp.proto\032\025Message/Messag"
  "e.proto\"j\n\022CreateUserResponse\022+\n\010metaInf"
  "o\030\001 \001(\0132\031.proto.ResponseMetaInfoV1\022\'\n\010Us"
  "erInfo\030\002 \001(\0132\025.proto.UserMetaInfoV1\"A\n\022D"
  "eleteUserResponse\022+\n\010metaInfo\030\001 \001(\0132\031.pr"
  "oto.ResponseMetaInfoV1\"j\n\022UpdateUserResp"
  "onse\022+\n\010metaInfo\030\001 \001(\0132\031.proto.ResponseM"
  "etaInfoV1\022\'\n\010UserInfo\030\002 \001(\0132\025.proto.User"
  "MetaInfoV1\"g\n\017GetUserResponse\022+\n\010metaInf"
  "o\030\001 \001(\0132\031.proto.ResponseMetaInfoV1\022\'\n\010Us"
  "erInfo\030\002 \001(\0132\025.proto.UserMetaInfoV1\"j\n\022G"
  "etAllUserResponse\022+\n\010metaInfo\030\001 \001(\0132\031.pr"
  "oto.ResponseMetaInfoV1\022\'\n\010UserInfo\030\002 \003(\013"
  "2\025.proto.UserMetaInfoV1\"\232\001\n\021UserLoginRes"
  "ponse\022+\n\010metaInfo\030\001 \001(\0132\031.proto.Response"
  "MetaInfoV1\022\'\n\010UserInfo\030\002 \001(\0132\025.proto.Use"
  "rMetaInfoV1\022/\n\016UserVerifyInfo\030\003 \001(\0132\027.pr"
  "oto.UserVerifyInfoV1\"A\n\022UserLogoutRespon"
  "se\022+\n\010metaInfo\030\001 \001(\0132\031.proto.ResponseMet"
  "aInfoV1\"{\n\033UserOnlineHeartBeatResponse\022+"
  "\n\010metaInfo\030\001 \001(\0132\031.proto.ResponseMetaInf"
  "oV1\022/\n\016UserVerifyInfo\030\002 \001(\0132\027.proto.User"
  "VerifyInfoV1\"\210\001\n\036GetUserPermissionGroupR"
  "esponse\022+\n\010metaInfo\030\001 \001(\0132\031.proto.Respon"
  "seMetaInfoV1\0229\n\017PermissionGroup\030\002 \001(\0132 ."
  "proto.PermissionGroupMetaInfoV1\"\204\001\n\032GetP"
  "ermissionGroupResponse\022+\n\010metaInfo\030\001 \001(\013"
  "2\031.proto.ResponseMetaInfoV1\0229\n\017Permissio"
  "nGroup\030\002 \001(\0132 .proto.PermissionGroupMeta"
  "InfoV1\"\213\001\n\035GetAllPermissionGroupResponse"
  "\022+\n\010metaInfo\030\001 \001(\0132\031.proto.ResponseMetaI"
  "nfoV1\022=\n\023PermissionGroupList\030\002 \003(\0132 .pro"
  "to.PermissionGroupMetaInfoV1\"P\n!ChangeUs"
  "erPermissionGroupResponse\022+\n\010metaInfo\030\001 "
  "\001(\0132\031.proto.ResponseMetaInfoV1\"s\n\025Create"
  "ProjectResponse\022+\n\010metaInfo\030\001 \001(\0132\031.prot"
  "o.ResponseMetaInfoV1\022-\n\013ProjectInfo\030\002 \001("
  "\0132\030.proto.ProjectMetaInfoV1\"s\n\025DeletePro"
  "jectResponse\022+\n\010metaInfo\030\001 \001(\0132\031.proto.R"
  "esponseMetaInfoV1\022-\n\013ProjectInfo\030\002 \001(\0132\030"
  ".proto.ProjectMetaInfoV1\"s\n\025UpdateProjec"
  "tResponse\022+\n\010metaInfo\030\001 \001(\0132\031.proto.Resp"
  "onseMetaInfoV1\022-\n\013ProjectInfo\030\002 \001(\0132\030.pr"
  "oto.ProjectMetaInfoV1\"p\n\022GetProjectRespo"
  "nse\022+\n\010metaInfo\030\001 \001(\0132\031.proto.ResponseMe"
  "taInfoV1\022-\n\013ProjectInfo\030\002 \001(\0132\030.proto.Pr"
  "ojectMetaInfoV1\"s\n\025GetAllProjectResponse"
  "\022+\n\010metaInfo\030\001 \001(\0132\031.proto.ResponseMetaI"
  "nfoV1\022-\n\013ProjectInfo\030\002 \003(\0132\030.proto.Proje"
  "ctMetaInfoV1\"g\n\021CreateSwcResponse\022+\n\010met"
  "aInfo\030\001 \001(\0132\031.proto.ResponseMetaInfoV1\022%"
  "\n\007SwcInfo\030\002 \001(\0132\024.proto.SwcMetaInfoV1\"g\n"
  "\021DeleteSwcResponse\022+\n\010metaInfo\030\001 \001(\0132\031.p"
  "roto.ResponseMetaInfoV1\022%\n\007SwcInfo\030\002 \001(\013"
  "2\024.proto.SwcMetaInfoV1\"g\n\021UpdateSwcRespo"
  "nse\022+\n\010metaInfo\030\001 \001(\0132\031.proto.ResponseMe"
  "taInfoV1\022%\n\007SwcInfo\030\002 \001(\0132\024.proto.SwcMet"
  "aInfoV1\"l\n\026GetSwcMetaInfoResponse\022+\n\010met"
  "aInfo\030\001 \001(\0132\031.proto.ResponseMetaInfoV1\022%"
  "\n\007SwcInfo\030\002 \001(\0132\024.proto.SwcMetaInfoV1\"o\n"
  "\031GetAllSwcMetaInfoResponse\022+\n\010metaInfo\030\001"
  " \001(\0132\031.proto.ResponseMetaInfoV1\022%\n\007SwcIn"
  "fo\030\002 \003(\0132\024.proto.SwcMetaInfoV1\"H\n\031Create"
  "SwcSnapshotResponse\022+\n\010metaInfo\030\001 \001(\0132\031."
  "proto.ResponseMetaInfoV1\"\204\001\n\036GetAllSnaps"
  "hotMetaInfoResponse\022+\n\010metaInfo\030\001 \001(\0132\031."
  "proto.ResponseMetaInfoV1\0225\n\017SwcSnapshotL"
  "ist\030\002 \003(\0132\034.proto.SwcSnapshotMetaInfoV1\""
  "i\n\023GetSnapshotResponse\022+\n\010metaInfo\030\002 \001(\013"
  "2\031.proto.ResponseMetaInfoV1\022%\n\013SwcNodeDa"
  "ta\030\003 \001(\0132\020.proto.SwcDataV1\"\246\001\n(GetAllInc"
  "rementOperationMetaInfoResponse\022+\n\010metaI"
  "nfo\030\001 \001(\0132\031.proto.ResponseMetaInfoV1\022M\n\035"
  "SwcIncrementOperationMetaInfo\030\002 \003(\0132&.pr"
  "oto.SwcIncrementOperationMetaInfoV1\"\223\001\n\035"
  "GetIncrementOperationResponse\022+\n\010metaInf"
  "o\030\001 \001(\0132\031.proto.ResponseMetaInfoV1\022E\n\031Sw"
  "cIncrementOperationList\030\002 \001(\0132\".proto.Sw"
  "cIncrementOperationListV1\"b\n\031CreateSwcNo"
  "deDataResponse\022+\n\010metaInfo\030\001 \001(\0132\031.proto"
  ".ResponseMetaInfoV1\022\030\n\020CreatedNodesUuid\030"
  "\002 \003(\t\"H\n\031DeleteSwcNodeDataResponse\022+\n\010me"
  "taInfo\030\001 \001(\0132\031.proto.ResponseMetaInfoV1\""
  "H\n\031UpdateSwcNodeDataResponse\022+\n\010metaInfo"
  "\030\001 \001(\0132\031.proto.ResponseMetaInfoV1\"l\n\026Get"
  "SwcNodeDataResponse\022+\n\010metaInfo\030\001 \001(\0132\031."
  "proto.ResponseMetaInfoV1\022%\n\013SwcNodeData\030"
  "\002 \001(\0132\020.proto.SwcDataV1\"p\n\032GetSwcFullNod"
  "eDataResponse\022+\n\010metaInfo\030\001 \001(\0132\031.proto."
  "ResponseMetaInfoV1\022%\n\013SwcNodeData\030\002 \001(\0132"
  "\020.proto.SwcDataV1\"}\n\'GetSwcNodeDataListB"
  "yTimeAndUserResponse\022+\n\010metaInfo\030\001 \001(\0132\031"
  ".proto.ResponseMetaInfoV1\022%\n\013SwcNodeData"
  "\030\002 \001(\0132\020.proto.SwcDataV1\"\225\001\n\032BackupFullD"
  "atabaseResponse\022+\n\010metaInfo\030\001 \001(\0132\031.prot"
  "o.ResponseMetaInfoV1\022\025\n\rInstantBackup\030\002 "
  "\001(\010\0223\n\017DelayBackupTime\030\003 \001(\0132\032.google.pr"
  "otobuf.Timestamp\"\213\001\n\035CreateDailyStatisti"
  "csResponse\022+\n\010metaInfo\030\001 \001(\0132\031.proto.Res"
  "ponseMetaInfoV1\022=\n\023DailyStatisticsInfo\030\002"
  " \001(\0132 .proto.DailyStatisticsMetaInfoV1\"\213"
  "\001\n\035DeleteDailyStatisticsResponse\022+\n\010meta"
  "Info\030\001 \001(\0132\031.proto.ResponseMetaInfoV1\022=\n"
  "\023DailyStatisticsInfo\030\002 \001(\0132 .proto.Daily"
  "StatisticsMetaInfoV1\"\213\001\n\035UpdateDailyStat"
  "isticsResponse\022+\n\010metaInfo\030\001 \001(\0132\031.proto"
  ".ResponseMetaInfoV1\022=\n\023DailyStatisticsIn"
  "fo\030\002 \001(\0132 .proto.DailyStatisticsMetaInfo"
  "V1\"\210\001\n\032GetDailyStatisticsResponse\022+\n\010met"
  "aInfo\030\001 \001(\0132\031.proto.ResponseMetaInfoV1\022="
  "\n\023DailyStatisticsInfo\030\002 \001(\0132 .proto.Dail"
  "yStatisticsMetaInfoV1\"\213\001\n\035GetAllDailySta"
  "tisticsResponse\022+\n\010metaInfo\030\001 \001(\0132\031.prot"
  "o.ResponseMetaInfoV1\022=\n\023DailyStatisticsI"
  "nfo\030\002 \003(\0132 .proto.DailyStatisticsMetaInf"
  "oV1\"h\n\036CreateSwcAttachmentAnoResponse\022+\n"
  "\010metaInfo\030\001 \001(\0132\031.proto.ResponseMetaInfo"
  "V1\022\031\n\021AnoAttachmentUuid\030\002 \001(\t\"M\n\036DeleteS"
  "wcAttachmentAnoResponse\022+\n\010metaInfo\030\001 \001("
  "\0132\031.proto.ResponseMetaInfoV1\"M\n\036UpdateSw"
  "cAttachmentAnoResponse\022+\n\010metaInfo\030\001 \001(\013"
  "2\031.proto.ResponseMetaInfoV1\"\177\n\033GetSwcAtt"
  "achmentAnoResponse\022+\n\010metaInfo\030\001 \001(\0132\031.p"
  "roto.ResponseMetaInfoV1\0223\n\020SwcAttachment"
  "Ano\030\002 \001(\0132\031.proto.SwcAttachmentAnoV1\"h\n\036"
  "CreateSwcAttachmentApoResponse\022+\n\010metaIn"
  "fo\030\001 \001(\0132\031.proto.ResponseMetaInfoV1\022\031\n\021A"
  "poAttachmentUuid\030\002 \001(\t\"M\n\036DeleteSwcAttac"
  "hmentApoResponse\022+\n\010metaInfo\030\001 \001(\0132\031.pro"
  "to.ResponseMetaInfoV1\"M\n\036UpdateSwcAttach"
  "mentApoResponse\022+\n\010metaInfo\030\001 \001(\0132\031.prot"
  "o.ResponseMetaInfoV1\"\177\n\033GetSwcAttachment"
  "ApoResponse\022+\n\010metaInfo\030\001 \001(\0132\031.proto.Re"
  "sponseMetaInfoV1\0223\n\020SwcAttachmentApo\030\002 \003"
  "(\0132\031.proto.SwcAttachmentApoV1\"G\n\030RevertS"
  "wcVersionResponse\022+\n\010metaInfo\030\001 \001(\0132\031.pr"
  "oto.ResponseMetaInfoV1B0Z.DBMS/SwcDbmsCo"
  "mmon/Generated/go/proto/responseP\000b\006prot"
  "o3"
  ;
static const ::_pbi::DescriptorTable* const descriptor_table_Message_2fResponse_2eproto_deps[2] = {
  &::descriptor_table_Message_2fMessage_2eproto,
  &::descriptor_table_google_2fprotobuf_2ftimestamp_2eproto,
};
static ::_pbi::once_flag descriptor_table_Message_2fResponse_2eproto_once;
const ::_pbi::DescriptorTable descriptor_table_Message_2fResponse_2eproto = {
    false, false, 5562, descriptor_table_protodef_Message_2fResponse_2eproto,
    "Message/Response.proto",
    &descriptor_table_Message_2fResponse_2eproto_once, descriptor_table_Message_2fResponse_2eproto_deps, 2, 48,
    schemas, file_default_instances, TableStruct_Message_2fResponse_2eproto::offsets,
    file_level_metadata_Message_2fResponse_2eproto, file_level_enum_descriptors_Message_2fResponse_2eproto,
    file_level_service_descriptors_Message_2fResponse_2eproto,
};
PROTOBUF_ATTRIBUTE_WEAK const ::_pbi::DescriptorTable* descriptor_table_Message_2fResponse_2eproto_getter() {
  return &descriptor_table_Message_2fResponse_2eproto;
}

// Force running AddDescriptors() at dynamic initialization time.
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::_pbi::AddDescriptorsRunner dynamic_init_dummy_Message_2fResponse_2eproto(&descriptor_table_Message_2fResponse_2eproto);
namespace proto {

// ===================================================================

class CreateUserResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const CreateUserResponse* msg);
  static const ::proto::UserMetaInfoV1& userinfo(const CreateUserResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
CreateUserResponse::_Internal::metainfo(const CreateUserResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserMetaInfoV1&
CreateUserResponse::_Internal::userinfo(const CreateUserResponse* msg) {
  return *msg->_impl_.userinfo_;
}
void CreateUserResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void CreateUserResponse::clear_userinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
}
CreateUserResponse::CreateUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateUserResponse)
}
CreateUserResponse::CreateUserResponse(const CreateUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userinfo()) {
    _this->_impl_.userinfo_ = new ::proto::UserMetaInfoV1(*from._impl_.userinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateUserResponse)
}

inline void CreateUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateUserResponse::~CreateUserResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userinfo_;
}

void CreateUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserMetaInfoV1 UserInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserMetaInfoV1 UserInfo = 2;
  if (this->_internal_has_userinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userinfo(this),
        _Internal::userinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateUserResponse)
  return target;
}

size_t CreateUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserMetaInfoV1 UserInfo = 2;
  if (this->_internal_has_userinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateUserResponse::GetClassData() const { return &_class_data_; }


void CreateUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateUserResponse*>(&to_msg);
  auto& from = static_cast<const CreateUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userinfo()) {
    _this->_internal_mutable_userinfo()->::proto::UserMetaInfoV1::MergeFrom(
        from._internal_userinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateUserResponse::CopyFrom(const CreateUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateUserResponse::IsInitialized() const {
  return true;
}

void CreateUserResponse::InternalSwap(CreateUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateUserResponse, _impl_.userinfo_)
      + sizeof(CreateUserResponse::_impl_.userinfo_)
      - PROTOBUF_FIELD_OFFSET(CreateUserResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[0]);
}

// ===================================================================

class DeleteUserResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const DeleteUserResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
DeleteUserResponse::_Internal::metainfo(const DeleteUserResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void DeleteUserResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
DeleteUserResponse::DeleteUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteUserResponse)
}
DeleteUserResponse::DeleteUserResponse(const DeleteUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteUserResponse)
}

inline void DeleteUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteUserResponse::~DeleteUserResponse() {
  // @@protoc_insertion_point(destructor:proto.DeleteUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void DeleteUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteUserResponse)
  return target;
}

size_t DeleteUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteUserResponse::GetClassData() const { return &_class_data_; }


void DeleteUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteUserResponse*>(&to_msg);
  auto& from = static_cast<const DeleteUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteUserResponse::CopyFrom(const DeleteUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteUserResponse::IsInitialized() const {
  return true;
}

void DeleteUserResponse::InternalSwap(DeleteUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[1]);
}

// ===================================================================

class UpdateUserResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const UpdateUserResponse* msg);
  static const ::proto::UserMetaInfoV1& userinfo(const UpdateUserResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
UpdateUserResponse::_Internal::metainfo(const UpdateUserResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserMetaInfoV1&
UpdateUserResponse::_Internal::userinfo(const UpdateUserResponse* msg) {
  return *msg->_impl_.userinfo_;
}
void UpdateUserResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UpdateUserResponse::clear_userinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
}
UpdateUserResponse::UpdateUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateUserResponse)
}
UpdateUserResponse::UpdateUserResponse(const UpdateUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userinfo()) {
    _this->_impl_.userinfo_ = new ::proto::UserMetaInfoV1(*from._impl_.userinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateUserResponse)
}

inline void UpdateUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateUserResponse::~UpdateUserResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userinfo_;
}

void UpdateUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserMetaInfoV1 UserInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserMetaInfoV1 UserInfo = 2;
  if (this->_internal_has_userinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userinfo(this),
        _Internal::userinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateUserResponse)
  return target;
}

size_t UpdateUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserMetaInfoV1 UserInfo = 2;
  if (this->_internal_has_userinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateUserResponse::GetClassData() const { return &_class_data_; }


void UpdateUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateUserResponse*>(&to_msg);
  auto& from = static_cast<const UpdateUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userinfo()) {
    _this->_internal_mutable_userinfo()->::proto::UserMetaInfoV1::MergeFrom(
        from._internal_userinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateUserResponse::CopyFrom(const UpdateUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateUserResponse::IsInitialized() const {
  return true;
}

void UpdateUserResponse::InternalSwap(UpdateUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateUserResponse, _impl_.userinfo_)
      + sizeof(UpdateUserResponse::_impl_.userinfo_)
      - PROTOBUF_FIELD_OFFSET(UpdateUserResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[2]);
}

// ===================================================================

class GetUserResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetUserResponse* msg);
  static const ::proto::UserMetaInfoV1& userinfo(const GetUserResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetUserResponse::_Internal::metainfo(const GetUserResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserMetaInfoV1&
GetUserResponse::_Internal::userinfo(const GetUserResponse* msg) {
  return *msg->_impl_.userinfo_;
}
void GetUserResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetUserResponse::clear_userinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
}
GetUserResponse::GetUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetUserResponse)
}
GetUserResponse::GetUserResponse(const GetUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userinfo()) {
    _this->_impl_.userinfo_ = new ::proto::UserMetaInfoV1(*from._impl_.userinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetUserResponse)
}

inline void GetUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetUserResponse::~GetUserResponse() {
  // @@protoc_insertion_point(destructor:proto.GetUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userinfo_;
}

void GetUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserMetaInfoV1 UserInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserMetaInfoV1 UserInfo = 2;
  if (this->_internal_has_userinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userinfo(this),
        _Internal::userinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetUserResponse)
  return target;
}

size_t GetUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserMetaInfoV1 UserInfo = 2;
  if (this->_internal_has_userinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserResponse::GetClassData() const { return &_class_data_; }


void GetUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserResponse*>(&to_msg);
  auto& from = static_cast<const GetUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userinfo()) {
    _this->_internal_mutable_userinfo()->::proto::UserMetaInfoV1::MergeFrom(
        from._internal_userinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserResponse::CopyFrom(const GetUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserResponse::IsInitialized() const {
  return true;
}

void GetUserResponse::InternalSwap(GetUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetUserResponse, _impl_.userinfo_)
      + sizeof(GetUserResponse::_impl_.userinfo_)
      - PROTOBUF_FIELD_OFFSET(GetUserResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[3]);
}

// ===================================================================

class GetAllUserResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetAllUserResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetAllUserResponse::_Internal::metainfo(const GetAllUserResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void GetAllUserResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllUserResponse::clear_userinfo() {
  _impl_.userinfo_.Clear();
}
GetAllUserResponse::GetAllUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllUserResponse)
}
GetAllUserResponse::GetAllUserResponse(const GetAllUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.userinfo_){from._impl_.userinfo_}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllUserResponse)
}

inline void GetAllUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.userinfo_){arena}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllUserResponse::~GetAllUserResponse() {
  // @@protoc_insertion_point(destructor:proto.GetAllUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.userinfo_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void GetAllUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.userinfo_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.UserMetaInfoV1 UserInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_userinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // repeated .proto.UserMetaInfoV1 UserInfo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_userinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_userinfo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllUserResponse)
  return target;
}

size_t GetAllUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.UserMetaInfoV1 UserInfo = 2;
  total_size += 1UL * this->_internal_userinfo_size();
  for (const auto& msg : this->_impl_.userinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllUserResponse::GetClassData() const { return &_class_data_; }


void GetAllUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllUserResponse*>(&to_msg);
  auto& from = static_cast<const GetAllUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.userinfo_.MergeFrom(from._impl_.userinfo_);
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllUserResponse::CopyFrom(const GetAllUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllUserResponse::IsInitialized() const {
  return true;
}

void GetAllUserResponse::InternalSwap(GetAllUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.userinfo_.InternalSwap(&other->_impl_.userinfo_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[4]);
}

// ===================================================================

class UserLoginResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const UserLoginResponse* msg);
  static const ::proto::UserMetaInfoV1& userinfo(const UserLoginResponse* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const UserLoginResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
UserLoginResponse::_Internal::metainfo(const UserLoginResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserMetaInfoV1&
UserLoginResponse::_Internal::userinfo(const UserLoginResponse* msg) {
  return *msg->_impl_.userinfo_;
}
const ::proto::UserVerifyInfoV1&
UserLoginResponse::_Internal::userverifyinfo(const UserLoginResponse* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void UserLoginResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UserLoginResponse::clear_userinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
}
void UserLoginResponse::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
UserLoginResponse::UserLoginResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserLoginResponse)
}
UserLoginResponse::UserLoginResponse(const UserLoginResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserLoginResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userinfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userinfo()) {
    _this->_impl_.userinfo_ = new ::proto::UserMetaInfoV1(*from._impl_.userinfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UserLoginResponse)
}

inline void UserLoginResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userinfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UserLoginResponse::~UserLoginResponse() {
  // @@protoc_insertion_point(destructor:proto.UserLoginResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserLoginResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userinfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void UserLoginResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserLoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserLoginResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userinfo_ != nullptr) {
    delete _impl_.userinfo_;
  }
  _impl_.userinfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserLoginResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserMetaInfoV1 UserInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserLoginResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserLoginResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserMetaInfoV1 UserInfo = 2;
  if (this->_internal_has_userinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userinfo(this),
        _Internal::userinfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 3;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserLoginResponse)
  return target;
}

size_t UserLoginResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserLoginResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserMetaInfoV1 UserInfo = 2;
  if (this->_internal_has_userinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userinfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 3;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserLoginResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserLoginResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserLoginResponse::GetClassData() const { return &_class_data_; }


void UserLoginResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserLoginResponse*>(&to_msg);
  auto& from = static_cast<const UserLoginResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserLoginResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userinfo()) {
    _this->_internal_mutable_userinfo()->::proto::UserMetaInfoV1::MergeFrom(
        from._internal_userinfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserLoginResponse::CopyFrom(const UserLoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserLoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLoginResponse::IsInitialized() const {
  return true;
}

void UserLoginResponse::InternalSwap(UserLoginResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserLoginResponse, _impl_.userverifyinfo_)
      + sizeof(UserLoginResponse::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(UserLoginResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserLoginResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[5]);
}

// ===================================================================

class UserLogoutResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const UserLogoutResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
UserLogoutResponse::_Internal::metainfo(const UserLogoutResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void UserLogoutResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
UserLogoutResponse::UserLogoutResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserLogoutResponse)
}
UserLogoutResponse::UserLogoutResponse(const UserLogoutResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserLogoutResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UserLogoutResponse)
}

inline void UserLogoutResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UserLogoutResponse::~UserLogoutResponse() {
  // @@protoc_insertion_point(destructor:proto.UserLogoutResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserLogoutResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void UserLogoutResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserLogoutResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserLogoutResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserLogoutResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserLogoutResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserLogoutResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserLogoutResponse)
  return target;
}

size_t UserLogoutResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserLogoutResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserLogoutResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserLogoutResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserLogoutResponse::GetClassData() const { return &_class_data_; }


void UserLogoutResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserLogoutResponse*>(&to_msg);
  auto& from = static_cast<const UserLogoutResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserLogoutResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserLogoutResponse::CopyFrom(const UserLogoutResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserLogoutResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserLogoutResponse::IsInitialized() const {
  return true;
}

void UserLogoutResponse::InternalSwap(UserLogoutResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UserLogoutResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[6]);
}

// ===================================================================

class UserOnlineHeartBeatResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const UserOnlineHeartBeatResponse* msg);
  static const ::proto::UserVerifyInfoV1& userverifyinfo(const UserOnlineHeartBeatResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
UserOnlineHeartBeatResponse::_Internal::metainfo(const UserOnlineHeartBeatResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::UserVerifyInfoV1&
UserOnlineHeartBeatResponse::_Internal::userverifyinfo(const UserOnlineHeartBeatResponse* msg) {
  return *msg->_impl_.userverifyinfo_;
}
void UserOnlineHeartBeatResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UserOnlineHeartBeatResponse::clear_userverifyinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
}
UserOnlineHeartBeatResponse::UserOnlineHeartBeatResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UserOnlineHeartBeatResponse)
}
UserOnlineHeartBeatResponse::UserOnlineHeartBeatResponse(const UserOnlineHeartBeatResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UserOnlineHeartBeatResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_impl_.userverifyinfo_ = new ::proto::UserVerifyInfoV1(*from._impl_.userverifyinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UserOnlineHeartBeatResponse)
}

inline void UserOnlineHeartBeatResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.userverifyinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UserOnlineHeartBeatResponse::~UserOnlineHeartBeatResponse() {
  // @@protoc_insertion_point(destructor:proto.UserOnlineHeartBeatResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UserOnlineHeartBeatResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.userverifyinfo_;
}

void UserOnlineHeartBeatResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UserOnlineHeartBeatResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UserOnlineHeartBeatResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.userverifyinfo_ != nullptr) {
    delete _impl_.userverifyinfo_;
  }
  _impl_.userverifyinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UserOnlineHeartBeatResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_userverifyinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UserOnlineHeartBeatResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UserOnlineHeartBeatResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::userverifyinfo(this),
        _Internal::userverifyinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UserOnlineHeartBeatResponse)
  return target;
}

size_t UserOnlineHeartBeatResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UserOnlineHeartBeatResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.UserVerifyInfoV1 UserVerifyInfo = 2;
  if (this->_internal_has_userverifyinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.userverifyinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UserOnlineHeartBeatResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UserOnlineHeartBeatResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UserOnlineHeartBeatResponse::GetClassData() const { return &_class_data_; }


void UserOnlineHeartBeatResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UserOnlineHeartBeatResponse*>(&to_msg);
  auto& from = static_cast<const UserOnlineHeartBeatResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UserOnlineHeartBeatResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_userverifyinfo()) {
    _this->_internal_mutable_userverifyinfo()->::proto::UserVerifyInfoV1::MergeFrom(
        from._internal_userverifyinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UserOnlineHeartBeatResponse::CopyFrom(const UserOnlineHeartBeatResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UserOnlineHeartBeatResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UserOnlineHeartBeatResponse::IsInitialized() const {
  return true;
}

void UserOnlineHeartBeatResponse::InternalSwap(UserOnlineHeartBeatResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UserOnlineHeartBeatResponse, _impl_.userverifyinfo_)
      + sizeof(UserOnlineHeartBeatResponse::_impl_.userverifyinfo_)
      - PROTOBUF_FIELD_OFFSET(UserOnlineHeartBeatResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UserOnlineHeartBeatResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[7]);
}

// ===================================================================

class GetUserPermissionGroupResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetUserPermissionGroupResponse* msg);
  static const ::proto::PermissionGroupMetaInfoV1& permissiongroup(const GetUserPermissionGroupResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetUserPermissionGroupResponse::_Internal::metainfo(const GetUserPermissionGroupResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::PermissionGroupMetaInfoV1&
GetUserPermissionGroupResponse::_Internal::permissiongroup(const GetUserPermissionGroupResponse* msg) {
  return *msg->_impl_.permissiongroup_;
}
void GetUserPermissionGroupResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetUserPermissionGroupResponse::clear_permissiongroup() {
  if (GetArenaForAllocation() == nullptr && _impl_.permissiongroup_ != nullptr) {
    delete _impl_.permissiongroup_;
  }
  _impl_.permissiongroup_ = nullptr;
}
GetUserPermissionGroupResponse::GetUserPermissionGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetUserPermissionGroupResponse)
}
GetUserPermissionGroupResponse::GetUserPermissionGroupResponse(const GetUserPermissionGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetUserPermissionGroupResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.permissiongroup_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_permissiongroup()) {
    _this->_impl_.permissiongroup_ = new ::proto::PermissionGroupMetaInfoV1(*from._impl_.permissiongroup_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetUserPermissionGroupResponse)
}

inline void GetUserPermissionGroupResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.permissiongroup_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetUserPermissionGroupResponse::~GetUserPermissionGroupResponse() {
  // @@protoc_insertion_point(destructor:proto.GetUserPermissionGroupResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetUserPermissionGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.permissiongroup_;
}

void GetUserPermissionGroupResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetUserPermissionGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetUserPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.permissiongroup_ != nullptr) {
    delete _impl_.permissiongroup_;
  }
  _impl_.permissiongroup_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetUserPermissionGroupResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_permissiongroup(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetUserPermissionGroupResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetUserPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 2;
  if (this->_internal_has_permissiongroup()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::permissiongroup(this),
        _Internal::permissiongroup(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetUserPermissionGroupResponse)
  return target;
}

size_t GetUserPermissionGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetUserPermissionGroupResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 2;
  if (this->_internal_has_permissiongroup()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.permissiongroup_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetUserPermissionGroupResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetUserPermissionGroupResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetUserPermissionGroupResponse::GetClassData() const { return &_class_data_; }


void GetUserPermissionGroupResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetUserPermissionGroupResponse*>(&to_msg);
  auto& from = static_cast<const GetUserPermissionGroupResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetUserPermissionGroupResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_permissiongroup()) {
    _this->_internal_mutable_permissiongroup()->::proto::PermissionGroupMetaInfoV1::MergeFrom(
        from._internal_permissiongroup());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetUserPermissionGroupResponse::CopyFrom(const GetUserPermissionGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetUserPermissionGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetUserPermissionGroupResponse::IsInitialized() const {
  return true;
}

void GetUserPermissionGroupResponse::InternalSwap(GetUserPermissionGroupResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetUserPermissionGroupResponse, _impl_.permissiongroup_)
      + sizeof(GetUserPermissionGroupResponse::_impl_.permissiongroup_)
      - PROTOBUF_FIELD_OFFSET(GetUserPermissionGroupResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetUserPermissionGroupResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[8]);
}

// ===================================================================

class GetPermissionGroupResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetPermissionGroupResponse* msg);
  static const ::proto::PermissionGroupMetaInfoV1& permissiongroup(const GetPermissionGroupResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetPermissionGroupResponse::_Internal::metainfo(const GetPermissionGroupResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::PermissionGroupMetaInfoV1&
GetPermissionGroupResponse::_Internal::permissiongroup(const GetPermissionGroupResponse* msg) {
  return *msg->_impl_.permissiongroup_;
}
void GetPermissionGroupResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetPermissionGroupResponse::clear_permissiongroup() {
  if (GetArenaForAllocation() == nullptr && _impl_.permissiongroup_ != nullptr) {
    delete _impl_.permissiongroup_;
  }
  _impl_.permissiongroup_ = nullptr;
}
GetPermissionGroupResponse::GetPermissionGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetPermissionGroupResponse)
}
GetPermissionGroupResponse::GetPermissionGroupResponse(const GetPermissionGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetPermissionGroupResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.permissiongroup_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_permissiongroup()) {
    _this->_impl_.permissiongroup_ = new ::proto::PermissionGroupMetaInfoV1(*from._impl_.permissiongroup_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetPermissionGroupResponse)
}

inline void GetPermissionGroupResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.permissiongroup_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetPermissionGroupResponse::~GetPermissionGroupResponse() {
  // @@protoc_insertion_point(destructor:proto.GetPermissionGroupResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetPermissionGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.permissiongroup_;
}

void GetPermissionGroupResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetPermissionGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.permissiongroup_ != nullptr) {
    delete _impl_.permissiongroup_;
  }
  _impl_.permissiongroup_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetPermissionGroupResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_permissiongroup(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetPermissionGroupResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 2;
  if (this->_internal_has_permissiongroup()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::permissiongroup(this),
        _Internal::permissiongroup(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetPermissionGroupResponse)
  return target;
}

size_t GetPermissionGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetPermissionGroupResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.PermissionGroupMetaInfoV1 PermissionGroup = 2;
  if (this->_internal_has_permissiongroup()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.permissiongroup_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetPermissionGroupResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetPermissionGroupResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetPermissionGroupResponse::GetClassData() const { return &_class_data_; }


void GetPermissionGroupResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetPermissionGroupResponse*>(&to_msg);
  auto& from = static_cast<const GetPermissionGroupResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetPermissionGroupResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_permissiongroup()) {
    _this->_internal_mutable_permissiongroup()->::proto::PermissionGroupMetaInfoV1::MergeFrom(
        from._internal_permissiongroup());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetPermissionGroupResponse::CopyFrom(const GetPermissionGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetPermissionGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetPermissionGroupResponse::IsInitialized() const {
  return true;
}

void GetPermissionGroupResponse::InternalSwap(GetPermissionGroupResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetPermissionGroupResponse, _impl_.permissiongroup_)
      + sizeof(GetPermissionGroupResponse::_impl_.permissiongroup_)
      - PROTOBUF_FIELD_OFFSET(GetPermissionGroupResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetPermissionGroupResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[9]);
}

// ===================================================================

class GetAllPermissionGroupResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetAllPermissionGroupResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetAllPermissionGroupResponse::_Internal::metainfo(const GetAllPermissionGroupResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void GetAllPermissionGroupResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllPermissionGroupResponse::clear_permissiongrouplist() {
  _impl_.permissiongrouplist_.Clear();
}
GetAllPermissionGroupResponse::GetAllPermissionGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllPermissionGroupResponse)
}
GetAllPermissionGroupResponse::GetAllPermissionGroupResponse(const GetAllPermissionGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllPermissionGroupResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.permissiongrouplist_){from._impl_.permissiongrouplist_}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllPermissionGroupResponse)
}

inline void GetAllPermissionGroupResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.permissiongrouplist_){arena}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllPermissionGroupResponse::~GetAllPermissionGroupResponse() {
  // @@protoc_insertion_point(destructor:proto.GetAllPermissionGroupResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllPermissionGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.permissiongrouplist_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void GetAllPermissionGroupResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllPermissionGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.permissiongrouplist_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllPermissionGroupResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.PermissionGroupMetaInfoV1 PermissionGroupList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_permissiongrouplist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllPermissionGroupResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // repeated .proto.PermissionGroupMetaInfoV1 PermissionGroupList = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_permissiongrouplist_size()); i < n; i++) {
    const auto& repfield = this->_internal_permissiongrouplist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllPermissionGroupResponse)
  return target;
}

size_t GetAllPermissionGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllPermissionGroupResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.PermissionGroupMetaInfoV1 PermissionGroupList = 2;
  total_size += 1UL * this->_internal_permissiongrouplist_size();
  for (const auto& msg : this->_impl_.permissiongrouplist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllPermissionGroupResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllPermissionGroupResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllPermissionGroupResponse::GetClassData() const { return &_class_data_; }


void GetAllPermissionGroupResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllPermissionGroupResponse*>(&to_msg);
  auto& from = static_cast<const GetAllPermissionGroupResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllPermissionGroupResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.permissiongrouplist_.MergeFrom(from._impl_.permissiongrouplist_);
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllPermissionGroupResponse::CopyFrom(const GetAllPermissionGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllPermissionGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllPermissionGroupResponse::IsInitialized() const {
  return true;
}

void GetAllPermissionGroupResponse::InternalSwap(GetAllPermissionGroupResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.permissiongrouplist_.InternalSwap(&other->_impl_.permissiongrouplist_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllPermissionGroupResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[10]);
}

// ===================================================================

class ChangeUserPermissionGroupResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const ChangeUserPermissionGroupResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
ChangeUserPermissionGroupResponse::_Internal::metainfo(const ChangeUserPermissionGroupResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void ChangeUserPermissionGroupResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
ChangeUserPermissionGroupResponse::ChangeUserPermissionGroupResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.ChangeUserPermissionGroupResponse)
}
ChangeUserPermissionGroupResponse::ChangeUserPermissionGroupResponse(const ChangeUserPermissionGroupResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  ChangeUserPermissionGroupResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.ChangeUserPermissionGroupResponse)
}

inline void ChangeUserPermissionGroupResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

ChangeUserPermissionGroupResponse::~ChangeUserPermissionGroupResponse() {
  // @@protoc_insertion_point(destructor:proto.ChangeUserPermissionGroupResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void ChangeUserPermissionGroupResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void ChangeUserPermissionGroupResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void ChangeUserPermissionGroupResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.ChangeUserPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* ChangeUserPermissionGroupResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* ChangeUserPermissionGroupResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.ChangeUserPermissionGroupResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.ChangeUserPermissionGroupResponse)
  return target;
}

size_t ChangeUserPermissionGroupResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.ChangeUserPermissionGroupResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData ChangeUserPermissionGroupResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    ChangeUserPermissionGroupResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*ChangeUserPermissionGroupResponse::GetClassData() const { return &_class_data_; }


void ChangeUserPermissionGroupResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<ChangeUserPermissionGroupResponse*>(&to_msg);
  auto& from = static_cast<const ChangeUserPermissionGroupResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.ChangeUserPermissionGroupResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void ChangeUserPermissionGroupResponse::CopyFrom(const ChangeUserPermissionGroupResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.ChangeUserPermissionGroupResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeUserPermissionGroupResponse::IsInitialized() const {
  return true;
}

void ChangeUserPermissionGroupResponse::InternalSwap(ChangeUserPermissionGroupResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata ChangeUserPermissionGroupResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[11]);
}

// ===================================================================

class CreateProjectResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const CreateProjectResponse* msg);
  static const ::proto::ProjectMetaInfoV1& projectinfo(const CreateProjectResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
CreateProjectResponse::_Internal::metainfo(const CreateProjectResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::ProjectMetaInfoV1&
CreateProjectResponse::_Internal::projectinfo(const CreateProjectResponse* msg) {
  return *msg->_impl_.projectinfo_;
}
void CreateProjectResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void CreateProjectResponse::clear_projectinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
}
CreateProjectResponse::CreateProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateProjectResponse)
}
CreateProjectResponse::CreateProjectResponse(const CreateProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateProjectResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.projectinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_projectinfo()) {
    _this->_impl_.projectinfo_ = new ::proto::ProjectMetaInfoV1(*from._impl_.projectinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateProjectResponse)
}

inline void CreateProjectResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.projectinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateProjectResponse::~CreateProjectResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateProjectResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.projectinfo_;
}

void CreateProjectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateProjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateProjectResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectMetaInfoV1 ProjectInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateProjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateProjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 2;
  if (this->_internal_has_projectinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::projectinfo(this),
        _Internal::projectinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateProjectResponse)
  return target;
}

size_t CreateProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateProjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 2;
  if (this->_internal_has_projectinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateProjectResponse::GetClassData() const { return &_class_data_; }


void CreateProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateProjectResponse*>(&to_msg);
  auto& from = static_cast<const CreateProjectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateProjectResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_projectinfo()) {
    _this->_internal_mutable_projectinfo()->::proto::ProjectMetaInfoV1::MergeFrom(
        from._internal_projectinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateProjectResponse::CopyFrom(const CreateProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateProjectResponse::IsInitialized() const {
  return true;
}

void CreateProjectResponse::InternalSwap(CreateProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateProjectResponse, _impl_.projectinfo_)
      + sizeof(CreateProjectResponse::_impl_.projectinfo_)
      - PROTOBUF_FIELD_OFFSET(CreateProjectResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateProjectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[12]);
}

// ===================================================================

class DeleteProjectResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const DeleteProjectResponse* msg);
  static const ::proto::ProjectMetaInfoV1& projectinfo(const DeleteProjectResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
DeleteProjectResponse::_Internal::metainfo(const DeleteProjectResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::ProjectMetaInfoV1&
DeleteProjectResponse::_Internal::projectinfo(const DeleteProjectResponse* msg) {
  return *msg->_impl_.projectinfo_;
}
void DeleteProjectResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void DeleteProjectResponse::clear_projectinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
}
DeleteProjectResponse::DeleteProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteProjectResponse)
}
DeleteProjectResponse::DeleteProjectResponse(const DeleteProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteProjectResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.projectinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_projectinfo()) {
    _this->_impl_.projectinfo_ = new ::proto::ProjectMetaInfoV1(*from._impl_.projectinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteProjectResponse)
}

inline void DeleteProjectResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.projectinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteProjectResponse::~DeleteProjectResponse() {
  // @@protoc_insertion_point(destructor:proto.DeleteProjectResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.projectinfo_;
}

void DeleteProjectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteProjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteProjectResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectMetaInfoV1 ProjectInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteProjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteProjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 2;
  if (this->_internal_has_projectinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::projectinfo(this),
        _Internal::projectinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteProjectResponse)
  return target;
}

size_t DeleteProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteProjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 2;
  if (this->_internal_has_projectinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteProjectResponse::GetClassData() const { return &_class_data_; }


void DeleteProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteProjectResponse*>(&to_msg);
  auto& from = static_cast<const DeleteProjectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteProjectResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_projectinfo()) {
    _this->_internal_mutable_projectinfo()->::proto::ProjectMetaInfoV1::MergeFrom(
        from._internal_projectinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteProjectResponse::CopyFrom(const DeleteProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteProjectResponse::IsInitialized() const {
  return true;
}

void DeleteProjectResponse::InternalSwap(DeleteProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteProjectResponse, _impl_.projectinfo_)
      + sizeof(DeleteProjectResponse::_impl_.projectinfo_)
      - PROTOBUF_FIELD_OFFSET(DeleteProjectResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteProjectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[13]);
}

// ===================================================================

class UpdateProjectResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const UpdateProjectResponse* msg);
  static const ::proto::ProjectMetaInfoV1& projectinfo(const UpdateProjectResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
UpdateProjectResponse::_Internal::metainfo(const UpdateProjectResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::ProjectMetaInfoV1&
UpdateProjectResponse::_Internal::projectinfo(const UpdateProjectResponse* msg) {
  return *msg->_impl_.projectinfo_;
}
void UpdateProjectResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UpdateProjectResponse::clear_projectinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
}
UpdateProjectResponse::UpdateProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateProjectResponse)
}
UpdateProjectResponse::UpdateProjectResponse(const UpdateProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateProjectResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.projectinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_projectinfo()) {
    _this->_impl_.projectinfo_ = new ::proto::ProjectMetaInfoV1(*from._impl_.projectinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateProjectResponse)
}

inline void UpdateProjectResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.projectinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateProjectResponse::~UpdateProjectResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateProjectResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.projectinfo_;
}

void UpdateProjectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateProjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateProjectResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectMetaInfoV1 ProjectInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateProjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateProjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 2;
  if (this->_internal_has_projectinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::projectinfo(this),
        _Internal::projectinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateProjectResponse)
  return target;
}

size_t UpdateProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateProjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 2;
  if (this->_internal_has_projectinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateProjectResponse::GetClassData() const { return &_class_data_; }


void UpdateProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateProjectResponse*>(&to_msg);
  auto& from = static_cast<const UpdateProjectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateProjectResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_projectinfo()) {
    _this->_internal_mutable_projectinfo()->::proto::ProjectMetaInfoV1::MergeFrom(
        from._internal_projectinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateProjectResponse::CopyFrom(const UpdateProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateProjectResponse::IsInitialized() const {
  return true;
}

void UpdateProjectResponse::InternalSwap(UpdateProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateProjectResponse, _impl_.projectinfo_)
      + sizeof(UpdateProjectResponse::_impl_.projectinfo_)
      - PROTOBUF_FIELD_OFFSET(UpdateProjectResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateProjectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[14]);
}

// ===================================================================

class GetProjectResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetProjectResponse* msg);
  static const ::proto::ProjectMetaInfoV1& projectinfo(const GetProjectResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetProjectResponse::_Internal::metainfo(const GetProjectResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::ProjectMetaInfoV1&
GetProjectResponse::_Internal::projectinfo(const GetProjectResponse* msg) {
  return *msg->_impl_.projectinfo_;
}
void GetProjectResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetProjectResponse::clear_projectinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
}
GetProjectResponse::GetProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetProjectResponse)
}
GetProjectResponse::GetProjectResponse(const GetProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetProjectResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.projectinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_projectinfo()) {
    _this->_impl_.projectinfo_ = new ::proto::ProjectMetaInfoV1(*from._impl_.projectinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetProjectResponse)
}

inline void GetProjectResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.projectinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetProjectResponse::~GetProjectResponse() {
  // @@protoc_insertion_point(destructor:proto.GetProjectResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.projectinfo_;
}

void GetProjectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetProjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.projectinfo_ != nullptr) {
    delete _impl_.projectinfo_;
  }
  _impl_.projectinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetProjectResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.ProjectMetaInfoV1 ProjectInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_projectinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetProjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetProjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 2;
  if (this->_internal_has_projectinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::projectinfo(this),
        _Internal::projectinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetProjectResponse)
  return target;
}

size_t GetProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetProjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.ProjectMetaInfoV1 ProjectInfo = 2;
  if (this->_internal_has_projectinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.projectinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetProjectResponse::GetClassData() const { return &_class_data_; }


void GetProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetProjectResponse*>(&to_msg);
  auto& from = static_cast<const GetProjectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetProjectResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_projectinfo()) {
    _this->_internal_mutable_projectinfo()->::proto::ProjectMetaInfoV1::MergeFrom(
        from._internal_projectinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetProjectResponse::CopyFrom(const GetProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetProjectResponse::IsInitialized() const {
  return true;
}

void GetProjectResponse::InternalSwap(GetProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetProjectResponse, _impl_.projectinfo_)
      + sizeof(GetProjectResponse::_impl_.projectinfo_)
      - PROTOBUF_FIELD_OFFSET(GetProjectResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetProjectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[15]);
}

// ===================================================================

class GetAllProjectResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetAllProjectResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetAllProjectResponse::_Internal::metainfo(const GetAllProjectResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void GetAllProjectResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllProjectResponse::clear_projectinfo() {
  _impl_.projectinfo_.Clear();
}
GetAllProjectResponse::GetAllProjectResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllProjectResponse)
}
GetAllProjectResponse::GetAllProjectResponse(const GetAllProjectResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllProjectResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.projectinfo_){from._impl_.projectinfo_}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllProjectResponse)
}

inline void GetAllProjectResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.projectinfo_){arena}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllProjectResponse::~GetAllProjectResponse() {
  // @@protoc_insertion_point(destructor:proto.GetAllProjectResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllProjectResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.projectinfo_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void GetAllProjectResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllProjectResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllProjectResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.projectinfo_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllProjectResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.ProjectMetaInfoV1 ProjectInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_projectinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllProjectResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllProjectResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // repeated .proto.ProjectMetaInfoV1 ProjectInfo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_projectinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_projectinfo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllProjectResponse)
  return target;
}

size_t GetAllProjectResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllProjectResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.ProjectMetaInfoV1 ProjectInfo = 2;
  total_size += 1UL * this->_internal_projectinfo_size();
  for (const auto& msg : this->_impl_.projectinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllProjectResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllProjectResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllProjectResponse::GetClassData() const { return &_class_data_; }


void GetAllProjectResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllProjectResponse*>(&to_msg);
  auto& from = static_cast<const GetAllProjectResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllProjectResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.projectinfo_.MergeFrom(from._impl_.projectinfo_);
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllProjectResponse::CopyFrom(const GetAllProjectResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllProjectResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllProjectResponse::IsInitialized() const {
  return true;
}

void GetAllProjectResponse::InternalSwap(GetAllProjectResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.projectinfo_.InternalSwap(&other->_impl_.projectinfo_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllProjectResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[16]);
}

// ===================================================================

class CreateSwcResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const CreateSwcResponse* msg);
  static const ::proto::SwcMetaInfoV1& swcinfo(const CreateSwcResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
CreateSwcResponse::_Internal::metainfo(const CreateSwcResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::SwcMetaInfoV1&
CreateSwcResponse::_Internal::swcinfo(const CreateSwcResponse* msg) {
  return *msg->_impl_.swcinfo_;
}
void CreateSwcResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void CreateSwcResponse::clear_swcinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
}
CreateSwcResponse::CreateSwcResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateSwcResponse)
}
CreateSwcResponse::CreateSwcResponse(const CreateSwcResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSwcResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_swcinfo()) {
    _this->_impl_.swcinfo_ = new ::proto::SwcMetaInfoV1(*from._impl_.swcinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateSwcResponse)
}

inline void CreateSwcResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateSwcResponse::~CreateSwcResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateSwcResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSwcResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.swcinfo_;
}

void CreateSwcResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSwcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateSwcResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSwcResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcMetaInfoV1 SwcInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSwcResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateSwcResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 2;
  if (this->_internal_has_swcinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::swcinfo(this),
        _Internal::swcinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateSwcResponse)
  return target;
}

size_t CreateSwcResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateSwcResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 2;
  if (this->_internal_has_swcinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSwcResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSwcResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSwcResponse::GetClassData() const { return &_class_data_; }


void CreateSwcResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSwcResponse*>(&to_msg);
  auto& from = static_cast<const CreateSwcResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateSwcResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_swcinfo()) {
    _this->_internal_mutable_swcinfo()->::proto::SwcMetaInfoV1::MergeFrom(
        from._internal_swcinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSwcResponse::CopyFrom(const CreateSwcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateSwcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSwcResponse::IsInitialized() const {
  return true;
}

void CreateSwcResponse::InternalSwap(CreateSwcResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateSwcResponse, _impl_.swcinfo_)
      + sizeof(CreateSwcResponse::_impl_.swcinfo_)
      - PROTOBUF_FIELD_OFFSET(CreateSwcResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSwcResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[17]);
}

// ===================================================================

class DeleteSwcResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const DeleteSwcResponse* msg);
  static const ::proto::SwcMetaInfoV1& swcinfo(const DeleteSwcResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
DeleteSwcResponse::_Internal::metainfo(const DeleteSwcResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::SwcMetaInfoV1&
DeleteSwcResponse::_Internal::swcinfo(const DeleteSwcResponse* msg) {
  return *msg->_impl_.swcinfo_;
}
void DeleteSwcResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void DeleteSwcResponse::clear_swcinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
}
DeleteSwcResponse::DeleteSwcResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteSwcResponse)
}
DeleteSwcResponse::DeleteSwcResponse(const DeleteSwcResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteSwcResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_swcinfo()) {
    _this->_impl_.swcinfo_ = new ::proto::SwcMetaInfoV1(*from._impl_.swcinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteSwcResponse)
}

inline void DeleteSwcResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteSwcResponse::~DeleteSwcResponse() {
  // @@protoc_insertion_point(destructor:proto.DeleteSwcResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteSwcResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.swcinfo_;
}

void DeleteSwcResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteSwcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteSwcResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSwcResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcMetaInfoV1 SwcInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSwcResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteSwcResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 2;
  if (this->_internal_has_swcinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::swcinfo(this),
        _Internal::swcinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteSwcResponse)
  return target;
}

size_t DeleteSwcResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteSwcResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 2;
  if (this->_internal_has_swcinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSwcResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteSwcResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSwcResponse::GetClassData() const { return &_class_data_; }


void DeleteSwcResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteSwcResponse*>(&to_msg);
  auto& from = static_cast<const DeleteSwcResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteSwcResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_swcinfo()) {
    _this->_internal_mutable_swcinfo()->::proto::SwcMetaInfoV1::MergeFrom(
        from._internal_swcinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSwcResponse::CopyFrom(const DeleteSwcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteSwcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSwcResponse::IsInitialized() const {
  return true;
}

void DeleteSwcResponse::InternalSwap(DeleteSwcResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteSwcResponse, _impl_.swcinfo_)
      + sizeof(DeleteSwcResponse::_impl_.swcinfo_)
      - PROTOBUF_FIELD_OFFSET(DeleteSwcResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSwcResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[18]);
}

// ===================================================================

class UpdateSwcResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const UpdateSwcResponse* msg);
  static const ::proto::SwcMetaInfoV1& swcinfo(const UpdateSwcResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
UpdateSwcResponse::_Internal::metainfo(const UpdateSwcResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::SwcMetaInfoV1&
UpdateSwcResponse::_Internal::swcinfo(const UpdateSwcResponse* msg) {
  return *msg->_impl_.swcinfo_;
}
void UpdateSwcResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UpdateSwcResponse::clear_swcinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
}
UpdateSwcResponse::UpdateSwcResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateSwcResponse)
}
UpdateSwcResponse::UpdateSwcResponse(const UpdateSwcResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateSwcResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_swcinfo()) {
    _this->_impl_.swcinfo_ = new ::proto::SwcMetaInfoV1(*from._impl_.swcinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateSwcResponse)
}

inline void UpdateSwcResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateSwcResponse::~UpdateSwcResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateSwcResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateSwcResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.swcinfo_;
}

void UpdateSwcResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateSwcResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateSwcResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSwcResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcMetaInfoV1 SwcInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSwcResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateSwcResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 2;
  if (this->_internal_has_swcinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::swcinfo(this),
        _Internal::swcinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateSwcResponse)
  return target;
}

size_t UpdateSwcResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateSwcResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 2;
  if (this->_internal_has_swcinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSwcResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateSwcResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSwcResponse::GetClassData() const { return &_class_data_; }


void UpdateSwcResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateSwcResponse*>(&to_msg);
  auto& from = static_cast<const UpdateSwcResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateSwcResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_swcinfo()) {
    _this->_internal_mutable_swcinfo()->::proto::SwcMetaInfoV1::MergeFrom(
        from._internal_swcinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSwcResponse::CopyFrom(const UpdateSwcResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateSwcResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSwcResponse::IsInitialized() const {
  return true;
}

void UpdateSwcResponse::InternalSwap(UpdateSwcResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateSwcResponse, _impl_.swcinfo_)
      + sizeof(UpdateSwcResponse::_impl_.swcinfo_)
      - PROTOBUF_FIELD_OFFSET(UpdateSwcResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSwcResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[19]);
}

// ===================================================================

class GetSwcMetaInfoResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetSwcMetaInfoResponse* msg);
  static const ::proto::SwcMetaInfoV1& swcinfo(const GetSwcMetaInfoResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetSwcMetaInfoResponse::_Internal::metainfo(const GetSwcMetaInfoResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::SwcMetaInfoV1&
GetSwcMetaInfoResponse::_Internal::swcinfo(const GetSwcMetaInfoResponse* msg) {
  return *msg->_impl_.swcinfo_;
}
void GetSwcMetaInfoResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSwcMetaInfoResponse::clear_swcinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
}
GetSwcMetaInfoResponse::GetSwcMetaInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcMetaInfoResponse)
}
GetSwcMetaInfoResponse::GetSwcMetaInfoResponse(const GetSwcMetaInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcMetaInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_swcinfo()) {
    _this->_impl_.swcinfo_ = new ::proto::SwcMetaInfoV1(*from._impl_.swcinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcMetaInfoResponse)
}

inline void GetSwcMetaInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSwcMetaInfoResponse::~GetSwcMetaInfoResponse() {
  // @@protoc_insertion_point(destructor:proto.GetSwcMetaInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcMetaInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.swcinfo_;
}

void GetSwcMetaInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcMetaInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcMetaInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcinfo_ != nullptr) {
    delete _impl_.swcinfo_;
  }
  _impl_.swcinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcMetaInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcMetaInfoV1 SwcInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcMetaInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcMetaInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 2;
  if (this->_internal_has_swcinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::swcinfo(this),
        _Internal::swcinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcMetaInfoResponse)
  return target;
}

size_t GetSwcMetaInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcMetaInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.SwcMetaInfoV1 SwcInfo = 2;
  if (this->_internal_has_swcinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcMetaInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcMetaInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcMetaInfoResponse::GetClassData() const { return &_class_data_; }


void GetSwcMetaInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcMetaInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetSwcMetaInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcMetaInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_swcinfo()) {
    _this->_internal_mutable_swcinfo()->::proto::SwcMetaInfoV1::MergeFrom(
        from._internal_swcinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcMetaInfoResponse::CopyFrom(const GetSwcMetaInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcMetaInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcMetaInfoResponse::IsInitialized() const {
  return true;
}

void GetSwcMetaInfoResponse::InternalSwap(GetSwcMetaInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcMetaInfoResponse, _impl_.swcinfo_)
      + sizeof(GetSwcMetaInfoResponse::_impl_.swcinfo_)
      - PROTOBUF_FIELD_OFFSET(GetSwcMetaInfoResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcMetaInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[20]);
}

// ===================================================================

class GetAllSwcMetaInfoResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetAllSwcMetaInfoResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetAllSwcMetaInfoResponse::_Internal::metainfo(const GetAllSwcMetaInfoResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void GetAllSwcMetaInfoResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllSwcMetaInfoResponse::clear_swcinfo() {
  _impl_.swcinfo_.Clear();
}
GetAllSwcMetaInfoResponse::GetAllSwcMetaInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllSwcMetaInfoResponse)
}
GetAllSwcMetaInfoResponse::GetAllSwcMetaInfoResponse(const GetAllSwcMetaInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllSwcMetaInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcinfo_){from._impl_.swcinfo_}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllSwcMetaInfoResponse)
}

inline void GetAllSwcMetaInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcinfo_){arena}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllSwcMetaInfoResponse::~GetAllSwcMetaInfoResponse() {
  // @@protoc_insertion_point(destructor:proto.GetAllSwcMetaInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllSwcMetaInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcinfo_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void GetAllSwcMetaInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllSwcMetaInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllSwcMetaInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcinfo_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllSwcMetaInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.SwcMetaInfoV1 SwcInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_swcinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllSwcMetaInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllSwcMetaInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // repeated .proto.SwcMetaInfoV1 SwcInfo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_swcinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_swcinfo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllSwcMetaInfoResponse)
  return target;
}

size_t GetAllSwcMetaInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllSwcMetaInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.SwcMetaInfoV1 SwcInfo = 2;
  total_size += 1UL * this->_internal_swcinfo_size();
  for (const auto& msg : this->_impl_.swcinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllSwcMetaInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllSwcMetaInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllSwcMetaInfoResponse::GetClassData() const { return &_class_data_; }


void GetAllSwcMetaInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllSwcMetaInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetAllSwcMetaInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllSwcMetaInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swcinfo_.MergeFrom(from._impl_.swcinfo_);
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllSwcMetaInfoResponse::CopyFrom(const GetAllSwcMetaInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllSwcMetaInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllSwcMetaInfoResponse::IsInitialized() const {
  return true;
}

void GetAllSwcMetaInfoResponse::InternalSwap(GetAllSwcMetaInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swcinfo_.InternalSwap(&other->_impl_.swcinfo_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllSwcMetaInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[21]);
}

// ===================================================================

class CreateSwcSnapshotResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const CreateSwcSnapshotResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
CreateSwcSnapshotResponse::_Internal::metainfo(const CreateSwcSnapshotResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void CreateSwcSnapshotResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
CreateSwcSnapshotResponse::CreateSwcSnapshotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateSwcSnapshotResponse)
}
CreateSwcSnapshotResponse::CreateSwcSnapshotResponse(const CreateSwcSnapshotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSwcSnapshotResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateSwcSnapshotResponse)
}

inline void CreateSwcSnapshotResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateSwcSnapshotResponse::~CreateSwcSnapshotResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateSwcSnapshotResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSwcSnapshotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void CreateSwcSnapshotResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSwcSnapshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateSwcSnapshotResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSwcSnapshotResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSwcSnapshotResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateSwcSnapshotResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateSwcSnapshotResponse)
  return target;
}

size_t CreateSwcSnapshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateSwcSnapshotResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSwcSnapshotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSwcSnapshotResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSwcSnapshotResponse::GetClassData() const { return &_class_data_; }


void CreateSwcSnapshotResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSwcSnapshotResponse*>(&to_msg);
  auto& from = static_cast<const CreateSwcSnapshotResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateSwcSnapshotResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSwcSnapshotResponse::CopyFrom(const CreateSwcSnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateSwcSnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSwcSnapshotResponse::IsInitialized() const {
  return true;
}

void CreateSwcSnapshotResponse::InternalSwap(CreateSwcSnapshotResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSwcSnapshotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[22]);
}

// ===================================================================

class GetAllSnapshotMetaInfoResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetAllSnapshotMetaInfoResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetAllSnapshotMetaInfoResponse::_Internal::metainfo(const GetAllSnapshotMetaInfoResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void GetAllSnapshotMetaInfoResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllSnapshotMetaInfoResponse::clear_swcsnapshotlist() {
  _impl_.swcsnapshotlist_.Clear();
}
GetAllSnapshotMetaInfoResponse::GetAllSnapshotMetaInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllSnapshotMetaInfoResponse)
}
GetAllSnapshotMetaInfoResponse::GetAllSnapshotMetaInfoResponse(const GetAllSnapshotMetaInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllSnapshotMetaInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcsnapshotlist_){from._impl_.swcsnapshotlist_}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllSnapshotMetaInfoResponse)
}

inline void GetAllSnapshotMetaInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcsnapshotlist_){arena}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllSnapshotMetaInfoResponse::~GetAllSnapshotMetaInfoResponse() {
  // @@protoc_insertion_point(destructor:proto.GetAllSnapshotMetaInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllSnapshotMetaInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcsnapshotlist_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void GetAllSnapshotMetaInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllSnapshotMetaInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllSnapshotMetaInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcsnapshotlist_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllSnapshotMetaInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.SwcSnapshotMetaInfoV1 SwcSnapshotList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_swcsnapshotlist(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllSnapshotMetaInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllSnapshotMetaInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // repeated .proto.SwcSnapshotMetaInfoV1 SwcSnapshotList = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_swcsnapshotlist_size()); i < n; i++) {
    const auto& repfield = this->_internal_swcsnapshotlist(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllSnapshotMetaInfoResponse)
  return target;
}

size_t GetAllSnapshotMetaInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllSnapshotMetaInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.SwcSnapshotMetaInfoV1 SwcSnapshotList = 2;
  total_size += 1UL * this->_internal_swcsnapshotlist_size();
  for (const auto& msg : this->_impl_.swcsnapshotlist_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllSnapshotMetaInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllSnapshotMetaInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllSnapshotMetaInfoResponse::GetClassData() const { return &_class_data_; }


void GetAllSnapshotMetaInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllSnapshotMetaInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetAllSnapshotMetaInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllSnapshotMetaInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swcsnapshotlist_.MergeFrom(from._impl_.swcsnapshotlist_);
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllSnapshotMetaInfoResponse::CopyFrom(const GetAllSnapshotMetaInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllSnapshotMetaInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllSnapshotMetaInfoResponse::IsInitialized() const {
  return true;
}

void GetAllSnapshotMetaInfoResponse::InternalSwap(GetAllSnapshotMetaInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swcsnapshotlist_.InternalSwap(&other->_impl_.swcsnapshotlist_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllSnapshotMetaInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[23]);
}

// ===================================================================

class GetSnapshotResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetSnapshotResponse* msg);
  static const ::proto::SwcDataV1& swcnodedata(const GetSnapshotResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetSnapshotResponse::_Internal::metainfo(const GetSnapshotResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::SwcDataV1&
GetSnapshotResponse::_Internal::swcnodedata(const GetSnapshotResponse* msg) {
  return *msg->_impl_.swcnodedata_;
}
void GetSnapshotResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSnapshotResponse::clear_swcnodedata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
}
GetSnapshotResponse::GetSnapshotResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSnapshotResponse)
}
GetSnapshotResponse::GetSnapshotResponse(const GetSnapshotResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSnapshotResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcnodedata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_swcnodedata()) {
    _this->_impl_.swcnodedata_ = new ::proto::SwcDataV1(*from._impl_.swcnodedata_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSnapshotResponse)
}

inline void GetSnapshotResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcnodedata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSnapshotResponse::~GetSnapshotResponse() {
  // @@protoc_insertion_point(destructor:proto.GetSnapshotResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSnapshotResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.swcnodedata_;
}

void GetSnapshotResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSnapshotResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSnapshotResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSnapshotResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcNodeData = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcnodedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSnapshotResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSnapshotResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 2;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::swcnodedata(this),
        _Internal::swcnodedata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSnapshotResponse)
  return target;
}

size_t GetSnapshotResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSnapshotResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 2;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.SwcDataV1 SwcNodeData = 3;
  if (this->_internal_has_swcnodedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcnodedata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSnapshotResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSnapshotResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSnapshotResponse::GetClassData() const { return &_class_data_; }


void GetSnapshotResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSnapshotResponse*>(&to_msg);
  auto& from = static_cast<const GetSnapshotResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSnapshotResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_internal_mutable_swcnodedata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcnodedata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSnapshotResponse::CopyFrom(const GetSnapshotResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSnapshotResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSnapshotResponse::IsInitialized() const {
  return true;
}

void GetSnapshotResponse::InternalSwap(GetSnapshotResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSnapshotResponse, _impl_.swcnodedata_)
      + sizeof(GetSnapshotResponse::_impl_.swcnodedata_)
      - PROTOBUF_FIELD_OFFSET(GetSnapshotResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSnapshotResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[24]);
}

// ===================================================================

class GetAllIncrementOperationMetaInfoResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetAllIncrementOperationMetaInfoResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetAllIncrementOperationMetaInfoResponse::_Internal::metainfo(const GetAllIncrementOperationMetaInfoResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void GetAllIncrementOperationMetaInfoResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllIncrementOperationMetaInfoResponse::clear_swcincrementoperationmetainfo() {
  _impl_.swcincrementoperationmetainfo_.Clear();
}
GetAllIncrementOperationMetaInfoResponse::GetAllIncrementOperationMetaInfoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllIncrementOperationMetaInfoResponse)
}
GetAllIncrementOperationMetaInfoResponse::GetAllIncrementOperationMetaInfoResponse(const GetAllIncrementOperationMetaInfoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllIncrementOperationMetaInfoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcincrementoperationmetainfo_){from._impl_.swcincrementoperationmetainfo_}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllIncrementOperationMetaInfoResponse)
}

inline void GetAllIncrementOperationMetaInfoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcincrementoperationmetainfo_){arena}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllIncrementOperationMetaInfoResponse::~GetAllIncrementOperationMetaInfoResponse() {
  // @@protoc_insertion_point(destructor:proto.GetAllIncrementOperationMetaInfoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllIncrementOperationMetaInfoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcincrementoperationmetainfo_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void GetAllIncrementOperationMetaInfoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllIncrementOperationMetaInfoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllIncrementOperationMetaInfoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcincrementoperationmetainfo_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllIncrementOperationMetaInfoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.SwcIncrementOperationMetaInfoV1 SwcIncrementOperationMetaInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_swcincrementoperationmetainfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllIncrementOperationMetaInfoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllIncrementOperationMetaInfoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // repeated .proto.SwcIncrementOperationMetaInfoV1 SwcIncrementOperationMetaInfo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_swcincrementoperationmetainfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_swcincrementoperationmetainfo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllIncrementOperationMetaInfoResponse)
  return target;
}

size_t GetAllIncrementOperationMetaInfoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllIncrementOperationMetaInfoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.SwcIncrementOperationMetaInfoV1 SwcIncrementOperationMetaInfo = 2;
  total_size += 1UL * this->_internal_swcincrementoperationmetainfo_size();
  for (const auto& msg : this->_impl_.swcincrementoperationmetainfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllIncrementOperationMetaInfoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllIncrementOperationMetaInfoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllIncrementOperationMetaInfoResponse::GetClassData() const { return &_class_data_; }


void GetAllIncrementOperationMetaInfoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllIncrementOperationMetaInfoResponse*>(&to_msg);
  auto& from = static_cast<const GetAllIncrementOperationMetaInfoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllIncrementOperationMetaInfoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swcincrementoperationmetainfo_.MergeFrom(from._impl_.swcincrementoperationmetainfo_);
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllIncrementOperationMetaInfoResponse::CopyFrom(const GetAllIncrementOperationMetaInfoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllIncrementOperationMetaInfoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllIncrementOperationMetaInfoResponse::IsInitialized() const {
  return true;
}

void GetAllIncrementOperationMetaInfoResponse::InternalSwap(GetAllIncrementOperationMetaInfoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swcincrementoperationmetainfo_.InternalSwap(&other->_impl_.swcincrementoperationmetainfo_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllIncrementOperationMetaInfoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[25]);
}

// ===================================================================

class GetIncrementOperationResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetIncrementOperationResponse* msg);
  static const ::proto::SwcIncrementOperationListV1& swcincrementoperationlist(const GetIncrementOperationResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetIncrementOperationResponse::_Internal::metainfo(const GetIncrementOperationResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::SwcIncrementOperationListV1&
GetIncrementOperationResponse::_Internal::swcincrementoperationlist(const GetIncrementOperationResponse* msg) {
  return *msg->_impl_.swcincrementoperationlist_;
}
void GetIncrementOperationResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetIncrementOperationResponse::clear_swcincrementoperationlist() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcincrementoperationlist_ != nullptr) {
    delete _impl_.swcincrementoperationlist_;
  }
  _impl_.swcincrementoperationlist_ = nullptr;
}
GetIncrementOperationResponse::GetIncrementOperationResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetIncrementOperationResponse)
}
GetIncrementOperationResponse::GetIncrementOperationResponse(const GetIncrementOperationResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetIncrementOperationResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcincrementoperationlist_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_swcincrementoperationlist()) {
    _this->_impl_.swcincrementoperationlist_ = new ::proto::SwcIncrementOperationListV1(*from._impl_.swcincrementoperationlist_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetIncrementOperationResponse)
}

inline void GetIncrementOperationResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcincrementoperationlist_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetIncrementOperationResponse::~GetIncrementOperationResponse() {
  // @@protoc_insertion_point(destructor:proto.GetIncrementOperationResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetIncrementOperationResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.swcincrementoperationlist_;
}

void GetIncrementOperationResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetIncrementOperationResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetIncrementOperationResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcincrementoperationlist_ != nullptr) {
    delete _impl_.swcincrementoperationlist_;
  }
  _impl_.swcincrementoperationlist_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetIncrementOperationResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcIncrementOperationListV1 SwcIncrementOperationList = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcincrementoperationlist(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetIncrementOperationResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetIncrementOperationResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcIncrementOperationListV1 SwcIncrementOperationList = 2;
  if (this->_internal_has_swcincrementoperationlist()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::swcincrementoperationlist(this),
        _Internal::swcincrementoperationlist(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetIncrementOperationResponse)
  return target;
}

size_t GetIncrementOperationResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetIncrementOperationResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.SwcIncrementOperationListV1 SwcIncrementOperationList = 2;
  if (this->_internal_has_swcincrementoperationlist()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcincrementoperationlist_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetIncrementOperationResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetIncrementOperationResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetIncrementOperationResponse::GetClassData() const { return &_class_data_; }


void GetIncrementOperationResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetIncrementOperationResponse*>(&to_msg);
  auto& from = static_cast<const GetIncrementOperationResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetIncrementOperationResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_swcincrementoperationlist()) {
    _this->_internal_mutable_swcincrementoperationlist()->::proto::SwcIncrementOperationListV1::MergeFrom(
        from._internal_swcincrementoperationlist());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetIncrementOperationResponse::CopyFrom(const GetIncrementOperationResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetIncrementOperationResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetIncrementOperationResponse::IsInitialized() const {
  return true;
}

void GetIncrementOperationResponse::InternalSwap(GetIncrementOperationResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetIncrementOperationResponse, _impl_.swcincrementoperationlist_)
      + sizeof(GetIncrementOperationResponse::_impl_.swcincrementoperationlist_)
      - PROTOBUF_FIELD_OFFSET(GetIncrementOperationResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetIncrementOperationResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[26]);
}

// ===================================================================

class CreateSwcNodeDataResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const CreateSwcNodeDataResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
CreateSwcNodeDataResponse::_Internal::metainfo(const CreateSwcNodeDataResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void CreateSwcNodeDataResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
CreateSwcNodeDataResponse::CreateSwcNodeDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateSwcNodeDataResponse)
}
CreateSwcNodeDataResponse::CreateSwcNodeDataResponse(const CreateSwcNodeDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSwcNodeDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.creatednodesuuid_){from._impl_.creatednodesuuid_}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateSwcNodeDataResponse)
}

inline void CreateSwcNodeDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.creatednodesuuid_){arena}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateSwcNodeDataResponse::~CreateSwcNodeDataResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateSwcNodeDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSwcNodeDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.creatednodesuuid_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void CreateSwcNodeDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSwcNodeDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.creatednodesuuid_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSwcNodeDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated string CreatedNodesUuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_creatednodesuuid();
            ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(ptr);
            CHK_(::_pbi::VerifyUTF8(str, "proto.CreateSwcNodeDataResponse.CreatedNodesUuid"));
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSwcNodeDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // repeated string CreatedNodesUuid = 2;
  for (int i = 0, n = this->_internal_creatednodesuuid_size(); i < n; i++) {
    const auto& s = this->_internal_creatednodesuuid(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.CreateSwcNodeDataResponse.CreatedNodesUuid");
    target = stream->WriteString(2, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateSwcNodeDataResponse)
  return target;
}

size_t CreateSwcNodeDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateSwcNodeDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string CreatedNodesUuid = 2;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(_impl_.creatednodesuuid_.size());
  for (int i = 0, n = _impl_.creatednodesuuid_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      _impl_.creatednodesuuid_.Get(i));
  }

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSwcNodeDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSwcNodeDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSwcNodeDataResponse::GetClassData() const { return &_class_data_; }


void CreateSwcNodeDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSwcNodeDataResponse*>(&to_msg);
  auto& from = static_cast<const CreateSwcNodeDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateSwcNodeDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.creatednodesuuid_.MergeFrom(from._impl_.creatednodesuuid_);
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSwcNodeDataResponse::CopyFrom(const CreateSwcNodeDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateSwcNodeDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSwcNodeDataResponse::IsInitialized() const {
  return true;
}

void CreateSwcNodeDataResponse::InternalSwap(CreateSwcNodeDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.creatednodesuuid_.InternalSwap(&other->_impl_.creatednodesuuid_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSwcNodeDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[27]);
}

// ===================================================================

class DeleteSwcNodeDataResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const DeleteSwcNodeDataResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
DeleteSwcNodeDataResponse::_Internal::metainfo(const DeleteSwcNodeDataResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void DeleteSwcNodeDataResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
DeleteSwcNodeDataResponse::DeleteSwcNodeDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteSwcNodeDataResponse)
}
DeleteSwcNodeDataResponse::DeleteSwcNodeDataResponse(const DeleteSwcNodeDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteSwcNodeDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteSwcNodeDataResponse)
}

inline void DeleteSwcNodeDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteSwcNodeDataResponse::~DeleteSwcNodeDataResponse() {
  // @@protoc_insertion_point(destructor:proto.DeleteSwcNodeDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteSwcNodeDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void DeleteSwcNodeDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteSwcNodeDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSwcNodeDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSwcNodeDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteSwcNodeDataResponse)
  return target;
}

size_t DeleteSwcNodeDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteSwcNodeDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSwcNodeDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteSwcNodeDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSwcNodeDataResponse::GetClassData() const { return &_class_data_; }


void DeleteSwcNodeDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteSwcNodeDataResponse*>(&to_msg);
  auto& from = static_cast<const DeleteSwcNodeDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteSwcNodeDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSwcNodeDataResponse::CopyFrom(const DeleteSwcNodeDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteSwcNodeDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSwcNodeDataResponse::IsInitialized() const {
  return true;
}

void DeleteSwcNodeDataResponse::InternalSwap(DeleteSwcNodeDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSwcNodeDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[28]);
}

// ===================================================================

class UpdateSwcNodeDataResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const UpdateSwcNodeDataResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
UpdateSwcNodeDataResponse::_Internal::metainfo(const UpdateSwcNodeDataResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void UpdateSwcNodeDataResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
UpdateSwcNodeDataResponse::UpdateSwcNodeDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateSwcNodeDataResponse)
}
UpdateSwcNodeDataResponse::UpdateSwcNodeDataResponse(const UpdateSwcNodeDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateSwcNodeDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateSwcNodeDataResponse)
}

inline void UpdateSwcNodeDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateSwcNodeDataResponse::~UpdateSwcNodeDataResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateSwcNodeDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateSwcNodeDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void UpdateSwcNodeDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateSwcNodeDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSwcNodeDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSwcNodeDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateSwcNodeDataResponse)
  return target;
}

size_t UpdateSwcNodeDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateSwcNodeDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSwcNodeDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateSwcNodeDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSwcNodeDataResponse::GetClassData() const { return &_class_data_; }


void UpdateSwcNodeDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateSwcNodeDataResponse*>(&to_msg);
  auto& from = static_cast<const UpdateSwcNodeDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateSwcNodeDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSwcNodeDataResponse::CopyFrom(const UpdateSwcNodeDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateSwcNodeDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSwcNodeDataResponse::IsInitialized() const {
  return true;
}

void UpdateSwcNodeDataResponse::InternalSwap(UpdateSwcNodeDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSwcNodeDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[29]);
}

// ===================================================================

class GetSwcNodeDataResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetSwcNodeDataResponse* msg);
  static const ::proto::SwcDataV1& swcnodedata(const GetSwcNodeDataResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetSwcNodeDataResponse::_Internal::metainfo(const GetSwcNodeDataResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::SwcDataV1&
GetSwcNodeDataResponse::_Internal::swcnodedata(const GetSwcNodeDataResponse* msg) {
  return *msg->_impl_.swcnodedata_;
}
void GetSwcNodeDataResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSwcNodeDataResponse::clear_swcnodedata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
}
GetSwcNodeDataResponse::GetSwcNodeDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcNodeDataResponse)
}
GetSwcNodeDataResponse::GetSwcNodeDataResponse(const GetSwcNodeDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcNodeDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcnodedata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_swcnodedata()) {
    _this->_impl_.swcnodedata_ = new ::proto::SwcDataV1(*from._impl_.swcnodedata_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcNodeDataResponse)
}

inline void GetSwcNodeDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcnodedata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSwcNodeDataResponse::~GetSwcNodeDataResponse() {
  // @@protoc_insertion_point(destructor:proto.GetSwcNodeDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcNodeDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.swcnodedata_;
}

void GetSwcNodeDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcNodeDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcNodeDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcNodeData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcnodedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcNodeDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcNodeDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcDataV1 SwcNodeData = 2;
  if (this->_internal_has_swcnodedata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::swcnodedata(this),
        _Internal::swcnodedata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcNodeDataResponse)
  return target;
}

size_t GetSwcNodeDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcNodeDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.SwcDataV1 SwcNodeData = 2;
  if (this->_internal_has_swcnodedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcnodedata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcNodeDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcNodeDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcNodeDataResponse::GetClassData() const { return &_class_data_; }


void GetSwcNodeDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcNodeDataResponse*>(&to_msg);
  auto& from = static_cast<const GetSwcNodeDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcNodeDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_internal_mutable_swcnodedata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcnodedata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcNodeDataResponse::CopyFrom(const GetSwcNodeDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcNodeDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcNodeDataResponse::IsInitialized() const {
  return true;
}

void GetSwcNodeDataResponse::InternalSwap(GetSwcNodeDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcNodeDataResponse, _impl_.swcnodedata_)
      + sizeof(GetSwcNodeDataResponse::_impl_.swcnodedata_)
      - PROTOBUF_FIELD_OFFSET(GetSwcNodeDataResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcNodeDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[30]);
}

// ===================================================================

class GetSwcFullNodeDataResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetSwcFullNodeDataResponse* msg);
  static const ::proto::SwcDataV1& swcnodedata(const GetSwcFullNodeDataResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetSwcFullNodeDataResponse::_Internal::metainfo(const GetSwcFullNodeDataResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::SwcDataV1&
GetSwcFullNodeDataResponse::_Internal::swcnodedata(const GetSwcFullNodeDataResponse* msg) {
  return *msg->_impl_.swcnodedata_;
}
void GetSwcFullNodeDataResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSwcFullNodeDataResponse::clear_swcnodedata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
}
GetSwcFullNodeDataResponse::GetSwcFullNodeDataResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcFullNodeDataResponse)
}
GetSwcFullNodeDataResponse::GetSwcFullNodeDataResponse(const GetSwcFullNodeDataResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcFullNodeDataResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcnodedata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_swcnodedata()) {
    _this->_impl_.swcnodedata_ = new ::proto::SwcDataV1(*from._impl_.swcnodedata_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcFullNodeDataResponse)
}

inline void GetSwcFullNodeDataResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcnodedata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSwcFullNodeDataResponse::~GetSwcFullNodeDataResponse() {
  // @@protoc_insertion_point(destructor:proto.GetSwcFullNodeDataResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcFullNodeDataResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.swcnodedata_;
}

void GetSwcFullNodeDataResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcFullNodeDataResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcFullNodeDataResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcFullNodeDataResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcNodeData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcnodedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcFullNodeDataResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcFullNodeDataResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcDataV1 SwcNodeData = 2;
  if (this->_internal_has_swcnodedata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::swcnodedata(this),
        _Internal::swcnodedata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcFullNodeDataResponse)
  return target;
}

size_t GetSwcFullNodeDataResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcFullNodeDataResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.SwcDataV1 SwcNodeData = 2;
  if (this->_internal_has_swcnodedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcnodedata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcFullNodeDataResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcFullNodeDataResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcFullNodeDataResponse::GetClassData() const { return &_class_data_; }


void GetSwcFullNodeDataResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcFullNodeDataResponse*>(&to_msg);
  auto& from = static_cast<const GetSwcFullNodeDataResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcFullNodeDataResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_internal_mutable_swcnodedata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcnodedata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcFullNodeDataResponse::CopyFrom(const GetSwcFullNodeDataResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcFullNodeDataResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcFullNodeDataResponse::IsInitialized() const {
  return true;
}

void GetSwcFullNodeDataResponse::InternalSwap(GetSwcFullNodeDataResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcFullNodeDataResponse, _impl_.swcnodedata_)
      + sizeof(GetSwcFullNodeDataResponse::_impl_.swcnodedata_)
      - PROTOBUF_FIELD_OFFSET(GetSwcFullNodeDataResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcFullNodeDataResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[31]);
}

// ===================================================================

class GetSwcNodeDataListByTimeAndUserResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetSwcNodeDataListByTimeAndUserResponse* msg);
  static const ::proto::SwcDataV1& swcnodedata(const GetSwcNodeDataListByTimeAndUserResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetSwcNodeDataListByTimeAndUserResponse::_Internal::metainfo(const GetSwcNodeDataListByTimeAndUserResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::SwcDataV1&
GetSwcNodeDataListByTimeAndUserResponse::_Internal::swcnodedata(const GetSwcNodeDataListByTimeAndUserResponse* msg) {
  return *msg->_impl_.swcnodedata_;
}
void GetSwcNodeDataListByTimeAndUserResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSwcNodeDataListByTimeAndUserResponse::clear_swcnodedata() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
}
GetSwcNodeDataListByTimeAndUserResponse::GetSwcNodeDataListByTimeAndUserResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcNodeDataListByTimeAndUserResponse)
}
GetSwcNodeDataListByTimeAndUserResponse::GetSwcNodeDataListByTimeAndUserResponse(const GetSwcNodeDataListByTimeAndUserResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcNodeDataListByTimeAndUserResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcnodedata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_swcnodedata()) {
    _this->_impl_.swcnodedata_ = new ::proto::SwcDataV1(*from._impl_.swcnodedata_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcNodeDataListByTimeAndUserResponse)
}

inline void GetSwcNodeDataListByTimeAndUserResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcnodedata_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSwcNodeDataListByTimeAndUserResponse::~GetSwcNodeDataListByTimeAndUserResponse() {
  // @@protoc_insertion_point(destructor:proto.GetSwcNodeDataListByTimeAndUserResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcNodeDataListByTimeAndUserResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.swcnodedata_;
}

void GetSwcNodeDataListByTimeAndUserResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcNodeDataListByTimeAndUserResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcNodeDataListByTimeAndUserResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcnodedata_ != nullptr) {
    delete _impl_.swcnodedata_;
  }
  _impl_.swcnodedata_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcNodeDataListByTimeAndUserResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcDataV1 SwcNodeData = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcnodedata(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcNodeDataListByTimeAndUserResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcNodeDataListByTimeAndUserResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcDataV1 SwcNodeData = 2;
  if (this->_internal_has_swcnodedata()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::swcnodedata(this),
        _Internal::swcnodedata(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcNodeDataListByTimeAndUserResponse)
  return target;
}

size_t GetSwcNodeDataListByTimeAndUserResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcNodeDataListByTimeAndUserResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.SwcDataV1 SwcNodeData = 2;
  if (this->_internal_has_swcnodedata()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcnodedata_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcNodeDataListByTimeAndUserResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcNodeDataListByTimeAndUserResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcNodeDataListByTimeAndUserResponse::GetClassData() const { return &_class_data_; }


void GetSwcNodeDataListByTimeAndUserResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcNodeDataListByTimeAndUserResponse*>(&to_msg);
  auto& from = static_cast<const GetSwcNodeDataListByTimeAndUserResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcNodeDataListByTimeAndUserResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_swcnodedata()) {
    _this->_internal_mutable_swcnodedata()->::proto::SwcDataV1::MergeFrom(
        from._internal_swcnodedata());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcNodeDataListByTimeAndUserResponse::CopyFrom(const GetSwcNodeDataListByTimeAndUserResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcNodeDataListByTimeAndUserResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcNodeDataListByTimeAndUserResponse::IsInitialized() const {
  return true;
}

void GetSwcNodeDataListByTimeAndUserResponse::InternalSwap(GetSwcNodeDataListByTimeAndUserResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcNodeDataListByTimeAndUserResponse, _impl_.swcnodedata_)
      + sizeof(GetSwcNodeDataListByTimeAndUserResponse::_impl_.swcnodedata_)
      - PROTOBUF_FIELD_OFFSET(GetSwcNodeDataListByTimeAndUserResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcNodeDataListByTimeAndUserResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[32]);
}

// ===================================================================

class BackupFullDatabaseResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const BackupFullDatabaseResponse* msg);
  static const ::PROTOBUF_NAMESPACE_ID::Timestamp& delaybackuptime(const BackupFullDatabaseResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
BackupFullDatabaseResponse::_Internal::metainfo(const BackupFullDatabaseResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::PROTOBUF_NAMESPACE_ID::Timestamp&
BackupFullDatabaseResponse::_Internal::delaybackuptime(const BackupFullDatabaseResponse* msg) {
  return *msg->_impl_.delaybackuptime_;
}
void BackupFullDatabaseResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void BackupFullDatabaseResponse::clear_delaybackuptime() {
  if (GetArenaForAllocation() == nullptr && _impl_.delaybackuptime_ != nullptr) {
    delete _impl_.delaybackuptime_;
  }
  _impl_.delaybackuptime_ = nullptr;
}
BackupFullDatabaseResponse::BackupFullDatabaseResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.BackupFullDatabaseResponse)
}
BackupFullDatabaseResponse::BackupFullDatabaseResponse(const BackupFullDatabaseResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  BackupFullDatabaseResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.delaybackuptime_){nullptr}
    , decltype(_impl_.instantbackup_){}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_delaybackuptime()) {
    _this->_impl_.delaybackuptime_ = new ::PROTOBUF_NAMESPACE_ID::Timestamp(*from._impl_.delaybackuptime_);
  }
  _this->_impl_.instantbackup_ = from._impl_.instantbackup_;
  // @@protoc_insertion_point(copy_constructor:proto.BackupFullDatabaseResponse)
}

inline void BackupFullDatabaseResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.delaybackuptime_){nullptr}
    , decltype(_impl_.instantbackup_){false}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

BackupFullDatabaseResponse::~BackupFullDatabaseResponse() {
  // @@protoc_insertion_point(destructor:proto.BackupFullDatabaseResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void BackupFullDatabaseResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.delaybackuptime_;
}

void BackupFullDatabaseResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void BackupFullDatabaseResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.BackupFullDatabaseResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.delaybackuptime_ != nullptr) {
    delete _impl_.delaybackuptime_;
  }
  _impl_.delaybackuptime_ = nullptr;
  _impl_.instantbackup_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* BackupFullDatabaseResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // bool InstantBackup = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 16)) {
          _impl_.instantbackup_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .google.protobuf.Timestamp DelayBackupTime = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_delaybackuptime(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* BackupFullDatabaseResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.BackupFullDatabaseResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // bool InstantBackup = 2;
  if (this->_internal_instantbackup() != 0) {
    target = stream->EnsureSpace(target);
    target = ::_pbi::WireFormatLite::WriteBoolToArray(2, this->_internal_instantbackup(), target);
  }

  // .google.protobuf.Timestamp DelayBackupTime = 3;
  if (this->_internal_has_delaybackuptime()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(3, _Internal::delaybackuptime(this),
        _Internal::delaybackuptime(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.BackupFullDatabaseResponse)
  return target;
}

size_t BackupFullDatabaseResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.BackupFullDatabaseResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .google.protobuf.Timestamp DelayBackupTime = 3;
  if (this->_internal_has_delaybackuptime()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.delaybackuptime_);
  }

  // bool InstantBackup = 2;
  if (this->_internal_instantbackup() != 0) {
    total_size += 1 + 1;
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData BackupFullDatabaseResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    BackupFullDatabaseResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*BackupFullDatabaseResponse::GetClassData() const { return &_class_data_; }


void BackupFullDatabaseResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<BackupFullDatabaseResponse*>(&to_msg);
  auto& from = static_cast<const BackupFullDatabaseResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.BackupFullDatabaseResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_delaybackuptime()) {
    _this->_internal_mutable_delaybackuptime()->::PROTOBUF_NAMESPACE_ID::Timestamp::MergeFrom(
        from._internal_delaybackuptime());
  }
  if (from._internal_instantbackup() != 0) {
    _this->_internal_set_instantbackup(from._internal_instantbackup());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void BackupFullDatabaseResponse::CopyFrom(const BackupFullDatabaseResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.BackupFullDatabaseResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool BackupFullDatabaseResponse::IsInitialized() const {
  return true;
}

void BackupFullDatabaseResponse::InternalSwap(BackupFullDatabaseResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(BackupFullDatabaseResponse, _impl_.instantbackup_)
      + sizeof(BackupFullDatabaseResponse::_impl_.instantbackup_)
      - PROTOBUF_FIELD_OFFSET(BackupFullDatabaseResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata BackupFullDatabaseResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[33]);
}

// ===================================================================

class CreateDailyStatisticsResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const CreateDailyStatisticsResponse* msg);
  static const ::proto::DailyStatisticsMetaInfoV1& dailystatisticsinfo(const CreateDailyStatisticsResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
CreateDailyStatisticsResponse::_Internal::metainfo(const CreateDailyStatisticsResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::DailyStatisticsMetaInfoV1&
CreateDailyStatisticsResponse::_Internal::dailystatisticsinfo(const CreateDailyStatisticsResponse* msg) {
  return *msg->_impl_.dailystatisticsinfo_;
}
void CreateDailyStatisticsResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void CreateDailyStatisticsResponse::clear_dailystatisticsinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
}
CreateDailyStatisticsResponse::CreateDailyStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateDailyStatisticsResponse)
}
CreateDailyStatisticsResponse::CreateDailyStatisticsResponse(const CreateDailyStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateDailyStatisticsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_impl_.dailystatisticsinfo_ = new ::proto::DailyStatisticsMetaInfoV1(*from._impl_.dailystatisticsinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateDailyStatisticsResponse)
}

inline void CreateDailyStatisticsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

CreateDailyStatisticsResponse::~CreateDailyStatisticsResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateDailyStatisticsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateDailyStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.dailystatisticsinfo_;
}

void CreateDailyStatisticsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateDailyStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateDailyStatisticsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_dailystatisticsinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateDailyStatisticsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
  if (this->_internal_has_dailystatisticsinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::dailystatisticsinfo(this),
        _Internal::dailystatisticsinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateDailyStatisticsResponse)
  return target;
}

size_t CreateDailyStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateDailyStatisticsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
  if (this->_internal_has_dailystatisticsinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dailystatisticsinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateDailyStatisticsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateDailyStatisticsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateDailyStatisticsResponse::GetClassData() const { return &_class_data_; }


void CreateDailyStatisticsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateDailyStatisticsResponse*>(&to_msg);
  auto& from = static_cast<const CreateDailyStatisticsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateDailyStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_internal_mutable_dailystatisticsinfo()->::proto::DailyStatisticsMetaInfoV1::MergeFrom(
        from._internal_dailystatisticsinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateDailyStatisticsResponse::CopyFrom(const CreateDailyStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateDailyStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateDailyStatisticsResponse::IsInitialized() const {
  return true;
}

void CreateDailyStatisticsResponse::InternalSwap(CreateDailyStatisticsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(CreateDailyStatisticsResponse, _impl_.dailystatisticsinfo_)
      + sizeof(CreateDailyStatisticsResponse::_impl_.dailystatisticsinfo_)
      - PROTOBUF_FIELD_OFFSET(CreateDailyStatisticsResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateDailyStatisticsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[34]);
}

// ===================================================================

class DeleteDailyStatisticsResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const DeleteDailyStatisticsResponse* msg);
  static const ::proto::DailyStatisticsMetaInfoV1& dailystatisticsinfo(const DeleteDailyStatisticsResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
DeleteDailyStatisticsResponse::_Internal::metainfo(const DeleteDailyStatisticsResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::DailyStatisticsMetaInfoV1&
DeleteDailyStatisticsResponse::_Internal::dailystatisticsinfo(const DeleteDailyStatisticsResponse* msg) {
  return *msg->_impl_.dailystatisticsinfo_;
}
void DeleteDailyStatisticsResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void DeleteDailyStatisticsResponse::clear_dailystatisticsinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
}
DeleteDailyStatisticsResponse::DeleteDailyStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteDailyStatisticsResponse)
}
DeleteDailyStatisticsResponse::DeleteDailyStatisticsResponse(const DeleteDailyStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteDailyStatisticsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_impl_.dailystatisticsinfo_ = new ::proto::DailyStatisticsMetaInfoV1(*from._impl_.dailystatisticsinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteDailyStatisticsResponse)
}

inline void DeleteDailyStatisticsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteDailyStatisticsResponse::~DeleteDailyStatisticsResponse() {
  // @@protoc_insertion_point(destructor:proto.DeleteDailyStatisticsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteDailyStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.dailystatisticsinfo_;
}

void DeleteDailyStatisticsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteDailyStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteDailyStatisticsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_dailystatisticsinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteDailyStatisticsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
  if (this->_internal_has_dailystatisticsinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::dailystatisticsinfo(this),
        _Internal::dailystatisticsinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteDailyStatisticsResponse)
  return target;
}

size_t DeleteDailyStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteDailyStatisticsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
  if (this->_internal_has_dailystatisticsinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dailystatisticsinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteDailyStatisticsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteDailyStatisticsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteDailyStatisticsResponse::GetClassData() const { return &_class_data_; }


void DeleteDailyStatisticsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteDailyStatisticsResponse*>(&to_msg);
  auto& from = static_cast<const DeleteDailyStatisticsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteDailyStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_internal_mutable_dailystatisticsinfo()->::proto::DailyStatisticsMetaInfoV1::MergeFrom(
        from._internal_dailystatisticsinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteDailyStatisticsResponse::CopyFrom(const DeleteDailyStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteDailyStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteDailyStatisticsResponse::IsInitialized() const {
  return true;
}

void DeleteDailyStatisticsResponse::InternalSwap(DeleteDailyStatisticsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(DeleteDailyStatisticsResponse, _impl_.dailystatisticsinfo_)
      + sizeof(DeleteDailyStatisticsResponse::_impl_.dailystatisticsinfo_)
      - PROTOBUF_FIELD_OFFSET(DeleteDailyStatisticsResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteDailyStatisticsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[35]);
}

// ===================================================================

class UpdateDailyStatisticsResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const UpdateDailyStatisticsResponse* msg);
  static const ::proto::DailyStatisticsMetaInfoV1& dailystatisticsinfo(const UpdateDailyStatisticsResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
UpdateDailyStatisticsResponse::_Internal::metainfo(const UpdateDailyStatisticsResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::DailyStatisticsMetaInfoV1&
UpdateDailyStatisticsResponse::_Internal::dailystatisticsinfo(const UpdateDailyStatisticsResponse* msg) {
  return *msg->_impl_.dailystatisticsinfo_;
}
void UpdateDailyStatisticsResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void UpdateDailyStatisticsResponse::clear_dailystatisticsinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
}
UpdateDailyStatisticsResponse::UpdateDailyStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateDailyStatisticsResponse)
}
UpdateDailyStatisticsResponse::UpdateDailyStatisticsResponse(const UpdateDailyStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateDailyStatisticsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_impl_.dailystatisticsinfo_ = new ::proto::DailyStatisticsMetaInfoV1(*from._impl_.dailystatisticsinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateDailyStatisticsResponse)
}

inline void UpdateDailyStatisticsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateDailyStatisticsResponse::~UpdateDailyStatisticsResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateDailyStatisticsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateDailyStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.dailystatisticsinfo_;
}

void UpdateDailyStatisticsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateDailyStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateDailyStatisticsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_dailystatisticsinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateDailyStatisticsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
  if (this->_internal_has_dailystatisticsinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::dailystatisticsinfo(this),
        _Internal::dailystatisticsinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateDailyStatisticsResponse)
  return target;
}

size_t UpdateDailyStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateDailyStatisticsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
  if (this->_internal_has_dailystatisticsinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dailystatisticsinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateDailyStatisticsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateDailyStatisticsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateDailyStatisticsResponse::GetClassData() const { return &_class_data_; }


void UpdateDailyStatisticsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateDailyStatisticsResponse*>(&to_msg);
  auto& from = static_cast<const UpdateDailyStatisticsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateDailyStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_internal_mutable_dailystatisticsinfo()->::proto::DailyStatisticsMetaInfoV1::MergeFrom(
        from._internal_dailystatisticsinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateDailyStatisticsResponse::CopyFrom(const UpdateDailyStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateDailyStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateDailyStatisticsResponse::IsInitialized() const {
  return true;
}

void UpdateDailyStatisticsResponse::InternalSwap(UpdateDailyStatisticsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(UpdateDailyStatisticsResponse, _impl_.dailystatisticsinfo_)
      + sizeof(UpdateDailyStatisticsResponse::_impl_.dailystatisticsinfo_)
      - PROTOBUF_FIELD_OFFSET(UpdateDailyStatisticsResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateDailyStatisticsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[36]);
}

// ===================================================================

class GetDailyStatisticsResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetDailyStatisticsResponse* msg);
  static const ::proto::DailyStatisticsMetaInfoV1& dailystatisticsinfo(const GetDailyStatisticsResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetDailyStatisticsResponse::_Internal::metainfo(const GetDailyStatisticsResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::DailyStatisticsMetaInfoV1&
GetDailyStatisticsResponse::_Internal::dailystatisticsinfo(const GetDailyStatisticsResponse* msg) {
  return *msg->_impl_.dailystatisticsinfo_;
}
void GetDailyStatisticsResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetDailyStatisticsResponse::clear_dailystatisticsinfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
}
GetDailyStatisticsResponse::GetDailyStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetDailyStatisticsResponse)
}
GetDailyStatisticsResponse::GetDailyStatisticsResponse(const GetDailyStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetDailyStatisticsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_impl_.dailystatisticsinfo_ = new ::proto::DailyStatisticsMetaInfoV1(*from._impl_.dailystatisticsinfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetDailyStatisticsResponse)
}

inline void GetDailyStatisticsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.dailystatisticsinfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetDailyStatisticsResponse::~GetDailyStatisticsResponse() {
  // @@protoc_insertion_point(destructor:proto.GetDailyStatisticsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetDailyStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.dailystatisticsinfo_;
}

void GetDailyStatisticsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetDailyStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.dailystatisticsinfo_ != nullptr) {
    delete _impl_.dailystatisticsinfo_;
  }
  _impl_.dailystatisticsinfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetDailyStatisticsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_dailystatisticsinfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetDailyStatisticsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
  if (this->_internal_has_dailystatisticsinfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::dailystatisticsinfo(this),
        _Internal::dailystatisticsinfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetDailyStatisticsResponse)
  return target;
}

size_t GetDailyStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetDailyStatisticsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
  if (this->_internal_has_dailystatisticsinfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.dailystatisticsinfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetDailyStatisticsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetDailyStatisticsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetDailyStatisticsResponse::GetClassData() const { return &_class_data_; }


void GetDailyStatisticsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetDailyStatisticsResponse*>(&to_msg);
  auto& from = static_cast<const GetDailyStatisticsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetDailyStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_dailystatisticsinfo()) {
    _this->_internal_mutable_dailystatisticsinfo()->::proto::DailyStatisticsMetaInfoV1::MergeFrom(
        from._internal_dailystatisticsinfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetDailyStatisticsResponse::CopyFrom(const GetDailyStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetDailyStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetDailyStatisticsResponse::IsInitialized() const {
  return true;
}

void GetDailyStatisticsResponse::InternalSwap(GetDailyStatisticsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetDailyStatisticsResponse, _impl_.dailystatisticsinfo_)
      + sizeof(GetDailyStatisticsResponse::_impl_.dailystatisticsinfo_)
      - PROTOBUF_FIELD_OFFSET(GetDailyStatisticsResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetDailyStatisticsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[37]);
}

// ===================================================================

class GetAllDailyStatisticsResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetAllDailyStatisticsResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetAllDailyStatisticsResponse::_Internal::metainfo(const GetAllDailyStatisticsResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void GetAllDailyStatisticsResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetAllDailyStatisticsResponse::clear_dailystatisticsinfo() {
  _impl_.dailystatisticsinfo_.Clear();
}
GetAllDailyStatisticsResponse::GetAllDailyStatisticsResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetAllDailyStatisticsResponse)
}
GetAllDailyStatisticsResponse::GetAllDailyStatisticsResponse(const GetAllDailyStatisticsResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetAllDailyStatisticsResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.dailystatisticsinfo_){from._impl_.dailystatisticsinfo_}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetAllDailyStatisticsResponse)
}

inline void GetAllDailyStatisticsResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.dailystatisticsinfo_){arena}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetAllDailyStatisticsResponse::~GetAllDailyStatisticsResponse() {
  // @@protoc_insertion_point(destructor:proto.GetAllDailyStatisticsResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetAllDailyStatisticsResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.dailystatisticsinfo_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void GetAllDailyStatisticsResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetAllDailyStatisticsResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetAllDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.dailystatisticsinfo_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetAllDailyStatisticsResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_dailystatisticsinfo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetAllDailyStatisticsResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetAllDailyStatisticsResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // repeated .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_dailystatisticsinfo_size()); i < n; i++) {
    const auto& repfield = this->_internal_dailystatisticsinfo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetAllDailyStatisticsResponse)
  return target;
}

size_t GetAllDailyStatisticsResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetAllDailyStatisticsResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.DailyStatisticsMetaInfoV1 DailyStatisticsInfo = 2;
  total_size += 1UL * this->_internal_dailystatisticsinfo_size();
  for (const auto& msg : this->_impl_.dailystatisticsinfo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetAllDailyStatisticsResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetAllDailyStatisticsResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetAllDailyStatisticsResponse::GetClassData() const { return &_class_data_; }


void GetAllDailyStatisticsResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetAllDailyStatisticsResponse*>(&to_msg);
  auto& from = static_cast<const GetAllDailyStatisticsResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetAllDailyStatisticsResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.dailystatisticsinfo_.MergeFrom(from._impl_.dailystatisticsinfo_);
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetAllDailyStatisticsResponse::CopyFrom(const GetAllDailyStatisticsResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetAllDailyStatisticsResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetAllDailyStatisticsResponse::IsInitialized() const {
  return true;
}

void GetAllDailyStatisticsResponse::InternalSwap(GetAllDailyStatisticsResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.dailystatisticsinfo_.InternalSwap(&other->_impl_.dailystatisticsinfo_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetAllDailyStatisticsResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[38]);
}

// ===================================================================

class CreateSwcAttachmentAnoResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const CreateSwcAttachmentAnoResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
CreateSwcAttachmentAnoResponse::_Internal::metainfo(const CreateSwcAttachmentAnoResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void CreateSwcAttachmentAnoResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
CreateSwcAttachmentAnoResponse::CreateSwcAttachmentAnoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateSwcAttachmentAnoResponse)
}
CreateSwcAttachmentAnoResponse::CreateSwcAttachmentAnoResponse(const CreateSwcAttachmentAnoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSwcAttachmentAnoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.anoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.anoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.anoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_anoattachmentuuid().empty()) {
    _this->_impl_.anoattachmentuuid_.Set(from._internal_anoattachmentuuid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateSwcAttachmentAnoResponse)
}

inline void CreateSwcAttachmentAnoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.anoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.anoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.anoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateSwcAttachmentAnoResponse::~CreateSwcAttachmentAnoResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateSwcAttachmentAnoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSwcAttachmentAnoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.anoattachmentuuid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void CreateSwcAttachmentAnoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSwcAttachmentAnoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateSwcAttachmentAnoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.anoattachmentuuid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSwcAttachmentAnoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string AnoAttachmentUuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_anoattachmentuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.CreateSwcAttachmentAnoResponse.AnoAttachmentUuid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSwcAttachmentAnoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateSwcAttachmentAnoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // string AnoAttachmentUuid = 2;
  if (!this->_internal_anoattachmentuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_anoattachmentuuid().data(), static_cast<int>(this->_internal_anoattachmentuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.CreateSwcAttachmentAnoResponse.AnoAttachmentUuid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_anoattachmentuuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateSwcAttachmentAnoResponse)
  return target;
}

size_t CreateSwcAttachmentAnoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateSwcAttachmentAnoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string AnoAttachmentUuid = 2;
  if (!this->_internal_anoattachmentuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_anoattachmentuuid());
  }

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSwcAttachmentAnoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSwcAttachmentAnoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSwcAttachmentAnoResponse::GetClassData() const { return &_class_data_; }


void CreateSwcAttachmentAnoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSwcAttachmentAnoResponse*>(&to_msg);
  auto& from = static_cast<const CreateSwcAttachmentAnoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateSwcAttachmentAnoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_anoattachmentuuid().empty()) {
    _this->_internal_set_anoattachmentuuid(from._internal_anoattachmentuuid());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSwcAttachmentAnoResponse::CopyFrom(const CreateSwcAttachmentAnoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateSwcAttachmentAnoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSwcAttachmentAnoResponse::IsInitialized() const {
  return true;
}

void CreateSwcAttachmentAnoResponse::InternalSwap(CreateSwcAttachmentAnoResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.anoattachmentuuid_, lhs_arena,
      &other->_impl_.anoattachmentuuid_, rhs_arena
  );
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSwcAttachmentAnoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[39]);
}

// ===================================================================

class DeleteSwcAttachmentAnoResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const DeleteSwcAttachmentAnoResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
DeleteSwcAttachmentAnoResponse::_Internal::metainfo(const DeleteSwcAttachmentAnoResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void DeleteSwcAttachmentAnoResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
DeleteSwcAttachmentAnoResponse::DeleteSwcAttachmentAnoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteSwcAttachmentAnoResponse)
}
DeleteSwcAttachmentAnoResponse::DeleteSwcAttachmentAnoResponse(const DeleteSwcAttachmentAnoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteSwcAttachmentAnoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteSwcAttachmentAnoResponse)
}

inline void DeleteSwcAttachmentAnoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteSwcAttachmentAnoResponse::~DeleteSwcAttachmentAnoResponse() {
  // @@protoc_insertion_point(destructor:proto.DeleteSwcAttachmentAnoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteSwcAttachmentAnoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void DeleteSwcAttachmentAnoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteSwcAttachmentAnoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteSwcAttachmentAnoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSwcAttachmentAnoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSwcAttachmentAnoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteSwcAttachmentAnoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteSwcAttachmentAnoResponse)
  return target;
}

size_t DeleteSwcAttachmentAnoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteSwcAttachmentAnoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSwcAttachmentAnoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteSwcAttachmentAnoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSwcAttachmentAnoResponse::GetClassData() const { return &_class_data_; }


void DeleteSwcAttachmentAnoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteSwcAttachmentAnoResponse*>(&to_msg);
  auto& from = static_cast<const DeleteSwcAttachmentAnoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteSwcAttachmentAnoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSwcAttachmentAnoResponse::CopyFrom(const DeleteSwcAttachmentAnoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteSwcAttachmentAnoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSwcAttachmentAnoResponse::IsInitialized() const {
  return true;
}

void DeleteSwcAttachmentAnoResponse::InternalSwap(DeleteSwcAttachmentAnoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSwcAttachmentAnoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[40]);
}

// ===================================================================

class UpdateSwcAttachmentAnoResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const UpdateSwcAttachmentAnoResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
UpdateSwcAttachmentAnoResponse::_Internal::metainfo(const UpdateSwcAttachmentAnoResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void UpdateSwcAttachmentAnoResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
UpdateSwcAttachmentAnoResponse::UpdateSwcAttachmentAnoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateSwcAttachmentAnoResponse)
}
UpdateSwcAttachmentAnoResponse::UpdateSwcAttachmentAnoResponse(const UpdateSwcAttachmentAnoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateSwcAttachmentAnoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateSwcAttachmentAnoResponse)
}

inline void UpdateSwcAttachmentAnoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateSwcAttachmentAnoResponse::~UpdateSwcAttachmentAnoResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateSwcAttachmentAnoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateSwcAttachmentAnoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void UpdateSwcAttachmentAnoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateSwcAttachmentAnoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateSwcAttachmentAnoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSwcAttachmentAnoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSwcAttachmentAnoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateSwcAttachmentAnoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateSwcAttachmentAnoResponse)
  return target;
}

size_t UpdateSwcAttachmentAnoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateSwcAttachmentAnoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSwcAttachmentAnoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateSwcAttachmentAnoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSwcAttachmentAnoResponse::GetClassData() const { return &_class_data_; }


void UpdateSwcAttachmentAnoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateSwcAttachmentAnoResponse*>(&to_msg);
  auto& from = static_cast<const UpdateSwcAttachmentAnoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateSwcAttachmentAnoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSwcAttachmentAnoResponse::CopyFrom(const UpdateSwcAttachmentAnoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateSwcAttachmentAnoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSwcAttachmentAnoResponse::IsInitialized() const {
  return true;
}

void UpdateSwcAttachmentAnoResponse::InternalSwap(UpdateSwcAttachmentAnoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSwcAttachmentAnoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[41]);
}

// ===================================================================

class GetSwcAttachmentAnoResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetSwcAttachmentAnoResponse* msg);
  static const ::proto::SwcAttachmentAnoV1& swcattachmentano(const GetSwcAttachmentAnoResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetSwcAttachmentAnoResponse::_Internal::metainfo(const GetSwcAttachmentAnoResponse* msg) {
  return *msg->_impl_.metainfo_;
}
const ::proto::SwcAttachmentAnoV1&
GetSwcAttachmentAnoResponse::_Internal::swcattachmentano(const GetSwcAttachmentAnoResponse* msg) {
  return *msg->_impl_.swcattachmentano_;
}
void GetSwcAttachmentAnoResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSwcAttachmentAnoResponse::clear_swcattachmentano() {
  if (GetArenaForAllocation() == nullptr && _impl_.swcattachmentano_ != nullptr) {
    delete _impl_.swcattachmentano_;
  }
  _impl_.swcattachmentano_ = nullptr;
}
GetSwcAttachmentAnoResponse::GetSwcAttachmentAnoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcAttachmentAnoResponse)
}
GetSwcAttachmentAnoResponse::GetSwcAttachmentAnoResponse(const GetSwcAttachmentAnoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcAttachmentAnoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcattachmentano_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  if (from._internal_has_swcattachmentano()) {
    _this->_impl_.swcattachmentano_ = new ::proto::SwcAttachmentAnoV1(*from._impl_.swcattachmentano_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcAttachmentAnoResponse)
}

inline void GetSwcAttachmentAnoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , decltype(_impl_.swcattachmentano_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSwcAttachmentAnoResponse::~GetSwcAttachmentAnoResponse() {
  // @@protoc_insertion_point(destructor:proto.GetSwcAttachmentAnoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcAttachmentAnoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
  if (this != internal_default_instance()) delete _impl_.swcattachmentano_;
}

void GetSwcAttachmentAnoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcAttachmentAnoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcAttachmentAnoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  if (GetArenaForAllocation() == nullptr && _impl_.swcattachmentano_ != nullptr) {
    delete _impl_.swcattachmentano_;
  }
  _impl_.swcattachmentano_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcAttachmentAnoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // .proto.SwcAttachmentAnoV1 SwcAttachmentAno = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_swcattachmentano(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcAttachmentAnoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcAttachmentAnoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // .proto.SwcAttachmentAnoV1 SwcAttachmentAno = 2;
  if (this->_internal_has_swcattachmentano()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(2, _Internal::swcattachmentano(this),
        _Internal::swcattachmentano(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcAttachmentAnoResponse)
  return target;
}

size_t GetSwcAttachmentAnoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcAttachmentAnoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  // .proto.SwcAttachmentAnoV1 SwcAttachmentAno = 2;
  if (this->_internal_has_swcattachmentano()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.swcattachmentano_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcAttachmentAnoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcAttachmentAnoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcAttachmentAnoResponse::GetClassData() const { return &_class_data_; }


void GetSwcAttachmentAnoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcAttachmentAnoResponse*>(&to_msg);
  auto& from = static_cast<const GetSwcAttachmentAnoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcAttachmentAnoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  if (from._internal_has_swcattachmentano()) {
    _this->_internal_mutable_swcattachmentano()->::proto::SwcAttachmentAnoV1::MergeFrom(
        from._internal_swcattachmentano());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcAttachmentAnoResponse::CopyFrom(const GetSwcAttachmentAnoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcAttachmentAnoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcAttachmentAnoResponse::IsInitialized() const {
  return true;
}

void GetSwcAttachmentAnoResponse::InternalSwap(GetSwcAttachmentAnoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(GetSwcAttachmentAnoResponse, _impl_.swcattachmentano_)
      + sizeof(GetSwcAttachmentAnoResponse::_impl_.swcattachmentano_)
      - PROTOBUF_FIELD_OFFSET(GetSwcAttachmentAnoResponse, _impl_.metainfo_)>(
          reinterpret_cast<char*>(&_impl_.metainfo_),
          reinterpret_cast<char*>(&other->_impl_.metainfo_));
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcAttachmentAnoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[42]);
}

// ===================================================================

class CreateSwcAttachmentApoResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const CreateSwcAttachmentApoResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
CreateSwcAttachmentApoResponse::_Internal::metainfo(const CreateSwcAttachmentApoResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void CreateSwcAttachmentApoResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
CreateSwcAttachmentApoResponse::CreateSwcAttachmentApoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.CreateSwcAttachmentApoResponse)
}
CreateSwcAttachmentApoResponse::CreateSwcAttachmentApoResponse(const CreateSwcAttachmentApoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  CreateSwcAttachmentApoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.apoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  _impl_.apoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (!from._internal_apoattachmentuuid().empty()) {
    _this->_impl_.apoattachmentuuid_.Set(from._internal_apoattachmentuuid(), 
      _this->GetArenaForAllocation());
  }
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.CreateSwcAttachmentApoResponse)
}

inline void CreateSwcAttachmentApoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.apoattachmentuuid_){}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
  _impl_.apoattachmentuuid_.InitDefault();
  #ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
    _impl_.apoattachmentuuid_.Set("", GetArenaForAllocation());
  #endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
}

CreateSwcAttachmentApoResponse::~CreateSwcAttachmentApoResponse() {
  // @@protoc_insertion_point(destructor:proto.CreateSwcAttachmentApoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void CreateSwcAttachmentApoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.apoattachmentuuid_.Destroy();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void CreateSwcAttachmentApoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void CreateSwcAttachmentApoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.CreateSwcAttachmentApoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.apoattachmentuuid_.ClearToEmpty();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* CreateSwcAttachmentApoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // string ApoAttachmentUuid = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          auto str = _internal_mutable_apoattachmentuuid();
          ptr = ::_pbi::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(ptr);
          CHK_(::_pbi::VerifyUTF8(str, "proto.CreateSwcAttachmentApoResponse.ApoAttachmentUuid"));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* CreateSwcAttachmentApoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.CreateSwcAttachmentApoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // string ApoAttachmentUuid = 2;
  if (!this->_internal_apoattachmentuuid().empty()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_apoattachmentuuid().data(), static_cast<int>(this->_internal_apoattachmentuuid().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "proto.CreateSwcAttachmentApoResponse.ApoAttachmentUuid");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_apoattachmentuuid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.CreateSwcAttachmentApoResponse)
  return target;
}

size_t CreateSwcAttachmentApoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.CreateSwcAttachmentApoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string ApoAttachmentUuid = 2;
  if (!this->_internal_apoattachmentuuid().empty()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_apoattachmentuuid());
  }

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData CreateSwcAttachmentApoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    CreateSwcAttachmentApoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*CreateSwcAttachmentApoResponse::GetClassData() const { return &_class_data_; }


void CreateSwcAttachmentApoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<CreateSwcAttachmentApoResponse*>(&to_msg);
  auto& from = static_cast<const CreateSwcAttachmentApoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.CreateSwcAttachmentApoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_apoattachmentuuid().empty()) {
    _this->_internal_set_apoattachmentuuid(from._internal_apoattachmentuuid());
  }
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void CreateSwcAttachmentApoResponse::CopyFrom(const CreateSwcAttachmentApoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.CreateSwcAttachmentApoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CreateSwcAttachmentApoResponse::IsInitialized() const {
  return true;
}

void CreateSwcAttachmentApoResponse::InternalSwap(CreateSwcAttachmentApoResponse* other) {
  using std::swap;
  auto* lhs_arena = GetArenaForAllocation();
  auto* rhs_arena = other->GetArenaForAllocation();
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr::InternalSwap(
      &_impl_.apoattachmentuuid_, lhs_arena,
      &other->_impl_.apoattachmentuuid_, rhs_arena
  );
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata CreateSwcAttachmentApoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[43]);
}

// ===================================================================

class DeleteSwcAttachmentApoResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const DeleteSwcAttachmentApoResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
DeleteSwcAttachmentApoResponse::_Internal::metainfo(const DeleteSwcAttachmentApoResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void DeleteSwcAttachmentApoResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
DeleteSwcAttachmentApoResponse::DeleteSwcAttachmentApoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.DeleteSwcAttachmentApoResponse)
}
DeleteSwcAttachmentApoResponse::DeleteSwcAttachmentApoResponse(const DeleteSwcAttachmentApoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  DeleteSwcAttachmentApoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.DeleteSwcAttachmentApoResponse)
}

inline void DeleteSwcAttachmentApoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

DeleteSwcAttachmentApoResponse::~DeleteSwcAttachmentApoResponse() {
  // @@protoc_insertion_point(destructor:proto.DeleteSwcAttachmentApoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void DeleteSwcAttachmentApoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void DeleteSwcAttachmentApoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void DeleteSwcAttachmentApoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.DeleteSwcAttachmentApoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* DeleteSwcAttachmentApoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* DeleteSwcAttachmentApoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.DeleteSwcAttachmentApoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.DeleteSwcAttachmentApoResponse)
  return target;
}

size_t DeleteSwcAttachmentApoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.DeleteSwcAttachmentApoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData DeleteSwcAttachmentApoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    DeleteSwcAttachmentApoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*DeleteSwcAttachmentApoResponse::GetClassData() const { return &_class_data_; }


void DeleteSwcAttachmentApoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<DeleteSwcAttachmentApoResponse*>(&to_msg);
  auto& from = static_cast<const DeleteSwcAttachmentApoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.DeleteSwcAttachmentApoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void DeleteSwcAttachmentApoResponse::CopyFrom(const DeleteSwcAttachmentApoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.DeleteSwcAttachmentApoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DeleteSwcAttachmentApoResponse::IsInitialized() const {
  return true;
}

void DeleteSwcAttachmentApoResponse::InternalSwap(DeleteSwcAttachmentApoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata DeleteSwcAttachmentApoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[44]);
}

// ===================================================================

class UpdateSwcAttachmentApoResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const UpdateSwcAttachmentApoResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
UpdateSwcAttachmentApoResponse::_Internal::metainfo(const UpdateSwcAttachmentApoResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void UpdateSwcAttachmentApoResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
UpdateSwcAttachmentApoResponse::UpdateSwcAttachmentApoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.UpdateSwcAttachmentApoResponse)
}
UpdateSwcAttachmentApoResponse::UpdateSwcAttachmentApoResponse(const UpdateSwcAttachmentApoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  UpdateSwcAttachmentApoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.UpdateSwcAttachmentApoResponse)
}

inline void UpdateSwcAttachmentApoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

UpdateSwcAttachmentApoResponse::~UpdateSwcAttachmentApoResponse() {
  // @@protoc_insertion_point(destructor:proto.UpdateSwcAttachmentApoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void UpdateSwcAttachmentApoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void UpdateSwcAttachmentApoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void UpdateSwcAttachmentApoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.UpdateSwcAttachmentApoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* UpdateSwcAttachmentApoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* UpdateSwcAttachmentApoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.UpdateSwcAttachmentApoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.UpdateSwcAttachmentApoResponse)
  return target;
}

size_t UpdateSwcAttachmentApoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.UpdateSwcAttachmentApoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData UpdateSwcAttachmentApoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    UpdateSwcAttachmentApoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*UpdateSwcAttachmentApoResponse::GetClassData() const { return &_class_data_; }


void UpdateSwcAttachmentApoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<UpdateSwcAttachmentApoResponse*>(&to_msg);
  auto& from = static_cast<const UpdateSwcAttachmentApoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.UpdateSwcAttachmentApoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void UpdateSwcAttachmentApoResponse::CopyFrom(const UpdateSwcAttachmentApoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.UpdateSwcAttachmentApoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool UpdateSwcAttachmentApoResponse::IsInitialized() const {
  return true;
}

void UpdateSwcAttachmentApoResponse::InternalSwap(UpdateSwcAttachmentApoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata UpdateSwcAttachmentApoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[45]);
}

// ===================================================================

class GetSwcAttachmentApoResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const GetSwcAttachmentApoResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
GetSwcAttachmentApoResponse::_Internal::metainfo(const GetSwcAttachmentApoResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void GetSwcAttachmentApoResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
void GetSwcAttachmentApoResponse::clear_swcattachmentapo() {
  _impl_.swcattachmentapo_.Clear();
}
GetSwcAttachmentApoResponse::GetSwcAttachmentApoResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.GetSwcAttachmentApoResponse)
}
GetSwcAttachmentApoResponse::GetSwcAttachmentApoResponse(const GetSwcAttachmentApoResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  GetSwcAttachmentApoResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.swcattachmentapo_){from._impl_.swcattachmentapo_}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.GetSwcAttachmentApoResponse)
}

inline void GetSwcAttachmentApoResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.swcattachmentapo_){arena}
    , decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

GetSwcAttachmentApoResponse::~GetSwcAttachmentApoResponse() {
  // @@protoc_insertion_point(destructor:proto.GetSwcAttachmentApoResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void GetSwcAttachmentApoResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  _impl_.swcattachmentapo_.~RepeatedPtrField();
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void GetSwcAttachmentApoResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void GetSwcAttachmentApoResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.GetSwcAttachmentApoResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.swcattachmentapo_.Clear();
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* GetSwcAttachmentApoResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      // repeated .proto.SwcAttachmentApoV1 SwcAttachmentApo = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(_internal_add_swcattachmentapo(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<18>(ptr));
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* GetSwcAttachmentApoResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.GetSwcAttachmentApoResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  // repeated .proto.SwcAttachmentApoV1 SwcAttachmentApo = 2;
  for (unsigned i = 0,
      n = static_cast<unsigned>(this->_internal_swcattachmentapo_size()); i < n; i++) {
    const auto& repfield = this->_internal_swcattachmentapo(i);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
        InternalWriteMessage(2, repfield, repfield.GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.GetSwcAttachmentApoResponse)
  return target;
}

size_t GetSwcAttachmentApoResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.GetSwcAttachmentApoResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .proto.SwcAttachmentApoV1 SwcAttachmentApo = 2;
  total_size += 1UL * this->_internal_swcattachmentapo_size();
  for (const auto& msg : this->_impl_.swcattachmentapo_) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(msg);
  }

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData GetSwcAttachmentApoResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    GetSwcAttachmentApoResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetSwcAttachmentApoResponse::GetClassData() const { return &_class_data_; }


void GetSwcAttachmentApoResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<GetSwcAttachmentApoResponse*>(&to_msg);
  auto& from = static_cast<const GetSwcAttachmentApoResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.GetSwcAttachmentApoResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_impl_.swcattachmentapo_.MergeFrom(from._impl_.swcattachmentapo_);
  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void GetSwcAttachmentApoResponse::CopyFrom(const GetSwcAttachmentApoResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.GetSwcAttachmentApoResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool GetSwcAttachmentApoResponse::IsInitialized() const {
  return true;
}

void GetSwcAttachmentApoResponse::InternalSwap(GetSwcAttachmentApoResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.swcattachmentapo_.InternalSwap(&other->_impl_.swcattachmentapo_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata GetSwcAttachmentApoResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[46]);
}

// ===================================================================

class RevertSwcVersionResponse::_Internal {
 public:
  static const ::proto::ResponseMetaInfoV1& metainfo(const RevertSwcVersionResponse* msg);
};

const ::proto::ResponseMetaInfoV1&
RevertSwcVersionResponse::_Internal::metainfo(const RevertSwcVersionResponse* msg) {
  return *msg->_impl_.metainfo_;
}
void RevertSwcVersionResponse::clear_metainfo() {
  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
}
RevertSwcVersionResponse::RevertSwcVersionResponse(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                         bool is_message_owned)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena, is_message_owned) {
  SharedCtor(arena, is_message_owned);
  // @@protoc_insertion_point(arena_constructor:proto.RevertSwcVersionResponse)
}
RevertSwcVersionResponse::RevertSwcVersionResponse(const RevertSwcVersionResponse& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  RevertSwcVersionResponse* const _this = this; (void)_this;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}};

  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_metainfo()) {
    _this->_impl_.metainfo_ = new ::proto::ResponseMetaInfoV1(*from._impl_.metainfo_);
  }
  // @@protoc_insertion_point(copy_constructor:proto.RevertSwcVersionResponse)
}

inline void RevertSwcVersionResponse::SharedCtor(
    ::_pb::Arena* arena, bool is_message_owned) {
  (void)arena;
  (void)is_message_owned;
  new (&_impl_) Impl_{
      decltype(_impl_.metainfo_){nullptr}
    , /*decltype(_impl_._cached_size_)*/{}
  };
}

RevertSwcVersionResponse::~RevertSwcVersionResponse() {
  // @@protoc_insertion_point(destructor:proto.RevertSwcVersionResponse)
  if (auto *arena = _internal_metadata_.DeleteReturnArena<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>()) {
  (void)arena;
    return;
  }
  SharedDtor();
}

inline void RevertSwcVersionResponse::SharedDtor() {
  GOOGLE_DCHECK(GetArenaForAllocation() == nullptr);
  if (this != internal_default_instance()) delete _impl_.metainfo_;
}

void RevertSwcVersionResponse::SetCachedSize(int size) const {
  _impl_._cached_size_.Set(size);
}

void RevertSwcVersionResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:proto.RevertSwcVersionResponse)
  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArenaForAllocation() == nullptr && _impl_.metainfo_ != nullptr) {
    delete _impl_.metainfo_;
  }
  _impl_.metainfo_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* RevertSwcVersionResponse::_InternalParse(const char* ptr, ::_pbi::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    uint32_t tag;
    ptr = ::_pbi::ReadTag(ptr, &tag);
    switch (tag >> 3) {
      // .proto.ResponseMetaInfoV1 metaInfo = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<uint8_t>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_metainfo(), ptr);
          CHK_(ptr);
        } else
          goto handle_unusual;
        continue;
      default:
        goto handle_unusual;
    }  // switch
  handle_unusual:
    if ((tag == 0) || ((tag & 7) == 4)) {
      CHK_(ptr);
      ctx->SetLastTag(tag);
      goto message_done;
    }
    ptr = UnknownFieldParse(
        tag,
        _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
        ptr, ctx);
    CHK_(ptr != nullptr);
  }  // while
message_done:
  return ptr;
failure:
  ptr = nullptr;
  goto message_done;
#undef CHK_
}

uint8_t* RevertSwcVersionResponse::_InternalSerialize(
    uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:proto.RevertSwcVersionResponse)
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(1, _Internal::metainfo(this),
        _Internal::metainfo(this).GetCachedSize(), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:proto.RevertSwcVersionResponse)
  return target;
}

size_t RevertSwcVersionResponse::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:proto.RevertSwcVersionResponse)
  size_t total_size = 0;

  uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .proto.ResponseMetaInfoV1 metaInfo = 1;
  if (this->_internal_has_metainfo()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *_impl_.metainfo_);
  }

  return MaybeComputeUnknownFieldsSize(total_size, &_impl_._cached_size_);
}

const ::PROTOBUF_NAMESPACE_ID::Message::ClassData RevertSwcVersionResponse::_class_data_ = {
    ::PROTOBUF_NAMESPACE_ID::Message::CopyWithSourceCheck,
    RevertSwcVersionResponse::MergeImpl
};
const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*RevertSwcVersionResponse::GetClassData() const { return &_class_data_; }


void RevertSwcVersionResponse::MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg) {
  auto* const _this = static_cast<RevertSwcVersionResponse*>(&to_msg);
  auto& from = static_cast<const RevertSwcVersionResponse&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:proto.RevertSwcVersionResponse)
  GOOGLE_DCHECK_NE(&from, _this);
  uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (from._internal_has_metainfo()) {
    _this->_internal_mutable_metainfo()->::proto::ResponseMetaInfoV1::MergeFrom(
        from._internal_metainfo());
  }
  _this->_internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
}

void RevertSwcVersionResponse::CopyFrom(const RevertSwcVersionResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:proto.RevertSwcVersionResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool RevertSwcVersionResponse::IsInitialized() const {
  return true;
}

void RevertSwcVersionResponse::InternalSwap(RevertSwcVersionResponse* other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.metainfo_, other->_impl_.metainfo_);
}

::PROTOBUF_NAMESPACE_ID::Metadata RevertSwcVersionResponse::GetMetadata() const {
  return ::_pbi::AssignDescriptors(
      &descriptor_table_Message_2fResponse_2eproto_getter, &descriptor_table_Message_2fResponse_2eproto_once,
      file_level_metadata_Message_2fResponse_2eproto[47]);
}

// @@protoc_insertion_point(namespace_scope)
}  // namespace proto
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::proto::CreateUserResponse*
Arena::CreateMaybeMessage< ::proto::CreateUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteUserResponse*
Arena::CreateMaybeMessage< ::proto::DeleteUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateUserResponse*
Arena::CreateMaybeMessage< ::proto::UpdateUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetUserResponse*
Arena::CreateMaybeMessage< ::proto::GetUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllUserResponse*
Arena::CreateMaybeMessage< ::proto::GetAllUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserLoginResponse*
Arena::CreateMaybeMessage< ::proto::UserLoginResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserLoginResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserLogoutResponse*
Arena::CreateMaybeMessage< ::proto::UserLogoutResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserLogoutResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UserOnlineHeartBeatResponse*
Arena::CreateMaybeMessage< ::proto::UserOnlineHeartBeatResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UserOnlineHeartBeatResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetUserPermissionGroupResponse*
Arena::CreateMaybeMessage< ::proto::GetUserPermissionGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetUserPermissionGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetPermissionGroupResponse*
Arena::CreateMaybeMessage< ::proto::GetPermissionGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetPermissionGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllPermissionGroupResponse*
Arena::CreateMaybeMessage< ::proto::GetAllPermissionGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllPermissionGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::ChangeUserPermissionGroupResponse*
Arena::CreateMaybeMessage< ::proto::ChangeUserPermissionGroupResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::ChangeUserPermissionGroupResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateProjectResponse*
Arena::CreateMaybeMessage< ::proto::CreateProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteProjectResponse*
Arena::CreateMaybeMessage< ::proto::DeleteProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateProjectResponse*
Arena::CreateMaybeMessage< ::proto::UpdateProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetProjectResponse*
Arena::CreateMaybeMessage< ::proto::GetProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllProjectResponse*
Arena::CreateMaybeMessage< ::proto::GetAllProjectResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllProjectResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateSwcResponse*
Arena::CreateMaybeMessage< ::proto::CreateSwcResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateSwcResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteSwcResponse*
Arena::CreateMaybeMessage< ::proto::DeleteSwcResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteSwcResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateSwcResponse*
Arena::CreateMaybeMessage< ::proto::UpdateSwcResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateSwcResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcMetaInfoResponse*
Arena::CreateMaybeMessage< ::proto::GetSwcMetaInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcMetaInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllSwcMetaInfoResponse*
Arena::CreateMaybeMessage< ::proto::GetAllSwcMetaInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllSwcMetaInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateSwcSnapshotResponse*
Arena::CreateMaybeMessage< ::proto::CreateSwcSnapshotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateSwcSnapshotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllSnapshotMetaInfoResponse*
Arena::CreateMaybeMessage< ::proto::GetAllSnapshotMetaInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllSnapshotMetaInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSnapshotResponse*
Arena::CreateMaybeMessage< ::proto::GetSnapshotResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSnapshotResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllIncrementOperationMetaInfoResponse*
Arena::CreateMaybeMessage< ::proto::GetAllIncrementOperationMetaInfoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllIncrementOperationMetaInfoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetIncrementOperationResponse*
Arena::CreateMaybeMessage< ::proto::GetIncrementOperationResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetIncrementOperationResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateSwcNodeDataResponse*
Arena::CreateMaybeMessage< ::proto::CreateSwcNodeDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateSwcNodeDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteSwcNodeDataResponse*
Arena::CreateMaybeMessage< ::proto::DeleteSwcNodeDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteSwcNodeDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateSwcNodeDataResponse*
Arena::CreateMaybeMessage< ::proto::UpdateSwcNodeDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateSwcNodeDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcNodeDataResponse*
Arena::CreateMaybeMessage< ::proto::GetSwcNodeDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcNodeDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcFullNodeDataResponse*
Arena::CreateMaybeMessage< ::proto::GetSwcFullNodeDataResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcFullNodeDataResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcNodeDataListByTimeAndUserResponse*
Arena::CreateMaybeMessage< ::proto::GetSwcNodeDataListByTimeAndUserResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcNodeDataListByTimeAndUserResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::BackupFullDatabaseResponse*
Arena::CreateMaybeMessage< ::proto::BackupFullDatabaseResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::BackupFullDatabaseResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateDailyStatisticsResponse*
Arena::CreateMaybeMessage< ::proto::CreateDailyStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateDailyStatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteDailyStatisticsResponse*
Arena::CreateMaybeMessage< ::proto::DeleteDailyStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteDailyStatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateDailyStatisticsResponse*
Arena::CreateMaybeMessage< ::proto::UpdateDailyStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateDailyStatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetDailyStatisticsResponse*
Arena::CreateMaybeMessage< ::proto::GetDailyStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetDailyStatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetAllDailyStatisticsResponse*
Arena::CreateMaybeMessage< ::proto::GetAllDailyStatisticsResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetAllDailyStatisticsResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateSwcAttachmentAnoResponse*
Arena::CreateMaybeMessage< ::proto::CreateSwcAttachmentAnoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateSwcAttachmentAnoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteSwcAttachmentAnoResponse*
Arena::CreateMaybeMessage< ::proto::DeleteSwcAttachmentAnoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteSwcAttachmentAnoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateSwcAttachmentAnoResponse*
Arena::CreateMaybeMessage< ::proto::UpdateSwcAttachmentAnoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateSwcAttachmentAnoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcAttachmentAnoResponse*
Arena::CreateMaybeMessage< ::proto::GetSwcAttachmentAnoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcAttachmentAnoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::CreateSwcAttachmentApoResponse*
Arena::CreateMaybeMessage< ::proto::CreateSwcAttachmentApoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::CreateSwcAttachmentApoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::DeleteSwcAttachmentApoResponse*
Arena::CreateMaybeMessage< ::proto::DeleteSwcAttachmentApoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::DeleteSwcAttachmentApoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::UpdateSwcAttachmentApoResponse*
Arena::CreateMaybeMessage< ::proto::UpdateSwcAttachmentApoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::UpdateSwcAttachmentApoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::GetSwcAttachmentApoResponse*
Arena::CreateMaybeMessage< ::proto::GetSwcAttachmentApoResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::GetSwcAttachmentApoResponse >(arena);
}
template<> PROTOBUF_NOINLINE ::proto::RevertSwcVersionResponse*
Arena::CreateMaybeMessage< ::proto::RevertSwcVersionResponse >(Arena* arena) {
  return Arena::CreateMessageInternal< ::proto::RevertSwcVersionResponse >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
